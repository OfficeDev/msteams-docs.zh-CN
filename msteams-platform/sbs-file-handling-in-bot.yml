### YamlMime:Tutorial
title: 使用机器人在 Teams 中上传文件
metadata:
  title: 使用机器人在 Teams 中上传文件
  description: 本教程介绍如何从机器人将文件上传到 Teams，以及如何接收作为附件发送到机器人的文件。
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: 有关通过机器人发送和接收文件的详细信息
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 558b96a3cdd7cc5737de2e3fcad19797b30c607f
  ms.sourcegitcommit: e16b51a49756e0fe4eaf239898e28d3021f552da
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 06/04/2022
  ms.locfileid: "65887770"
items:
- durationInMinutes: 1
  content: "机器人使用 Teams API 与个人聊天中的用户一起发送和接收文件。 Teams 中共享的文件可以显示为卡片，并允许丰富的应用内查看。 机器人还有助于实现涉及编辑文件内容的费用报告、图像识别、文件存档和电子签名等功能。 \n\n\n**使用机器人在 Teams 中上传文件的主要功能** \n\n  * 使用机器人将文件上传到 Teams\n  * 接收作为附件发送到机器人的文件\n  * 提取消息中发送的内联图像\n\n本分步指南可帮助你使用机器人在 Teams 中上传文件。 你将看到以下输出：\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"输出映像\" border=\"true\":::\n"
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境： \n\n* 具有有效帐户[的 Microsoft Teams](https://teams.microsoft.com/)\n* [最新版本的 Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [最新版本的 .NET Core SDK](https://dotnet.microsoft.com/download)。\n* [最新版本的 ngrok](https://ngrok.com/download) (仅用于开发人员箱测试) 或任何等效的隧道解决方案\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [身份验证](https://ngrok.com/download)。\n"
- title: 设置本地环境
  durationInMinutes: 1
  content: "\n1. 打开 [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples)。\n1. 选择 **“代码**”。\n1. 在下拉菜单中，选择 **“使用 GitHub Desktop 打开**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/botbuilder-sample.png\" alt-text=\"克隆存储库\" border=\"true\":::\n\n1. 选择 **“克隆**”。 \n"
- title: 创建和注册机器人
  durationInMinutes: 5
  content: "以下步骤可帮助你在 Azure 门户中创建和注册机器人：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务\n* 创建客户端机密以启用机器人的 SSO 身份验证\n* 添加 Teams 通道以部署机器人\n* 使用 ngrok 创建到 Web 服务器终结点的隧道\n* 将消息传送终结点添加到创建的 ngrok 隧道\n\n**创建 Azure 机器人资源**\n\n1. 转到“[Azure 门户](https://portal.azure.com/)”。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择“**Enter**”。\n1. 选择 **Azure 机器人**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/azure-new.png\" alt-text=\"azure 机器人卡\" border=\"true\":::\n   \n1. 选择“**创建**”。\n1. 在 **机器人句柄** 中输入所需的机器人句柄名称。\n1. 在 **“订阅** ”下拉列表中，选择你的订阅。\n1. 从 **“资源组** ”下拉列表中，选择现有的资源组。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selection-of-resource.png\" alt-text=\"azure 资源选择\" border=\"true\":::\n   \n     还可以创建新的资源组 (选择 **“新建** >输入资源名称>选择 **”确定**) \n\n1. 如果已创建新的资源组，请从 **“新建资源组”位置** 下拉列表中选择所需的位置。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/newresource.png\" alt-text=\"选择新的资源位置\" border=\"true\":::\n\n1. 在 **“Microsoft 应用 ID”** 部分中，默认选择 **“新建 Microsoft 应用 ID** ”。 \n\n    可以选择 **“使用现有应用注册** ”并输入 **现有应用 ID** 和 **现有应用密码**，也可以选择 **“创建新的 Microsoft 应用 ID**”。\n\n    > [!NOTE]\n    > 不能创建具有相同 **Microsoft 应用 ID** 的多个机器人。\n\n1. 选择 **“应用类型”** 作为 **多租户**。\n\n1. 然后“**审阅 + 创建**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/review-create.png\" alt-text=\"创建新机器人\" border=\"true\":::   \n\n1. 如果验证通过，请选择“**创建**”。 \n\n    预配机器人服务需要一些时间。\n\n1. 选择“**转到资源**”。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/deployment.png\" alt-text=\"选择资源\" border=\"true\":::\n    \n    Azure 机器人已创建。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/azure-bot-created.png\" alt-text=\"创建机器人\" border=\"true\":::\n\n **创建客户端机密**\n\n   如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左侧面板中，选择 **“配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n1. 在 **Microsoft 应用 ID** 旁边，选择 **“管理**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manage.png\" alt-text=\"选择“管理”\" border=\"true\":::\n\n\n1. 在 **“客户端机密** ”部分中，选择 **“新建客户端机密**”。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/new-client-secret.png\" alt-text=\"添加客户端机密\" border=\"true\":::\n\n        \n   将显示 **“添加客户端机密** ”窗口。\n\n1. 输入 **说明**。\n\n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-client-secret.png\" alt-text=\"添加客户端机密和说明\" border=\"true\"::: \n\n   \n1. 在 **“值** ”列中，选择 **“复制到剪贴板**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/copy-value.png\" alt-text=\"将值复制到剪贴板\" border=\"true\":::\n\n         \n   > [!TIP]\n   > 保存 **客户端机密** 值或应用密码以供将来参考。\n\n **添加 Teams 频道**\n\n1. 选择“主页”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/go-to-home.png\" alt-text=\"选择“主页”\" border=\"true\":::    \n\n   \n1. 从 **最近的资源** 中选择机器人。\n\n1. 在左窗格中选择 **“通道** ”。 \n\n1. 选择 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. 选中该复选框以接受 **服务条款**。\n\n1. 选择 **“同意**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/terms.png\" alt-text=\"选择术语\" border=\"true\":::\n\n  \n1. 选择“**应用**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams.png\" alt-text=\"microsoft teams\" border=\"true\":::\n\n  \n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 或命令提示符创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中提供的步骤注册 ngrok 并进行身份验证。 然后运行该 `ngrok http -host-header=localhost 3978` 命令。\n\n**添加消息传送终结点**\n\n   1. 从 ngrok 复制 HTTPS URL。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/ngrok.png\" alt-text=\"应用 ngrok\" border=\"true\"::: \n\n      > [!NOTE]\n      > ngrok 中的 HTTPS URL 是完全限定的域名。\n      > 这是 `WebAppDomain` 一个完全限定的域名，不包括 `https://` 在其中。\n\n   1.  在创建的 Azure 机器人 **的“设置”** 中，选择 **“配置**”。\n\n   1.  在 **消息传送终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-api-teams-bot.png\" alt-text=\"添加 api\" border=\"true\":::\n    \n   1. 选择“**应用**”。\n\n      已在 Azure 机器人服务中成功设置机器人。\n"
- title: 更新 Azure AD 应用注册
  durationInMinutes: 5
  content: "1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择 **Azure Active Directory**。\n\n1. 在左窗格中，选择 **“应用注册**”。\n\n1. 选择机器人。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/select-your-bot.png\" alt-text=\"选择机器人\" border=\"true\":::\n\n1. 选择 **“公开 API**”。\n\n1. 选择 **“设置**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/set-api.png\" alt-text=\"设置 api\" border=\"true\":::\n\n1. 设置应用程序 **ID URI** 的形式 `api://your ngrok/botid-{your AppID}`。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/app-id-uri1.png\" alt-text=\"重定向 uri\" border=\"true\":::\n\n   下图显示了域名：\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/expose-api.png\" alt-text=\"api\" border=\"true\":::\n\n    > [!NOTE]\n    > 如果使用的是隧道服务（如 ngrok），请确保在 ngrok 子域发生更改时更新该值。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，新的 ngrok 子域名称在哪里 `f631****.ngrok.io` 。\n\n1. 选择“**添加作用域**”。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selectscope.png\" alt-text=\"范围的选择\" border=\"true\":::\n\n1. 在显示的面板中，输入 `access_as_user` 为 **范围名称**。\n\n1. 将 **谁可以同意？** `Admins and users`\n\n1. 若要配置具有相应作用域值 `access_as_user` 的管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入 `Teams can access the user’s profile` 为 **管理员同意显示名称**\n\n     * 输入 `Allows Teams to call the app’s web APIs as the current user` 为 **管理员同意说明**\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 为 **用户同意显示名称**\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 为 **用户同意说明**\n\n1. 确保将“状态”设置为“已启用”。\n\n1. 选择 **“添加范围** ”以保存。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-a-scope.png\" alt-text=\"添加范围\" border=\"true\":::\n\n    > [!NOTE]\n    > **范围名称** 应与应用程序 **ID** URI 匹配，`/access_as_user`并追加在末尾。</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/access-as-user.png\" alt-text=\"以用户身份显示访问权限\" border=\"true\":::\n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。\n\n1. 选择 **添加客户端应用程序**。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selectclientapp.png\" alt-text=\"客户端应用\" border=\"true\":::\n\n1. 输入 **客户端 ID**： `1fec8e78-bce4-4aaf-ab1b-5451cc387264` 适用于 Teams 移动或桌面应用程序。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-mobile.png\" alt-text=\"客户端移动\" border=\"true\":::  \n\n   可以输入 **客户端 ID**： `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` 适用于 Teams Web 应用程序。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-web.png\" alt-text=\"客户端 ID Web\" border=\"true\":::\n\n   下图显示 **客户端 ID**：\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-teams-bot.png\" alt-text=\"显示 ID\" border=\"true\":::   \n\n1. 在左侧面板中，选择 **API 权限**。 \n\n   > [!NOTE]\n   > 仅当 AAD 应用在其他租户中注册时，用户才需要同意 API 权限。\n\n1. 选择“**添加权限**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permission.png\" alt-text=\"已添加权限\" border=\"true\":::\n\n1. 选择 **Microsoft Graph**。\n\n1. 选择“**委托的权限**”。\n\n1. 添加 **User.Read** 权限。\n\n1. 选择 **添加权限**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permissions.png\" alt-text=\"已添加委派权限\" border=\"true\":::\n\n1. 在左侧面板中，选择 **“身份验证** ”以设置重定向 URI。\n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员许可，则用户必须在第一次使用应用时提供同意。\n\n     1. 选择 **添加平台**。\n    \n     1. 选择“Web”\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configure-web.png\" alt-text=\"Web 配置\" border=\"true\"::: \n\n     1. 通过追加到完全限定的域名，输入应用的 `auth-end` 重定向 URI：</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 通过选择以下复选框启用 **隐式授予和混合流** ：\n         * **ID 令牌**\n         * **访问令牌**\n\n     1. 选择“**配置**”。  \n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configuration-web.png\" alt-text=\"configuration\" border=\"true\":::\n\n  **更新 TeamsAppManifest**\n\n  1. 从左窗格中选择“**清单**”。\n\n  1. 设置配置项 **“accessTokenAcceptedVersion”：2**。 如果未设置，请将其值更改为 `2` 并选择 **“保存**”。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manifest-value.png\" alt-text=\"打开清单文件\" border=\"true\":::\n    \n     > [!NOTE]\n     > 如果已在 Teams 中测试机器人，请注销此应用并注销 Teams。 若要查看此更改，请再次登录。\n\n  **设置机器人服务连接**\n\n  1. 转到 **“配置”页** > **“添加 OAuth 连接设置**”。\n\n  1. 选择“**添加 OAuth 连接设置**”。\n\n  1. 在 **“新建连接设置**”中，输入以下详细信息：\n\n      * **名称** 输入 `name for your new connection setting. You can use the name in the settings of your bot service code`\n      * **服务提供程序** 选择 `Azure Active Directory V2`\n      * **客户端 ID**`Microsoft App ID`\n      * **客户端密码** `Value of the client secret ID`\n      * **令牌 Exchange URL** 使用之前在 `Application ID URI` 公开 API 终结点时获取的 URL\n      * **租户 ID** 输入 `common`\n      * **范围** 输入 `User.Read`\n \n  1. 选择 **保存**。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/new-connection-setting.png\" alt-text=\"设置新连接\" border=\"true\":::\n"
- title: 设置应用设置和清单文件
  durationInMinutes: 2
  content: "1. 导航到克隆存储库中的 **appsettings.json** 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-file.png\" alt-text=\"应用设置清单\" border=\"true\":::\n                  \n1. 在 Visual Studio 中打开 **appsettings.json** 。\n\n1. 更新以下信息：\n\n     * 设置 `\"MicrosoftAppType\"` 为 **MultiTenant**\n     * 设置 `\"MicrosoftAppId\"` 为机器人的 **Microsoft 应用 ID**\n     * 设置 `\"MicrosoftAppPassword\"` 为机器人的客户端机密 ID 值\n     * 为 MultiTenant 机器人设置 `\"MicrosoftAppTenantId\"` 为空白\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-json1.png\" alt-text=\"visual Studio 中的 appsettings 文件\" border=\"true\":::\n       \n1. 导航到克隆存储库中的 **manifest.json** 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-app-manifest.png\" alt-text=\"打开清单文件\" border=\"true\":::\n     \n1. 在 Visual Studio 中打开 **manifest.json** 并进行以下更改：\n\n   将所有事件 `<<YOUR-MICROSOFT-APP-ID>>` 替换为机器人的 **Microsoft 应用 ID**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id.png\" alt-text=\"替换机器人 ID\" border=\"true\"::: \n"
- title: 生成并运行服务
  durationInMinutes: 2
  content: "**使用 Visual Studio 或命令行生成和运行服务**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/visualstudio)\n\n  1. 启动 Visual Studio。\n  \n  1. 导航到 **文件** > **打开** > **项目/解决方案**。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/VS-open-file.png\" alt-text=\"Visualstudio\" border=\"true\":::      \n   \n  1. 从 **56.teams-file-upload** 文件夹中选择 **TeamsFileUpload.csproj** 文件。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/csproj-folder.png\" alt-text=\"folder\" border=\"true\":::        \n\n  1. 从 **视图** 打开 **解决方案资源管理器**。\n\n     \n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/solutionexplorer.png\" alt-text=\"view\" border=\"true\":::\n\n     \n  1. 右键单击 **TeamsFileUpload**。\n\n  1. 选择 **“设置为启动项目**”。\n     \n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-file-upload.png\" alt-text=\"启动项目\" border=\"true\":::\n     \n  1. 按 **F5** 运行项目。\n\n  1. 如果出现以下对话框，请选择“**是**”：\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/certificate.png\" alt-text=\"约\" border=\"true\":::\n\n     \n     随即会打开一个网页，其中包含一条消息：**机器人已就绪！**\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/file-bot.png\" alt-text=\"机器人已准备就绪\" border=\"true\":::\n\n  \n\n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在命令提示符窗口中导航到 **BotBuilder-Samples >示例> csharp_dotnetcore > 50.teams-messaging-extensions-search** ，并输入以下命令：\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: 在 Teams 中添加文件上传机器人
  durationInMinutes: 2
  content: "1. 在克隆的存储库中，导航到 **csharp_dotnetcore** > **56.teams-file-upload** > **TeamsAppManifest**。\n\n1. 使用 **TeamsAppManifest** 文件夹中存在的以下文件创建.zip： \n  * manifest.json\n  * icon-outline.png\n  * icon-color.png \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-upload-manifest.png\" alt-text=\"manifest 文件夹\" border=\"true\":::\n\n 1. 转到 **Microsoft Teams**。\n\n 1. 选择“**应用**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/AppStore1.png\" alt-text=\"添加应用\" border=\"true\"::: \n\n 1. 在左下角，选择 **“管理应用**”。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manage-apps.png\" alt-text=\"应用程序\" border=\"true\":::\n\n 1. 选择 **“上传自定义应用”**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/upload-custom-app.png\" alt-text=\"自定义应用\" border=\"true\":::\n\n 1. 选择 **“打开** ”可上传在 **TeamsAppManifest** 文件夹中创建的.zip文件。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-manifest.png\" alt-text=\"清单打开\" border=\"true\"::: \n\n 1. 选择“**添加**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-file-bot.png\" alt-text=\"添加\" border=\"true\"::: \n\n  1. 在撰写消息区域中，键入 **hi** 并等待几秒钟，以便它使用卡片进行响应。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/respond-bot.png\" alt-text=\"由机器人发送的卡片\" border=\"true\":::\n"
- title: 在 Teams 中与机器人交互
  durationInMinutes: 2
  content: "1. 向机器人发送消息。 它使用卡片进行响应，以获取上传文件的权限。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-1.png\" alt-text=\"机器人发送卡片\" border=\"true\":::\n\n1. 选择 **“允许**”。 文件 `teams-logo.png` 将上传到文件目录，该目录已准备就绪，可供下载。\n     \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-2.png\" alt-text=\"teams 徽标\" border=\"true\":::\n\n1. 在 Teams 中将文件作为附件发送到机器人。 它用消息 `Received and Saved`进行响应。 可以从 **“文件”** 选项卡查看附件。\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-3.png\" alt-text=\"发送文件\" border=\"true\":::\n\n1. 将图像作为附件发送。 它用消息 `Received and saved`进行响应。 可以在聊天窗口和 **“文件”** 选项卡上查看图像。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-4.png\" alt-text=\"received\" border=\"true\":::\n  \n    > [!NOTE]\n    >  在个人范围内安装机器人后，用户会与机器人进行一对一聊天。\n  \n"
- title: 完成质询
  durationInMinutes: 1
  content: "你想出了这样的事吗？\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"最终图像\" border=\"true\"::: \n"
- content: 你已完成本教程。 现在，可以使用机器人在 Teams 中上传文件。
