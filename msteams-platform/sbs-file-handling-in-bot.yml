### YamlMime:Tutorial
title: 使用机器人在 Teams 中上传文件
metadata:
  title: 使用机器人在 Teams 中上传文件
  description: 了解如何从机器人将文件上传到 Teams，以及如何接收以附件的形式发送到机器人的文件。
  audience: Developer
  level: Beginner
  ms.date: 28/12/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/bots-filesv4.md
  nextTutorialTitle: 详细了解如何通过机器人发送和接收文件
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 8ea4bb70c0acb8eb646b214e19adb134e54b420c
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740455"
items:
- durationInMinutes: 1
  content: "机器人使用 Teams API 在个人聊天中与用户一起发送和接收文件。 Teams 中共享的文件可以显示为卡片，并允许丰富的应用内查看。 机器人还有助于实现费用报告、图像识别、文件存档和涉及编辑文件内容的电子签名等功能。 \n\n**使用机器人在 Teams 中上传文件的主要功能：** \n\n  * 使用机器人将文件上传到 Teams。\n  * 接收以附件的形式发送到机器人的文件。\n  * 提取消息中发送的内联图像。\n\n本分步指南可帮助你使用机器人在 Teams 中上传文件。 你将看到以下输出：\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"显示最终输出的屏幕截图\":::\n"
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境： \n\n | &nbsp; | 安装 | 用于使用... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams 可在一个位置通过聊天、会议、通话等应用与你合作的每个人进行协作。|\n | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负载之一：<br> • ASP.NET 和 Web 开发 <br> • .NET Core 跨平台开发 | 可以在 Visual Studio 2022 中安装企业版，并安装工作负载。 |\n | &nbsp; | [.NET Core SDK 版本 3.1](https://dotnet.microsoft.com/en-us/download) | 用于本地调试和Azure Functions应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，则可以安装可移植版本。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | teams 应用功能 (对话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，这不是必需的。 此包使用 npm `devDependencies`) 安装在项目目录 (中。 |\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [authtoken](https://ngrok.com/download)。\n"
- title: 设置本地环境
  durationInMinutes: 1
  content: "\n1. 打开 [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples)。\n1. 选择“ **代码**”。\n1. 在下拉菜单中，选择“ **使用 GitHub Desktop 打开**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/botbuilder-sample_1.png\" alt-text=\"显示存储库克隆的屏幕截图\":::\n\n1. 选择“ **克隆**”。 \n"
- title: 创建并注册机器人
  durationInMinutes: 5
  content: "以下步骤可帮助你在 Azure 门户 中创建和注册机器人：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n* 创建客户端密码以启用机器人的 SSO 身份验证。\n* 添加 Teams 频道以部署机器人。\n* 使用 ngrok 创建到 Web 服务器终结点的隧道。\n* 将消息传递终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到“[Azure 门户](https://portal.azure.com/)”。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择“**Enter**”。\n1. 选择“ **Azure 机器人**”。\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Azure 机器人。\":::\n\n1. 选择“**创建**”。\n1. 在机器人句柄中输入所需的 **机器人句柄** 名称。\n1. 从“ **订阅** ”下拉列表中，选择订阅。\n1. 从 **“资源组** ”下拉列表中，选择现有资源组。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selection-of-resource_1.png\" alt-text=\"azure 资源选择\":::\n   \n   若要创建新的资源组，请选择“ **新建** ”>输入资源名称>选择“ **确定**”。 从“ **新建资源组** 位置”下拉列表中选择所需位置。\n   \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/bots/newresource.png\" alt-text=\"选择新资源位置\":::\n\n1. 在 **“Microsoft 应用 ID** ”部分中，默认选择“ **创建新的 Microsoft 应用 ID** ”。 \n\n    还可以选择“ **使用现有应用注册** ”，并输入现有 **应用 ID**、 **应用租户 ID** 和 **MSI 资源 ID**。\n\n    > [!NOTE]\n    > 不能使用相同的 **Microsoft 应用 ID** 创建多个机器人。\n\n1. 选择 **“应用类型** ”作为 **“多租户**”。\n\n1. 然后“**审阅 + 创建**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/review-create_1.png\" alt-text=\"创建新机器人\":::   \n\n1. 如果验证通过，请选择“**创建**”。 \n\n    预配机器人服务需要一些时间。\n\n1. 选择“**转到资源**”。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/deployment_1.png\" alt-text=\"选择资源\":::\n    \n    已创建 Azure 机器人。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/azure-bot-created_1.png\" alt-text=\"创建机器人\":::\n\n **创建客户端密码**\n\n   如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左侧面板中，选择“ **配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n1. 在 **“Microsoft 应用 ID**”旁边，选择“ **管理**”。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"管理机器人\":::\n\n1. 在 **“客户端机密** ”部分中，选择“ **新建客户端密码**”。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_2.png\" alt-text=\"添加客户端密码\" border=\"true\":::\n\n        \n   此时会显示 **“添加客户端机密** ”窗口。\n\n1. 输入 **“说明**”。\n\n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-client-secret_1.png\" alt-text=\"添加客户端密码和说明\"::: \n\n   \n1. 在 **“值** ”列中，选择“ **复制到剪贴板**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/copy-value_1.png\" alt-text=\"将值复制到剪贴板\":::\n\n         \n   > [!TIP]\n   > 保存 **客户端机密** 值或应用密码以供将来参考。\n\n**添加 Teams 频道**\n\n1. 选择“主页”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/go-to-home_1.png\" alt-text=\"选择主页\":::    \n\n   \n1. 从 **“最近使用的资源**”中选择机器人。\n\n1. 在左窗格中选择“**频道**”，然后选择“**Microsoft Teams**” <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams_1.png\" alt-text=\"在频道中选择 Teams\":::\n  \n1. 选中复选框以接受 **服务条款**。\n\n1. 选择“ **同意**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/terms_1.png\" alt-text=\"选择术语\":::\n\n  \n1. 选择“**应用**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams_1.png\" alt-text=\"microsoft teams\":::\n\n  \n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 或命令提示符创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中提供的步骤注册并验证 ngrok。 然后运行 命令 `ngrok http --host-header=localhost 3978` 。\n\n**添加消息传送终结点**\n\n   1. 从 ngrok 复制 HTTPS URL。\n   \n      :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url_3.png\" alt-text=\"ngrok HTTPS URL\":::\n      \n      > [!NOTE]\n      > ngrok 中的 HTTPS URL 是完全限定的域名。\n      > `WebAppDomain`是不包含`https://`在中的完全限定域名。\n\n   1.  在创建的 Azure 机器人 **的设置** 中，选择 **“配置**”。\n\n   1.  在 **消息传递终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-api-teams-bot_1.png\" alt-text=\"添加 api\":::\n    \n   1. 选择“**应用**”。\n\n      已成功在 Azure 机器人服务 中设置机器人。\n"
- title: 更新 Azure AD 应用注册
  durationInMinutes: 5
  content: "1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“Azure Active Directory”。\n\n1. 在左窗格中，选择“ **应用注册**”。\n\n1. 选择机器人。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/select-your-bot_1.png\" alt-text=\"选择机器人\":::\n\n1. 选择 **“公开 API**”。\n\n1. 选择“ **设置**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/set-api_1.png\" alt-text=\"设置 api\":::\n\n1. 以 的形式`api://your ngrok/botid-{your AppID}`设置 **应用程序 ID URI**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/app-id-uri1_1.png\" alt-text=\"重定向 URI\":::\n\n   下图显示了域名：\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/expose-api_1.png\" alt-text=\"api\":::\n\n    > [!NOTE]\n    > 如果使用 ngrok 等隧道服务，请确保在 ngrok 子域发生更改时更新值。\n    > 例如： `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，其中 `f631****.ngrok.io` 是新的 ngrok 子域名称。\n\n1. 选择“**添加作用域**”。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectscope_2.png\" alt-text=\"范围选择\":::\n\n1. 在显示的面板中，输入 `access_as_user` 作为 **“范围名称**”。\n\n1. 将 **“谁可以同意？”** 设置为 `Admins and users`。\n\n1. 若要使用适当的范围值 `access_as_user` 配置管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入`Teams can access the user’s profile`作为 **管理员同意显示名称**。\n\n     * 输入`Allows Teams to call the app’s web APIs as the current user`作为 **管理员同意说明**。\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 作为 **用户同意说明**。\n\n1. 确保将“状态”设置为“已启用”。\n\n1. 选择 **“添加范围** ”进行保存。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-a-scope_1.png\" alt-text=\"添加范围\":::\n\n    > [!NOTE]\n    > **作用域名称** 应与末尾追加的应用程序 **ID** URI `/access_as_user` 匹配。</br>\n       `api://9179****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/access-as-user_1.png\" alt-text=\"以用户身份显示访问权限\":::\n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。\n\n1. 选择 **添加客户端应用程序**。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/selectclientapp_1.png\" alt-text=\"客户端应用\":::\n\n1. 对于 Teams 移动或桌面应用程序，输入 **客户端 ID**： `1fec8e78-bce4-4aaf-ab1b-5451cc387264` 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-mobile_1.png\" alt-text=\"客户端移动版\":::  \n\n   对于 Teams Web 应用程序，可以输入 **客户端 ID**： `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-web_1.png\" alt-text=\"客户端 ID Web\":::\n\n   下图显示了 **客户端 ID**：\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/client-id-teams-bot.png\" alt-text=\"显示 ID\":::   \n\n1. 在左侧面板中，选择“ **API 权限**”。 \n\n   > [!NOTE]\n   > 仅当 Azure Active Directory 应用在不同租户中注册时，用户才需要同意 API 权限。\n\n1. 选择“**添加权限**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permission_1.png\" alt-text=\"已添加权限\":::\n\n1. 选择 **Microsoft Graph**。\n\n1. 选择“**委托的权限**”。\n\n1. 添加 **User.Read** in 权限。\n\n1. 选择 **添加权限**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-permissions_1.png\" alt-text=\"已添加委派权限\":::\n\n1. 在左侧面板中，选择“ **身份验证** ”以设置重定向 URI。\n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员同意，用户必须在首次使用应用时提供同意。\n\n     1. 选择 **添加平台**。\n    \n     1. 选择“Web”\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configure-web_1.png\" alt-text=\"Web 配置\"::: \n\n     1. 通过将 追加 `auth-end` 到完全限定的域名，输入应用的重定向 URI：</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 通过选中以下复选框启用 **隐式授予和混合流** ：\n         * **ID 令牌**\n         * **访问令牌**\n\n     1. 选择“**配置**”。  \n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/configuration-web_1.png\" alt-text=\"configuration\":::\n\n  **更新清单**\n\n  1. 从左窗格中选择“**清单**”。\n\n  1. 设置配置项 **“accessTokenAcceptedVersion”：2**。 如果未设置，请将其值更改为 `2` ，然后选择“ **保存**”。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/manifest-value.png\" alt-text=\"打开清单文件\":::\n    \n     > [!NOTE]\n     > 如果已在 Teams 中测试机器人，请注销此应用并注销 Teams。 若要查看此更改，请再次登录。\n\n  **设置机器人服务连接**\n\n  1. 转到 **“配置”页** > **“添加 OAuth 连接设置**”。\n\n  1. 选择“**添加 OAuth 连接设置**”。\n\n  1. 在 **“新建连接设置”** 中，输入以下详细信息：\n\n      * **名称** 输入 `name for your new connection setting. You can use the name in the settings of your bot service code`。\n      * **服务提供商** 选择 `Azure Active Directory V2`。\n      * 你为 `Microsoft App ID`**的客户端 ID**。\n      * **客户端机密** `Value of the client secret ID`。\n      * **令牌交换 URL** 在公开 API 终结点时使用 `Application ID URI` 之前获取的 。\n      * **租户 ID** 输入 `common`。\n      * **范围** 输入 `User.Read`。\n \n  1. 选择“**保存**”。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/new-connection-setting_1.png\" alt-text=\"设置新连接\":::\n"
- title: 设置应用设置和清单文件
  durationInMinutes: 2
  content: "1. 转到克隆存储库中的 **appsettings.json** 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-file_1.png\" alt-text=\"应用设置清单\":::\n                  \n1. 在 Visual Studio 中打开 **appsettings.json** 。\n\n1. 更新以下信息：\n\n     * 设置为 `\"MicrosoftAppType\"` **MultiTenant**。\n     * 设置为 `\"MicrosoftAppId\"` 机器人的 **Microsoft 应用 ID**。\n     * 设置为 `\"MicrosoftAppPassword\"` 机器人的客户端机密 ID 值。\n     * 将 MultiTenant 机器人设置为 `\"MicrosoftAppTenantId\"` 空白。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/appsettings-json1_1.png\" alt-text=\"visual Studio 中的 appsettings 文件\":::\n       \n1. 转到克隆存储库中的 **manifest.json** 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-app-manifest_1.png\" alt-text=\"打开清单文件\":::\n     \n1. 在 Visual Studio 中打开 **manifest.json** 并进行以下更改：\n\n   将 的所有匹配项 `<<YOUR-MICROSOFT-APP-ID>>` 替换为机器人的 **Microsoft 应用 ID**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id_1.png\" alt-text=\"替换机器人 ID。\"lightbox=\"../msteams-platform/assets/images/teams-file-upload-bot/bot-id_1.png\"::: \n"
- title: 生成并运行服务
  durationInMinutes: 2
  content: "**使用 Visual Studio 或命令行生成和运行服务**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/visualstudio)\n\n  1. 启动 Visual Studio。\n  \n  1. 转到 **“文件** > **打开** > **项目/解决方案**”。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/VS-open-file_1.png\" alt-text=\"Visualstudio\":::      \n   \n  1. 从 **56.teams-file-upload** 文件夹中选择 **TeamsFileUpload.csproj** 文件。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/csproj-folder_1.png\" alt-text=\"folder\":::        \n\n  1. 从 **视图** 打开 **解决方案资源管理器**。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-task-module/solutionexplorer_1.png\" alt-text=\"view\":::\n\n  1. 右键单击 **TeamsFileUpload**。\n\n  1. 选择“ **设置为启动项目**”。\n     \n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-file-upload_1.png\" alt-text=\"启动项目\":::\n     \n  1. 按 **F5** 运行项目。\n\n  1. 如果出现以下对话框，请选择“**是**”：\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/certificate_1.png\" alt-text=\"约\":::\n\n     \n     此时会打开一个网页，并显示消息 **“机器人已准备就绪！”**。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/file-bot.png\" alt-text=\"机器人已准备就绪\":::\n\n  \n\n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在命令提示符窗口中转到 **BotBuilder-Samples >示例> csharp_dotnetcore > 50.teams-messaging-extensions-search** ，然后输入以下命令：\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-Messaging-Extensions-Search/dotnetruncmd.png)\n"
- title: 在 Teams 中添加文件上传机器人
  durationInMinutes: 2
  content: "1. 在克隆的存储库中，转到 **csharp_dotnetcore** > **56.teams-file-upload** > **TeamsAppManifest**。\n\n1. 使用 **TeamsAppManifest** 文件夹中存在的以下文件创建.zip： \n  * manifest.json\n  * icon-outline.png\n  * icon-color.png \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-upload-manifest_1.png\" alt-text=\"manifest 文件夹\":::\n\n 1. 转到 **Microsoft Teams**。\n\n 1. 在左侧面板中，选择“ **应用** > **管理应用**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/AppStore1_1.png\" alt-text=\"添加应用\":::\n\n 1. 选择“**上传自定义应用**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/upload-custom-app_1.png\" alt-text=\"自定义应用\":::\n\n 1. 选择“ **打开** ”以上传在 **TeamsAppManifest** 文件夹中创建的.zip文件。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/teams-manifest_1.png\" alt-text=\"清单已打开\"::: \n\n 1. 选择“**添加**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/add-file-bot_1.png\" alt-text=\"添加\"::: \n\n  1. 在撰写消息区域中，键入 **“hi”** 并等待几秒钟，以便它用卡片做出响应。\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/respond-bot.png\" alt-text=\"由机器人发送的卡\":::\n"
- title: 在 Teams 中与机器人交互
  durationInMinutes: 2
  content: "1. 向机器人发送消息。 它使用卡片进行响应，以获取上传文件的权限。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-1.png\" alt-text=\"机器人发送卡\":::\n\n1. 选择 **“允许**”。 文件 `teams-logo.png` 将上传到可供下载的文件目录。\n     \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-2.png\" alt-text=\"teams 徽标\":::\n\n1. 在 Teams 中将文件作为附件发送到机器人。 它以消息 `Received and Saved`进行响应。 可以从“ **文件** ”选项卡查看附件。\n    \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-3.png\" alt-text=\"发送文件\":::\n\n1. 以附件的形式发送图像。 它以消息 `Received and saved`进行响应。 可以在聊天窗口和“ **文件** ”选项卡中查看图像。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/sbs-4.png\" alt-text=\"received\":::\n  \n    > [!NOTE]\n    >  在个人范围内安装机器人后，用户与机器人进行一对一聊天对话。\n  \n"
- title: 完成挑战
  durationInMinutes: 1
  content: "你想出了这样的东西吗？\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/output-sbs.png\" alt-text=\"最终图像\"::: \n"
- content: 你已完成本教程。 现在，可以使用机器人在 Teams 中上传文件。
