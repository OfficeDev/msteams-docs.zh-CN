### YamlMime:Tutorial
title: 发送主动消息
metadata:
  title: 发送主动消息
  description: 本文介绍如何从机器人发送主动消息，例如欢迎消息、计划的消息和通知。
  audience: Developer
  level: Beginner
  ms.date: 06/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ./bots/how-to/conversations/send-proactive-messages.md
  nextTutorialTitle: 详细了解主动消息
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 9c763e584bcd574c2fc511000f6470d7608e3ac0
  ms.sourcegitcommit: b72f51377f41be18ee9b70b042f736605f755cf1
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/21/2022
  ms.locfileid: "68670115"
items:
- durationInMinutes: 1
  content: "主动消息是机器人发送的任何消息，该消息不是响应来自包含消息的用户发出的请求，例如：\n - 欢迎消息\n - Notifications\n - 计划的消息\n \n本分步指南可帮助你从机器人发送主动消息。 你将看到以下输出：\n\n* 聊天中的主动 hello 消息。  \n\n  :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-helo1.png\" alt-text=\"主动 Hello 消息\":::\n\n* 主动打招呼消息作为自适应卡片。\n\n  :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png\" alt-text=\"自适应卡片中的主动 Hello 消息\"::: \n"
- title: 先决条件
  durationInMinutes: 2
  content: "确保安装以下内容：    \n\n| &nbsp; | 安装 | 用于使用... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负荷之一：<br> • ASP.NET 和 Web 开发 <br> • .NET Core 跨平台开发 | 可以在 Visual Studio 2022 中安装企业版本，并安装工作负荷。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams 应用功能 (会话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，不需要这样做。 此包安装在项目目录中， (使用 npm `devDependencies`) 。 |\n | &nbsp; | [Microsoft 365 开发人员帐户](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | 对具有相应安装应用权限的 Teams 帐户的访问权限。 |\n | &nbsp; | [Teams 开发人员门户](https://dev.teams.microsoft.com/) | 基于 Web 的门户，用于配置、管理和分发 Teams 应用，包括组织或 Teams 应用商店。 |\n"
- title: 设置本地环境
  durationInMinutes: 3
  content: "1.  下载 (Zip 文件) 示 [例代码](https://github.com/MicrosoftDocs/msteams-docs/tree/master/msteams-platform/assets/downloads/SendProactiveMessages.zip) 并提取文件。\n1.  转到提取的文件，然后双击 **ProactiveBot.csproj**。 解决方案将在 Visual Studio 中打开。\n1.  在 Visual Studio 中，右键单击项目 (**ProactiveBot**) ，然后选择 **“生成** ”以生成解决方案。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactivebot-project1.png\" alt-text=\"主动机器人项目\":::\n\n    <br>\n\n    <details>\n\n    <summary><b>疑难解答</b></summary>\n\n    如果 **出现无法找到包** 错误，请执行以下步骤：\n\n    1.  转到 **“工具** > **NuGet 包管理** > **器包管理器设置**”。\n    1.  在显示的 **“选项”** 窗口中，选择 **NuGet 包管理器** > **包源**。\n    1.  选择“**添加**”。\n    1.  在 **“名称**”和`https://api.nuget.org/v3/index.json`“**源**”字段中输入`nuget.org`。\n    1.  选择 **“更新** ”和 **“确定**”。\n    1.  重新生成项目。\n    <br>\n\n    </details>\n    \n1. 解压缩以安装 ngrok。\n   * Windows：双击 `ngrok.zip`。\n   * Linux 或 OS X：从终端中解压缩 ngrok 并运行 `unzip /path/to/ngrok.zip` 命令。\n1. 使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n    ```bash\n    ngrok http --host-header=localhost 3978\n    ```\n    \n1. 从 ngrok 复制 HTTPS URL。 \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/ngrok-base-url1.png\" alt-text=\"ngrok 基本 URL。\"lightbox=\"~/assets/images/proactive-scenario/ngrok-base-url1.png\":::   \n"
- title: 启用开发人员预览版
  durationInMinutes: 1
  content: >
    1. 在租户的管理控制台中启用应用上传。
        1. 请使用管理员帐户登录到“[Microsoft 365 管理中心](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/)”。
        1. 在左侧面板中，选择 **“全部显示**”。
        1. 选择 **Teams**。

           :::image type="content" source="./assets/images/meeting-token-generator/meeting-token-generator-admincenter_1.png" alt-text="管理中心菜单" border="true":::
- title: 创建和安装 Teams 应用
  durationInMinutes: 5
  content: "1. 打开 [Teams 开发人员门户](https://dev.teams.microsoft.com)。\n\n   将显示以下页面：\n\n   :::image type=\"content\" source=\"~/assets/images/proactive-scenario/developer-portal-intro.png\" alt-text=\"开发人员门户简介\":::\n\n1. 选择 **应用** > **导入应用**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/upload-app-package.png\" alt-text=\"Select-upload 包\":::  \n\n1. 选择 **AppManifest** 并选择 **“打开**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-package.png\" alt-text=\"选择应用包\":::\n\n1. 选择“**导入**”。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-import.png\" alt-text=\"选择“导入”\":::\n\n    将显示以下页面：\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-message.png\" alt-text=\"主动消息。\"lightbox=\"~/assets/images/proactive-scenario/proactive-message.png\"::: \n\n1. 选择 **应用功能** > **机器人**。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-features.png\" alt-text=\"选择应用功能\":::\n\n1. 选择 **“创建新机器人**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-bot.png\" alt-text=\"选择机器人\":::     \n    \n1. 选择 **“新建机器人**”。 \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/create-new-bot.png\" alt-text=\"创建新机器人\":::\n\n    将显示 **“添加机器人** ”窗口。\n\n1. 输入 **主动消息机器人** ，然后选择 **“添加**”。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/enter-proactive-message.png\" alt-text=\"输入主动消息\":::\n\n    现在，机器人主动消息机器人已成功添加到应用程序。 可以看到 **机器人名称** 和 **机器人 ID**。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/bot-name.png\" alt-text=\"机器人名称和 ID\":::\n\n   > [!TIP]\n   > 保存 **机器人 ID** 以供将来参考。\n\n1. 双击 **“主动消息”机器人**。\n\n   将显示 **“主动消息演示** ”页。\n\n1. 选择 **“配置** ”并设置 **终结点地址** 的形式 `https://your ngrok/api/messages`。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-configure.png\" alt-text=\"选择“配置”\":::\n\n1. 选择 **“客户端机密** > **为机器人添加客户端机密**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/secret.png\" alt-text=\"选择机密\":::\n\n1. 将显示 **“新建客户端机密生成** 的窗口”，然后选择 **“确定**”。    \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/new-secret.png\" alt-text=\"新机密\":::\n\n    > [!TIP]\n    > 保存 **新客户端机密** 值以供将来参考。\n\n1. 选择“应用 :::image type=\"icon\" source=\"~/assets/images/proactive-scenario/apps-icon.png\"::: ”图标，然后选择 **“主动消息演示**”。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-apps.png\" alt-text=\"选择应用\":::\n\n    将显示以下页面：\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/overview-page.png\" alt-text=\"“概述”页\":::\n\n1. 在 **“配置**”下选择 **“应用功能**”，然后选择 **“机器人**”。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-app-features1.png\" alt-text=\"选择应用功能\":::\n\n1. 从 **“选择现有机器人**”下拉列表中选择 **主动消息机器人**。\n\n     :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-send-proactive-message.png\" alt-text=\"选择发送主动消息\":::\n\n1. 选择 **“个人** > **保存**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-personal.png\" alt-text=\"选择个人\":::\n\n1. 在 Visual Studio 中打开 **appsettings.json** 文件并更新以下信息：\n\n    * 将 **MicrosoftAppID** 设置为机器人 ID。\n    * 将 **MicrosoftAppPassword** 设置为客户端机密 ID 值。\n\n   :::image type=\"content\" source=\"~/assets/images/proactive-scenario/appsettings.png\" alt-text=\"应用设置文件\":::\n\n1. 选择 **“调试** > **开始调试**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/debug.png\" alt-text=\"选择“调试”\":::\n\n   将显示相应的主动消息示例：\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-confirm.png\" alt-text=\"主动确认\":::\n\n1. 返回到开发人员门户，请 **在 Teams 中选择“预览**”。\n    \n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/preview-teams.png\" alt-text=\"预览 Teams\":::\n\n1. 选择“**添加**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-add.png\" alt-text=\"选择“添加”\":::\n\n   将显示以下页面。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/teams-open1.png\" alt-text=\"Teams Open\":::\n\n   打开浏览器。\n\n1. 复制并粘贴 `http://localhost:3978/api/notify` 浏览器中的 URL，以在聊天中获取主动的 hello 消息。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/url-paste.png\" alt-text=\"URL 粘贴\":::\n\n1. 转到 Teams。 安装成功时，会收到来自机器人的主动 Hello 消息。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-reply.png\" alt-text=\"主动答复\":::\n"
- title: 将自适应卡片添加到主动消息
  durationInMinutes: 10
  content: "1. 在 Visual Studio 中，停止调试过程。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/stop-debugging.png\" alt-text=\"停止调试\":::\n\n1. 右键单击 **“依赖项**”，选择 **“管理 NuGet 包**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/dependencies.png\" alt-text=\"主动依赖项\":::\n\n1. 在 **NuGet ProactiveBot** 中，选择 **“浏览** ”并搜索 **AdaptiveCards**。 \n1. 选择“安装”。 \n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-adaptive cards.png\" alt-text=\"选择自适应卡片\":::\n\n1. 在 **“预览更改** ”窗口中，选择 **“确定**”。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-ok.png\" alt-text=\"选择“确定”\":::\n\n1. 在 **控制器** 下打开 **NotifyController.cs** 文件。\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/select-notify.png\" alt-text=\"选择“通知”\":::\n\n1. 将现有 `BotCallback` 代码替换为以下代码以发送自适应卡片消息：     \n    \n   ```csharp\n   private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)\n    {\n                AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));\n\n                card.Body.Add(new AdaptiveTextBlock()\n                {\n                    Text = \"Proactive Hello\",\n                    Size = AdaptiveTextSize.ExtraLarge\n                });\n\n                card.Body.Add(new AdaptiveImage()\n                {\n                    Url = new Uri(\"http://adaptivecards.io/content/cats/1.png\")\n                });\n\n                Attachment attachment = new Attachment()\n                {\n                    ContentType = AdaptiveCard.ContentType,\n                    Content = card\n                };\n\n                await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));\n    }\n   ```  \n\n1. 按 **F5** 运行代码。\n\n   将显示相应的主动消息示例：\n\n    :::image type=\"content\" source=\"~/assets/images/proactive-scenario/proactive-confirm.png\" alt-text=\"主动确认\":::\n\n1. 转到 Teams 并卸载应用。 \n\n1. 重新安装同一应用以获取 `conversationUpdate` 事件。   \n\n1. 复制并粘贴 `http://localhost:3978/api/notify` 浏览器中的 URL，以在自适应卡片中获取主动的 hello 消息。     \n"
- title: 完成质询
  durationInMinutes: 3
  content: >
    你想出了这样的事吗？ 自适应卡片中的主动 hello 消息如下所示：


    :::image type="content" source="~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png" alt-text="自适应卡片中的主动 Hello 消息":::
- content: >-
    你已完成此方案。

    * 可以每天发送通知，也可以定期向用户请求反馈。

    * 处理限制限制以避免出现多个通知。
