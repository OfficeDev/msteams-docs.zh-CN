### YamlMime:Tutorial
title: 发送主动邮件
metadata:
  title: 发送主动邮件
  description: 在此方案中，你将了解如何发送主动邮件
  audience: Developer
  level: Beginner
  ms.date: 06/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ./bots/how-to/conversations/send-proactive-messages.md
  nextTutorialTitle: 阅读有关主动消息的更多内容
  ms.custom: mvc
  ms.openlocfilehash: 4a6a30bd038c5117024c67a7786995391351e0fe
  ms.sourcegitcommit: 7f9b3c1654536a88015f1b11b6c8a0f612b111c4
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 07/14/2021
  ms.locfileid: "53434464"
items:
- durationInMinutes: 1
  content: "主动消息是自动程序发送的任何不响应用户请求的消息。 这可能包括邮件，例如：\n - 欢迎消息\n - 通知\n - 计划邮件\n \n此分步指南可帮助你从自动程序发送主动邮件。 你将看到以下输出：\n\n* 聊天中的主动 Hello 消息        \n![主动聊天 hello](~/assets/images/proactive-scenario/proactive-helo.png)\n\n* 作为自适应卡片的主动 Hello 消息    \n![自适应卡片中的主动 hello](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png) \n"
- title: 必备条件
  durationInMinutes: 2
  content: "确保安装以下内容：    \n\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)年。\n* [ASP.NET 和 Web 开发](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-5.0.301-windows-x64-installer)，或[.NET Core](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-3.1.410-windows-x64-installer)跨平台开发工作负载。\n* [ngrok：](https://ngrok.com/download)一个跨平台应用程序，使你能够以最少的工作量将本地开发服务器公开到 Internet。\n* [获取开发人员Teams免费订阅](https://developer.microsoft.com/en-us/microsoft-365/dev-program)。\n"
- title: 设置本地环境
  durationInMinutes: 3
  content: "1.  下载 [Zip 文件](https://github.com/MicrosoftDocs/msteams-docs/tree/master/msteams-platform/assets/downloads/SendProactiveMessages.zip) (代码) 解压缩文件。\n1.  转到提取的文件，然后双击 **ProactiveBot.csproj**。 解决方案将在 Visual Studio 中打开。\n1.  在Visual Studio中，右键单击 **ProactiveBot** (项目) 选择\"生成\"以生成解决方案。 \n\n    ![Proactivebot 项目](~/assets/images/proactive-scenario/proactivebot-project.png)\n\n    <br>\n\n    <details>\n\n    <summary><b>疑难解答</b></summary>\n\n    如果收到\" **找不到程序包\"** 错误，请按照以下步骤操作：\n\n    1.  转到工具  >    >  **NuGet 程序包管理器程序包管理器 设置。**\n    1.  在出现的 **\"选项**\"窗口中，选择 **\"NuGet 程序包管理器**  >  **包源\"。**\n    1.  选择“添加”。\n    1.  在 **nuget.org\"和**\" **https://api.nuget.org/v3/index.json** 源\"字段中输入 **\"名称\"。**\n    1.  选择 **\"更新**\"和\"**确定\"。**\n    1.  重新生成项目。\n    <br>\n\n    </details>\n    \n1. 解压缩以安装 ngrok。\n   * Windows：双击 **\"ngrok.zip\"。**\n   * Linux 或 OS X：从终端解压缩 ngrok 并运行 `unzip /path/to/ngrok.zip` 命令。\n1. 使用下列参数从命令行运行 ngrok：\n\n    `ngrok http 3978 --host-header=localhost`  \n    \n1. 复制图像 (突出显示的 ngrok URL) ，以在以下步骤中进一步引用为 ngrok 基 URL。 \n\n    ![ngrok 基 URL](~/assets/images/proactive-scenario/ngrok-base-url.png)   \n"
- title: 创建和安装Teams应用程序
  durationInMinutes: 5
  content: "1. 转到 Teams > App **Studio，** 并导入 **下载** 的示例代码AppManifest.zipZip 文件 (中可用的) 。\n\n    ![App Studio 导入应用](~/assets/images/proactive-scenario/app-studio-import-app.png) \n\n1. 选择 **\"自动程序**  >  **设置\"。**\n\n    ![自动程序设置](~/assets/images/proactive-scenario/bot-setup.png)  \n\n1. 在出现的 **\"设置自动** 程序&quot;窗口中，输入&quot;名称&quot; (例如，&quot;**主动** 邮件演示\") ，选择\"个人\"，然后选择\"**创建** 自动程序\"以创建机器人。\n\n    ![创建自动程序 ID](~/assets/images/proactive-scenario/create-bot-id.png)   \n\n1. 将 **/api/messages** 追加到已 (的 ngrok 基 URL) 并将其设置为 **Bot 终结点地址**。 URL 如下所示 `https://yourngrokdomain.ngrok.io/api/messages` ：。\n\n    ![自动程序终结点地址](~/assets/images/proactive-scenario/bot-endpoint-address.png)\n\n1. 等待几秒钟，更改生效。     \n\n    > 如果时间较长，请选择 **\"选项卡** \"，然后选择\" **聊天机器人\"** 部分以强制更新。\n    \n1. 选择 **\"生成新密码** \"以生成新的应用密码并复制它。 \n\n    ![生成应用密码](~/assets/images/proactive-scenario/generate-app-password.png)\n\n1. 转到\"Visual Studio\"并打开 **\"appsettings.json\"** 文件。  将密码粘贴为 的值 `MicrosoftAppPassword` 。    \n1. 转到 **App Studio**，然后复制应用 ID。 \n\n    ![生成应用 ID](~/assets/images/proactive-scenario/generate-app-id.png)\n\n1. 转到\"Visual Studio\"并打开 **\"appsettings.json\"** 文件。  将应用 ID 粘贴为 的值 `MicrosoftAppId` 。 `appsettings.json`你将具有以下设置值：    \n\n    ![Appsetting 值](~/assets/images/proactive-scenario/app-setting-values.png)\n\n1. 按 **F5** 或选择 **IIS express** 运行代码。\n\n    ![运行代码](~/assets/images/proactive-scenario/run-code.png)\n\n    将显示相应的主动消息示例：  \n\n    ![主动邮件示例](~/assets/images/proactive-scenario/proactive-message-sample.png)\n\n1. 转到测试和 **分发**  >  **安装以** 再次安装同一应用。\n\n    ![安装应用](~/assets/images/proactive-scenario/install-app.png)   \n\n1. 选择 [http://localhost:3978/api/notify](http://localhost:3978/api/notify) URL，在聊天中获取主动 Hello 消息。\n\n    ![发送的主动邮件](~/assets/images/proactive-scenario/result.png)\n\n1. 转到Teams。 安装成功后，你会收到来自自动程序主动的 Hello 消息。          \n\n    ![主动聊天 hello](~/assets/images/proactive-scenario/proactive-helo.png)    \n"
- title: 向主动邮件添加自适应卡片
  durationInMinutes: 10
  content: "1. 在Visual Studio中，停止调试过程。\n\n    ![停止调试](~/assets/images/proactive-scenario/stop-debug.png)\n\n1. 右键单击 **\"依赖项\"，** 选择\"**管理NuGet程序包\"。**\n\n    ![添加自适应卡片包1](~/assets/images/proactive-scenario/add-adaptive-card-package1.png)\n\n1. 在 **\"NuGet Bot\"** 中，选择 **\"浏览**\"并搜索 **AdaptiveCards。** 选择“安装”。 \n\n    ![添加自适应卡片包2](~/assets/images/proactive-scenario/add-adaptive-card-package2.png)\n\n1. 打开 **NotifyController.cs** 文件，并将现有代码替换为以下代码以 `BotCallback` 发送自适应卡片消息：     \n    \n   ```csharp\n   private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)\n    {\n                AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));\n\n                card.Body.Add(new AdaptiveTextBlock()\n                {\n                    Text = \"Proactive Hello\",\n                    Size = AdaptiveTextSize.ExtraLarge\n                });\n\n                card.Body.Add(new AdaptiveImage()\n                {\n                    Url = new Uri(\"http://adaptivecards.io/content/cats/1.png\")\n                });\n\n                Attachment attachment = new Attachment()\n                {\n                    ContentType = AdaptiveCard.ContentType,\n                    Content = card\n                };\n\n                await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));\n    }\n   ```\n\n1. 将光标悬停在红色的线条上，然后选择使用 **AdaptiveCards** 来修复错误。 \n\n    ![解决错误](~/assets/images/proactive-scenario/resolve-error.png)  \n\n1. 按 **F5** 运行代码。 \n1. 转到Teams并卸载应用。 \n    \n    ![卸载应用](~/assets/images/proactive-scenario/uninstall-app.png) \n\n1. 重新安装同一应用以获取 `conversationUpdate` 事件。   \n\n1. 选择 [http://localhost:3978/api/notify](http://localhost:3978/api/notify) URL，在自适应卡片中获取主动 Hello 消息。     \n"
- title: 完成挑战
  durationInMinutes: 3
  content: >
    你提供类似这样的内容了吗？ 这是自适应卡片中的主动 Hello 消息的显示方式：


    ![自适应卡片中的主动 hello](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png)
- content: >-
    已完成方案。

    * 你可以每天发送一次通知，也可以定期请求用户输入反馈。

    * 处理限制以避免多个通知。
