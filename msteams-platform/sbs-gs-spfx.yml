### YamlMime:Tutorial
title: 使用SPFx生成第一个应用
metadata:
  title: Hello World SPFx
  description: 本教程介绍如何使用SPFx生成Hello World应用。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 返回到开始概述
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: b62a6c3ba924c412c0c2c6e2d4a940832896292c
  ms.sourcegitcommit: e40383d9081bf117030f7e6270140e6b94214e8b
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 04/27/2022
  ms.locfileid: "65102319"
items:
- durationInMinutes: 1
  content: "SharePoint 框架 (SPFx) 是一种开发模型，用于为 Microsoft Teams 和 SharePoint 构建客户端解决方案。 SPFx Teams应用托管在Microsoft 365上。 它为开发和托管客户端SPFx解决方案提供完全支持。 可以将SharePoint 框架解决方案与以下项集成：\n\n- SharePoint数据并扩展Microsoft Teams。 \n- 受Azure Active Directory保护的业务 API。\n\n在本教程中，通过使用选项卡功能生成第一个应用，开始使用SPFx Microsoft Teams应用开发。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab1.png\" alt-text=\"显示此应用有三个功能的示意图。突出显示了选项卡。\" border=\"true\":::\n\n> [!NOTE]\n> 目前，Teams Toolkit仅在具有Visual Studio Code和SharePoint 框架的Teams应用中提供 Tab 功能。 机器人和消息扩展功能不可用。\n"
- title: 先决条件
  durationInMinutes: 1
  content: "下面是生成和部署应用所需的工具列表。\n\n| &nbsp; | 安装 | 用于使用... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [微软&nbsp;边缘](https://www.microsoft.com/edge) (建议) 或 [Google Chrome](https://www.google.com/chrome/) | 包含开发人员工具的浏览器。 |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript、TypeScript 或SharePoint 框架 (SPFx) 生成环境。 使用版本 1.55 或更高版本。 |\n| &nbsp; | [Teams 工具包](#install-the-teams-toolkit) | 为应用创建项目基架的Visual Studio Code扩展。 使用最新版本。 |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | 后端 JavaScript 运行时环境。 使用Node.js版本 10、12 或 14 LTS 版本。 |\n| **可选** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Graph 浏览器](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph资源管理器，这是一种基于浏览器的工具，可用于从 Microsoft Graph数据运行查询。 |\n| &nbsp; | [Teams 开发人员门户](https://dev.teams.microsoft.com/) | 基于 Web 的门户，用于配置、管理和分发Teams应用，包括组织或Teams存储。 |\n\n> [!TIP]\n> 如果使用 Microsoft Graph数据，则应了解 Microsoft Graph 资源管理器并将其书签。 使用此基于浏览器的工具可以在应用外部查询 Microsoft Graph。\n</details>\n\n## <a name=\"prepare-development-environment\"></a>准备开发环境\n\n安装所需的工具后，请设置开发环境。\n\n### <a name=\"install-the-teams-toolkit\"></a>安装Teams Toolkit\n\nTeams Toolkit可通过工具简化开发过程，以便为应用预配和部署云资源、发布到Teams存储等。 可以将工具包与 Visual Studio Code、Visual Studio 或 CLI (一起使用，称为 `teamsfx`) 。\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. 打开Visual Studio Code， (**Ctrl+Shift+X** / ⌘⇧ **-X** 或 **视图>扩展) 中选择“扩展”视图**。\n1. 在搜索框中，输入 **Teams Toolkit**。\n1. 选择 **“安装**”旁边的Teams Toolkit。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-install-toolkit-vscode.png\" alt-text=\"microsoft 工具包\" border=\"true\":::“alt-text=”microsoft 工具包“border=”true“：：：\n\n    安装后，Teams Toolkit图标将显示在Visual Studio Code边栏中。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"插图显示Visual Studio Code边栏中的Teams Toolkit图标。\":::\n\n还可以在Visual Studio Code市场中找到[Teams Toolkit](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension)。\n\n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n若要安装 TeamsFx CLI，请使用包管理器 `npm` ：\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n根据配置，可能需要使用 `sudo` 它来安装 CLI：\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\n此条件在 Linux 和 macOS 系统上更为常见。\n\n确保将 npm 全局缓存添加到 PATH。 此步骤通常作为Node.js安装程序的一部分完成。  \n\n可以将 CLI 与命令配合 `teamsfx` 使用。 通过运行来验证命令是否正常工作 `teamsfx -h`。\n\n> [!CAUTION]\n> 在 PowerShell 终端中运行 TeamsFx 之前，必须为 PowerShell 启用“远程签名”执行策略。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>设置Teams开发租户\n\n**租户** 类似于Teams中组织的空间或容器，可在其中聊天、共享文件和运行会议。 此空间也是旁加载和测试应用的位置。 我们来验证是否已准备好使用租户进行开发。\n\n### <a name=\"enable-sideloading-option\"></a>启用旁加载选项\n\n创建应用后，必须在 Teams 中加载应用，而无需分发它。 此过程称为“旁加载”。 登录到Microsoft 365帐户以查看此选项。\n  \n> [!NOTE]\n> 在本地环境中预览和测试 Teams应用需要旁加载。 如果未启用，则无法在本地Teams预览和测试应用。\n\n是否已拥有租户，是否具有管理员访问权限？ 我们来检查你是否真的这样做了！\n\n验证是否可以在Teams中旁加载应用：\n\n1. 在Teams客户端中，选择 **“应用商店**”图标。\n1. 选择 **“管理应用**”。\n1. 查找 **用于Upload自定义应用的** 选项。 如果看到此选项，则会启用旁加载应用。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-custom-new.png\" alt-text=\"机器人主页\" border=\"true\":::\n    > [!NOTE]\n    > 如果Teams未显示上传自定义应用的选项，请与Teams管理员联系。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>创建免费Teams开发人员租户 (可选) \n\n如果没有Teams开发人员帐户，则可以免费获取。 加入Microsoft 365开发人员计划！\n\n1. 转到 [Microsoft 365 开发人员计划](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. 选择 **“立即加入** ”，并按照屏幕上的说明操作。\n1. 在欢迎屏幕中，选择 **“设置 E5 订阅**”。\n1. 设置管理员帐户。 完成后，将显示以下屏幕：\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-microsoft-365.png\" alt-text=\"Microsoft 365\" border=\"true\":::\n\n1. 使用刚设置的管理员帐户登录Teams。 验证Teams中是否具有 **自定义应用** 选项Upload。\n\n## <a name=\"sharepoint-collection-site-administrator-account\"></a>SharePoint集合网站管理员帐户\n\n确保拥有SharePoint网站集的管理员帐户。 部署时需要此帐户才能托管。 如果使用的是Microsoft 365开发人员计划租户，则可以使用当时创建的管理员帐户。\n\n现在，你已获得所有工具并设置了帐户。 接下来，让我们设置开发环境并开始构建！\n"
- title: 为 Tab 应用创建项目工作区
  durationInMinutes: 1
  content: "本教程逐步讲解如何使用SharePoint 框架 SPFx创建、生成和部署Teams应用。 此应用将具有选项卡功能。  \n\n在本教程中，你将了解：\n1. [如何使用Teams Toolkit设置新项目](#create-your-project)\n1. [关于应用的目录结构](#take-a-tour-of-the-source-code)\n\n> [!IMPORTANT]\n> 在开始创建项目工作区之前，请确保未登录到任何Microsoft 365或 Azure 帐户。\n\n## <a name=\"create-your-project\"></a>创建项目\n\n如果先决条件已就绪，让我们开始吧！\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. 打开 Visual Studio Code。\n1. 在 Visual Studio Code 边栏中选择 Teams 工具包 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: 图标。\n\n1. 选择 **创建新的 Teams 应用**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-project.png\" alt-text=\"Teams 工具包边栏中&quot;创建新项目&quot;链接的位置。\":::\n\n1. 选择 **创建新的 Teams 应用**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/create-new-project-intro.png\" alt-text=\"&quot;创建新项目&quot;的向导启动\":::\n\n1. 取消选择 **选项卡**，选择 **“选项卡” (SPFx)**，然后选择 **“确定**”。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/new-spfxTab-spfx.png\" alt-text=\"新建 spfx 选项卡 spfx\" border=\"true\":::\n\n1. 在“**框架**”部分中选择 **React**。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-react-page.png\" alt-text=\"机器人主页\" border=\"true\":::\n\n1. 选择 **Enter** 以接受默认的 **Web 部件名称**。\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-helloworld.png\" alt-text=\"机器人主页\" border=\"true\":::\n\n1. 为应用输入合适的名称，例如 `HelloWorld`。 确保应用的名称为字母数字。 \n   选择 **Enter**。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-another-helloworld.png\" alt-text=\"机器人主页\" border=\"true\":::\n\n    Teams Toolkit调用 Yeoman CLI 来搭建Teams应用的基架，并在此过程中安装所需的依赖项。</br>\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-tooklit-updated.png\" alt-text=\"机器人主页\" border=\"true\":::\n\n    基架需要几分钟时间。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/sbs-share-point.png\" alt-text=\"机器人主页\" border=\"true\":::\n    \n    创建应用后，Teams Toolkit会显示一条消息，指示项目工作区创建的位置。 这是在Visual Studio Code中指定的默认位置\n    \n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/location-change-new.png\" alt-text=\"location\" border=\"true\":::\n\n    该消息提供两个选项：\n    \n    - **更改位置**\n    - **本地调试**\n    \n    在本教程中，无需使用这些选项。\n\n    > [!NOTE]\n    > 如果选择更改工作区的位置，则仅反映在重新加载Visual Studio Code后创建的项目。 不会更改现有项目的位置。\n\n<details>\n<summary>创建Teams应用的快速回顾。</summary>\n\n![创建Teams应用](~/assets/videos/spfx-tab-source.gif)\n</details>\n\n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n使用 `teamsfx` CLI 创建你的第一个项目。  从要创建项目文件夹的文件夹开始。\n\n``` bash\nteamsfx new\n```\n\nCLI 会提出一些问题来引导创建项目。 每个问题都包含有关回答它的说明，例如，使用箭头键选择一个选项。 回答问题后，选择 **Enter** 进行确认。\n\n1. 选择 **创建新的 Teams 应用**。\n2. 选择 **选项卡**。\n3. 选择 **SharePoint 框架 (SPFx)** 前端托管。\n4. 选择 **React** 框架。\n5. 按 **Enter** 获取 **Web 部件名称**。\n6. 为应用输入合适的名称，如 `helloworld`。 应用的名称必须是字母数字。\n\n\n   所有问题都得到解答后，将创建项目。\n\n---\n\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>浏览源代码\n\n项目创建后，你将拥有用于生成基本个人应用的组件。 可以在Visual Studio Code的资源管理器区域中查看项目目录和文件。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-project-files-spfx.png\" alt-text=\"显示 Visual Studio Code 中个人应用的应用项目文件的屏幕截图。\" border=\"false\":::\n\nToolkit在选项卡功能的项目目录中为你创建基架。 \n\n在此目录中的其他项中，Teams Toolkit包含：\n\n- `fx`：目录中的 `.fx` 应用状态。  \n- 模板/资源：包含应用图标和 `color.png` `outline.png`。\n- `manifest.local.template.json`：包含本地调试的应用清单\n- `manifest.remote.template.json`：包含用于发布到开发人员门户以供Teams的应用清单。\n- `.fx/configs/projectSettings.json`：创建项目时选择的设置。\n\n选择SPFx Web 部件项目时，以下文件与 UI 相关：\n\n- `SPFx/src/webparts/{webpart}`：包含SPFx Web 部件。\n- `.vscode/launch.json`：描述调试调试面板中可用的调试配置。\n"
- title: 生成选项卡应用
  durationInMinutes: 1
  content: "使用Teams Toolkit设置项目工作区后，生成选项卡项目。 需要登录到Microsoft 365帐户。\n\n在此页中，你将了解 [如何生成和运行第一个应用](#build-and-run-your-app-locally-in-visual-studio-code)\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>登录到Microsoft 365帐户\n\n使用Microsoft 365帐户登录到Teams。 如果使用的是Microsoft 365开发人员计划租户，则注册时设置的管理员帐户是Microsoft 365帐户。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. 打开 Visual Studio 代码。\n1. 选择边栏中的Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\":::图标。  \n1. 选择 **登录到 M365**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/account-signin-spfx.png\" alt-text=\"显示登录到Microsoft 365位置的屏幕截图。\" border=\"false\":::\n\n    将打开默认 Web 浏览器，以便登录到帐户。\n\n1. 使用凭据登录到Microsoft 365帐户。\n1. 出现提示时关闭浏览器，然后返回到Visual Studio Code。\n1. 返回到Visual Studio Code中的Teams Toolkit。\n\n    边栏的 **ACCOUNTS** 部分显示Microsoft 365帐户名称。\n\n    现在，你已准备好生成应用并在本地运行它！\n\n# <a name=\"command-line\"></a>[命令行](#tab/cline)\n\n   使用 TeamsFx CLI 登录到Microsoft 365。\n\n``` bash\n    teamsfx account login m365\n```\n\n\n将打开默认 Web 浏览器，以便登录到帐户。 使用凭据登录到帐户。 提示时关闭浏览器。\n\n帐户登录名在 Visual Studio Code 和 TeamsFx CLI 之间共享。\n\n配置开发环境后，可以创建、生成和部署第一个Teams应用。\n\n ---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>在 Visual Studio Code 本地生成和运行应用\n\n若要在本地构建和运行应用，请执行：\n\n1. 从Visual Studio Code边栏中选择 **“运行和调试**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\":::”图标。\n\n1. 选择以下选项之一以运行和调试应用。\n\n    - **Teams工作台 (Edge)**\n    - **Teams workbench (Chrome)**\n\n        :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/spfx-debug.png\" alt-text=\"机器人主页\" border=\"true\":::\n\n1. 选择播放按钮或选择 **F5** 键以开始调试。\n    > [!NOTE]\n    > 首次运行应用时，将下载所有依赖项，并生成应用。 生成完成后，浏览器窗口会自动打开并加载SharePoint Workbench。 此过程可能需要几分钟才能完成。\n\n    如果需要，Toolkit可能会提示你安装本地证书。 此证书允许 Teams 从 `https://localhost`。 \n    \n1. 出现以下对话框时选择 **“是** ”：\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Microsoft 365\" border=\"true\":::\n\n    Teams Web 客户端在浏览器窗口中打开。\n\n1. 当系统提示将应用旁加载到本地计算机上的Teams时，选择 **“添加**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-app-local-debug.png\" alt-text=\"将应用添加到Teams\":::\n\n1. 如果需要切换到桌面Teams，请选择 Web 应用版本。 可以在标准 Web 开发环境中看到 HTML、CSS 和 JavaScript 代码。\n\n1. 如果在应用在Teams中旁加载之前提示加载调试脚本，请选择“**加载调试脚本**”。\n\n    恭喜，你的第一个应用正在Teams上运行！\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-added-local.png\" alt-text=\"本地环境中已完成的应用的屏幕截图\":::\n\n    你的应用现在应该正在运行。 可以将应用调试为任何其他SPFx Web 部件 (，例如设置断点) 。\n\n> [!TIP]\n> 尝试在浏览器窗口的 `SPFx/src/webparts/{webpart}/{webpart}.ts` 呈现方法中放置断点并重新加载。 Visual Studio Code将在代码中的断点停止。\n\n<details>\n<summary>了解使用本地 Workbench 调试应用时会发生什么情况。</summary>\n\n**本地 workbench** 是在 Visual Studio Code 中运行和调试应用的默认选项。 在本教程中，建议选择使用 Teams workbench 调试应用，但是，可以选择本地工作台来浏览 Web 部件布局。\n\n> [!NOTE]\n> 此接口仅用于探索 Web 部件在移动或平板电脑中的显示方式。 你需要编写代码以将它们包含在应用中，然后部署它来查看它们。 \n\n若要使用本地工作台浏览 Web 部件布局，请执行以下操作：\n\n1. 选择 **“本地工作台**”，然后选择 **F5** 以运行和调试应用。\n    \n    **SharePoint Web 部件 Workbench** 将在浏览器中打开，以便添加、编辑和删除 Web 部件。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart.png\" alt-text=\"显示SPFx工作台运行的屏幕截图，其中包含要添加 Web 部件的弹出窗口。\":::\n\n1. 选择 **第一列 + 图标中的“添加 Web 部件** ”以添加 Web 部件。\n\n1. 从菜单中选择 Web 部件。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-workbench-addpart2.png\" alt-text=\"显示使用弹出窗口运行的SPFx工作台以添加 Web 部件选择的屏幕截图。\":::\n\n1. 选择 **“添加新分区 +** ”图标以选择 Web 部件的列布局。\n\n1. 使用此接口试用 Web 部件的不同布局：\n    \n    - 查看 **布局的 Web 部件数据** 。\n    - 尝试在不同的布局、文本、颜色等之间进行更改。\n    - 使用 **“预览”** 按钮查看 Web 部件。 \n    - 在不同的 **移动** 设备或 **平板电脑** 设备中查看 Web 部件布局。\n    - 保存或放弃布局中的任何更改，以继续尝试可能的布局。\n\n1. 准备好后，关闭浏览器窗口以停止本地工作台调试。\n</details>\n"
- title: 部署第一个Teams应用
  durationInMinutes: 1
  content: "你已了解如何使用 Tab 功能创建、生成和运行Teams应用。 最后一步是部署应用。\n\n让我们使用Teams Toolkit在SharePoint上部署具有 Tab 功能的第一个应用。\n\n在此页中，你将学习以下内容：\n1. [部署第一个应用](#deploy-your-app-to-sharepoint)\n1. [在SharePoint上分发应用包](#distribute-the-app-package-on-sharepoint)\n\n## <a name=\"deploy-your-app-to-sharepoint\"></a>将应用部署到SharePoint\n\n确保部署中存在SharePoint应用目录。 如果不存在，请 [创建一个](/sharepoint/use-app-catalog)。 创建应用目录最多可能需要 15 分钟。\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. 打开 Visual Studio 代码。\n1. 通过选择Teams图标，从侧边栏中选择Teams Toolkit。\n1. 在 **云中选择“预配**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provisioning-commands.png\" alt-text=\"显示预配命令的屏幕截图\":::\n\n    Toolkit更新右下角的进度。 几秒钟后，你将看到以下通知：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/provision-complete.png\" alt-text=\"显示预配完成对话框的屏幕截图。\":::\n\n1. 预配完成后，选择 **“部署到云**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/deploying-command.png\" alt-text=\"显示部署命令的屏幕截图\":::\n\n    应用包已生成并上传到SharePoint站点。 Teams Toolkit显示一条消息，其中包含保存应用包的本地路径。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-package.png\" alt-text=\"SPFx应用包消息的屏幕截图\":::\n\n    生成包后，Teams Toolkit显示一条消息，其中包含已上传应用包的SharePoint站点的 URL。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-package-uploaded.png\"alt-text=\"上传到SharePoint网站的SPFx包的屏幕截图\":::\n\n1. 选择SharePoint网站的链接。\n\n    SharePoint网站将打开“应用”主页。 按照此过程在SharePoint上[分发应用](#distribute-the-app-package-on-sharepoint)。\n\n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在终端窗口中：\n\n1. 运行 `teamsfx provision`。\n\n  ``` bash\n  teamsfx provision\n  ```\n\n1. 运行 `teamsfx deploy`。\n\n  ``` bash\n  teamsfx deploy\n  ```\n\n1. 出现提示时，选择 **“生成SharePoint包**”。\n\n    按照此过程在SharePoint上[分发应用](#distribute-the-app-package-on-sharepoint)。\n---\n\n## <a name=\"distribute-the-app-package-on-sharepoint\"></a>在SharePoint上分发应用包\n\n你会发现在SharePoint站点上上传的应用包。 若要分发应用并将其同步到Teams：\n\n1. 选择 **用于SharePoint的分发应用**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-distribute-apps.png\" alt-text=\"为SharePoint分发应用。\" border=\"true\":::\n\n    “应用SharePoint主页随即打开。 应用在此页中列出。\n\n1. 选择 **“文件”** 选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-files-tab.png\" alt-text=\"选择SharePoint应用目录中的文件选项卡。\" border=\"true\":::\n\n1. 选择已部署的包，然后选择 **“同步”以Teams**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-sync-to-teams.png\" alt-text=\"选择SharePoint应用目录中的文件选项卡。\" border=\"true\":::\n\n    > [!Note]\n    > 同步到Teams过程可能需要几分钟时间。 浏览器中会显示一条消息，指示应用已成功同步到Teams。\n\n1. 打开Teams应用程序 (或登录) `https://teams.microsoft.com` 。\n1. 选择边栏上的三点，然后选择 **“所有应用**”。  \n\n    应用将放置在 **为组织类别生成的应用** 中。 可以从那里添加应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/spfx-app-in-teams.png\" alt-text=\"显示Teams中的应用的屏幕截图\" border=\"true\":::\n\n1. 选择应用，然后选择 **“添加**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-add-app.png\" alt-text=\"要在Teams中添加的已完成应用的屏幕截图。\" border=\"true\":::\n\n    恭喜！ 你的应用现在已添加到Teams。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/sp-app-added.png\" alt-text=\"要在Teams中添加的已完成应用的屏幕截图。\" border=\"true\":::"
