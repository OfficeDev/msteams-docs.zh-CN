### YamlMime:Tutorial
title: 创建Teams对话机器人
metadata:
  title: 创建Teams对话机器人
  description: 本教程介绍如何在 Teams 中设置对话Teams。
  audience: Developer
  level: Beginner
  ms.date: 04/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/conversations/channel-and-group-conversations.md
  nextTutorialTitle: 使用机器人进行频道和群组对话
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 7bdb662ef322edf1e635d84593be66d8946874ee
  ms.sourcegitcommit: a85b4ae65b87006bb2e2e50ea902eb97291e83a8
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 04/01/2022
  ms.locfileid: "64612709"
items:
- durationInMinutes: 1
  content: >
    Teams聊天机器人允许用户通过文本、交互式卡片和任务模块与 Web 服务交互。 基本对话通过 Bot Framework 连接器（一个 REST API）进行处理。 此 API 使机器人能够与Teams通信。 Bot Builder SDK 提供以下功能：


    * 轻松访问 Bot Framework 连接器。

    * 用于管理对话流和状态的其他功能。

    * 合并认知服务的简单方法，如自然语言处理 (NLP) 。


    首次将机器人添加到组或团队时，会发送一条介绍消息。 该消息提供了自动程序功能及其使用方法的简要说明。


    此分步指南可帮助你在 Teams 应用程序中创建基本对话机器人。 你将看到以下输出：


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="最终输出。" border="true"lightbox="assets/images/conversation-bot/final-output.png":::
- title: 先决条件
  durationInMinutes: 1
  content: >
    若要设置开发环境，请安装以下工具：


    * [Office 365租户](https://developer.microsoft.com/en-us/microsoft-365/dev-program)

    * [Ngrok](https://ngrok.com/) 或等效隧道解决方案

    * 最新版本[Visual Studio](https://visualstudio.microsoft.com/downloads/)

    * [.NET Core SDK 版本 3.1](https://dotnet.microsoft.com/en-us/download)

    * Microsoft Teams帐户Teams帐户
- title: 设置对话机器人
  durationInMinutes: 5
  content: "在 Azure 中开发和托管聊天机器人服务时，向 Azure 自动程序服务注册它。 执行以下步骤：\n\n1. 使用 ngrok 创建到 Web 服务器的终结点的隧道。\n1. 在 Azure 帐户中创建自动程序通道注册。\n1. 创建启用自动程序 SSO 身份验证的客户端密码。\n1. 为下游调用添加 API 权限。\n1. 将消息终结点添加到您创建的 ngrok 隧道。\n1. 添加Microsoft Teams将聊天机器人部署到 Teams 频道。\n\n**创建 ngrok 隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**在 Azure 帐户中创建自动程序通道注册**\n\n1. 访问[Azure 门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索 **框中搜索 Azure Bot** 。\n1. 选择 **\"Azure 自动程序\"**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/azure-bot.png\" alt-text=\"Azure 自动程序。\":::\n\n1. 选择“**创建**”。\n1. 在\"自动程序句柄\"字段中 **输入自动程序句柄** 名称。\n1. 从下拉列表 **中选择** 你的订阅。\n1. 从 **下拉列表中选择** 资源组。\n\n    若要创建新的资源组，请选择\"新建\"，输入资源名称，选择\"确定\"，然后从\"新建资源组位置 **\"下拉列表中选择** 所需位置。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/create-azure-bot.png\" alt-text=\"创建 azure 自动程序。\":::\n\n1. 选择 **\"应用类型\"** 作为 Microsoft 应用 **ID** **的多** 租户。\n\n    > [!NOTE]\n    > 在 **\"Microsoft 应用** ID 的创建类型\"部分，已选择\"创建新的 **Microsoft 应用 ID** \"以创建新自动程序。 如果已注册 **自动程序**，还可以选择\"使用现有应用注册\"。 在\"现有应用 ID\"字段中输入 Microsoft 应用 **ID** ，在\"现有应用密码 **\"字段中输入** 值。\n\n1. 然后“**审阅 + 创建**”。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/review-create.png\" alt-text=\"查看并创建。\":::\n\n1. 如果 **验证** 通过，请选择\"创建\"。 设置自动程序服务需要一些时间。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/validation-passed.png\" alt-text=\"自动程序验证。\":::\n\n1. 选择“**转到资源**”。 自动程序和相关资源在资源组中列出。\n\n    现在，已创建 Azure 自动程序。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/go-to-resource.png\" alt-text=\"转到资源卡。\":::\n\n**创建客户端密码**\n\n1. 在 **\"设置**\"中，选择\"**配置\"**。 保存 **Microsoft 应用 ID** (客户端 ID) 供将来参考。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/microsoft-app-id.png\" alt-text=\"Microsoft 应用 ID。\":::\n\n1. 选择 **\"管理** 与 **Microsoft 应用 ID 相邻\"**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/manage-bot-label.png\" alt-text=\"管理标签。\":::\n\n1. 在\" **客户端密码\"** 部分，选择 **\"新建客户端密码\"**。 将显示 **\"添加客户端密码\"** 窗口。  \n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/new-client-secret.png\" alt-text=\"新的客户端密码。\":::\n\n1. 输入 **\"说明** \"，然后选择\" **添加\"**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-client-secret.png\" alt-text=\"添加客户端密码。\":::\n\n1. 选择 **\"值\"列中的\"** 复制到剪贴 **板\"，** 并保存客户端密码 ID 供将来参考。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/value.png\" alt-text=\"值卡。\":::\n\n**为下游调用添加 API 权限**\n\n1. 在 **自动** 程序管理窗格中，选择 **API 权限**。\n1. 选择“**添加权限**”。 **将显示请求 API 权限** 窗口。\n1. 选择 **\"Microsoft API\"**，然后选择 **\"Microsoft Graph\"**。\n1. 选择 **\"应用程序权限\"** ，然后选择\"权限\"。\n1. 将应用所需的任何用户权限添加到下游 API，例如。 `User.Read`\n1. 选择 **添加权限**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/api-permissions.png\" alt-text=\"添加 API 权限。\" border=\"true\"lightbox=\"assets/images/conversation-bot/api-permissions.png\":::\n\n**添加消息终结点**\n\n1. 转到自动 **程序** 主页，**然后从左** 窗格中选择 **设置配置\"**。\n1. 转到 ngrok。\n1. 将 HTTPS URL (https 复制到 io) 如下图所示：\n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/ngrok.png\" alt-text=\"Ngrok。\":::\n\n1. 在 **消息终结点中**，添加 ngrok 中提供的 HTTPS URL，在 URL 末尾添加 **/api/messages**。\n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/messaging-endpoint.png\" alt-text=\"消息终结点。\":::\n\n1. 选择“**应用**”。\n\n**添加Microsoft Teams频道**\n\n1. 转到 **\"主页\"**。\n1. 从\" **最近使用的资源** \"部分，打开自动程序。\n1. 选择 **左窗格中** 的\"频道\"，**然后选择\"Microsoft Teams** <img src=\"~/assets/images/conversation-bot/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> 从可用频道列表中。    \n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/channels-teams.png\" alt-text=\"选择&quot;Teams&quot;。\":::\n\n1. 选中复选框以接受服务条款，然后选择\"同意 **\"**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/terms-of-service.png\" alt-text=\"服务条款。\":::\n\n1. 选择“保存”。\n\n    你已成功在 Azure 机器人服务中设置自动程序，现在需要设置自动程序服务连接。\n"
- title: 设置自动程序服务连接
  durationInMinutes: 1
  content: "配置自动程序示例，了解如何在应用中对对话Microsoft Teams并创建 Teams 应用包并将其上载到组织。\n\n1. 更新 Visual Studio 中的 appsettings.json。\n1. 更新 Visual Studio manifest.json，并压缩到 文件资源管理器 中的 zip 文件。\n1. 在 Visual Studio 中运行解决方案。\n1. Upload自动程序Teams。\n\n**更新对话机器人的应用设置**\n\n1. 转到存储库 https://github.com/Microsoft/botbuilder-samples.git。\n1. 选择 **\"** 代码\"，然后选择下拉列表。\n1. 选择 **\"下载 ZIP\"**。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/repo.png\" alt-text=\"存储库克隆。\":::\n\n1. 确保记下已下载的存储库的路径。\n1. 在 **文件资源管理器中**，转到 **botbuilder-samplessamples** >  >  **csharp_dotnetcore** >  **57.teams-conversation-bot**。\n1. 在 **自动程序更新Visual Studio中打开 appsettings.json** 文件。\n\n    * 为 添加自动程序名称 `MicrosoftAppType`。\n    * 你可以从 `MicrosoftAppId` 自动程序的配置页面获取 。 是 `MicrosoftAppPassword` 之前保存的客户端密码 ID 的值。\n    * 可以从用于`MicrosoftAppTenantId`登录`UserId`帐户的帐户的链接获取 或 Teams。 按照映像中的路径获取 以下链接 `tenant id`：\n    \n        :::image type=\"content\" source=\"./assets/images/conversation-bot/teams-link-new.png\" alt-text=\"租户 ID 路径Teams。\":::\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/tenant-id.png\" alt-text=\"复制Teams链接。\":::\n\n        从 URL 复制租户 ID。\n\n        :::image type=\"content\" source=\"./assets/images/conversation-bot/url-tenantid.png\" alt-text=\"TenantID。\":::\n\n1. 选择“保存”。    \n    \n    :::image type=\"content\" source=\"./assets/images/conversation-bot/appsettings.png\" alt-text=\"Appsettings Json。\":::\n\n**更新清单**\n\n1. 在 **文件资源管理器中**，转到 **botbuilder-samplessamples** >  >  **csharp_dotnetcore** >  **57.teams-conversation-botTeamsAppManifest** > 。\n1. 打开 **Visual Studio 中的 manifest.json** 文件。\n1. 在 **manifest.json** 文件中，查找 **{id}、{botId}** 并添加 Microsoft 应用 ID。\n1. 在不包括和保存 **的 validDomains** 中添加 `https://` ngrok url。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/manifest.png\" alt-text=\"清单。\":::\n\n1. Zip the contents of the **TeamsAppManifest** folder to create **manifest.zip**.\n\n    > [!NOTE]\n    > 中 `manifest.zip` 不应包含任何其他文件夹。 它在 zip `manifest json` 文件夹中应 `color` `outline` 包含源文件、图标和图标。\n    > 在演示租户中Visual Studio解决方案，然后在你的演示租户中为组织或你的 Teams 帐户上载清单。\n\n**在 Visual Studio**\n\n1. 打开 Visual Studio。\n1. 选择 **\"文件** \"，然后选择\" **打开\"**。\n1. 选择 **Project/解决方案**\"以从`.csproj`\"解决方案\"文件资源管理器。\n1. 转到 **botbuilder-samplessamples** >  >  **csharp_dotnetcore** >  **57.teams-conversation-bot**。\n1. Select `TeamsConversationBot.csproj` file and select your bot from the **Startup Projects** list.\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/visual-studio.png\" alt-text=\"Visual Studio调试。\":::\n\n1. 选择 F5 进行调试。 当自动程序准备就绪时，你将收到确认屏幕。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/bot.png\" alt-text=\"自动程序就绪屏幕。\":::\n\n**将应用上载到Teams**\n\n1. 转到Teams。\n1. 若要上传 **manifest.zip**，请选择\"应用商店>管理> Upload **自定义应用\"**，然后从 文件资源管理器 中的存储库manifest.zip打开文件资源管理器。****\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/upload-manifest.png\" alt-text=\"清单上传Teams。\":::\n\n1. 选择 **\"添加**\"以在 Teams 中安装对话Teams。\n\n    :::image type=\"content\" source=\"./assets/images/conversation-bot/add-app-teams.png\" alt-text=\"将应用添加到Teams。\":::\n\n    你现在可以与此机器人交互。\n"
- title: 与对话机器人的交互
  durationInMinutes: 2
  content: >
    可以通过向聊天机器人发送消息Teams命令列表选择命令，与聊天机器人进行交互。 机器人响应以下字符串：


    在列表的左侧窗格中Teams省略号 "。然后从列表中选择你的应用。 自动程序 **显示建议** ，如下所示：


    :::image type="content" source="./assets/images/conversation-bot/suggestions.png" alt-text="建议卡片。":::


    | MentionMe    | 显示欢迎   | MessageAllMembers |

    | --- | --- | --- |

    | :::image type="content" source="./assets/images/conversation-bot/mentionme-new.png" alt-text="Mentionme 卡片" border="true"lightbox="assets/images/conversation-bot/mentionme-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/show-welcome-new.png" alt-text="显示欢迎卡片" border="true"lightbox="assets/images/conversation-bot/show-welcome-new.png"::: | :::image type="content" source="./assets/images/conversation-bot/message-all-members-new.png" alt-text="MessageAllMembers 卡" border="true"lightbox="assets/images/conversation-bot/message-all-members-new.png"::: |

    | **结果：** 机器人回复消息并提及用户。 | **结果：** 机器人会发送欢迎卡片，以便你与之交互。 |  **结果：** 机器人向当前对话中的每个成员发送一对一消息。 |

    | **有效范围：个人** 、群聊、团队聊天。 | **有效范围：个人** 、群聊、团队聊天。 |  **有效范围：个人** 、群聊、团队聊天。 |


    在撰写邮件区域上方键入"@TeamsConversationBot"和"我可以做什么 **？"** 文本，可以从命令列表中选择一个选项。
- title: 完成挑战
  durationInMinutes: 1
  content: >
    你提供类似这样的内容了吗？


    :::image type="content" source="./assets/images/conversation-bot/final-output.png" alt-text="最终输出。" border="true"lightbox="assets/images/conversation-bot/final-output.png":::
- content: 你已完成教程，开始使用适用于Microsoft Teams。
