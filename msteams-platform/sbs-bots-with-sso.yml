### YamlMime:Tutorial
title: 使用 SSO 身份验证生成机器人
metadata:
  title: 使用 SSO 身份验证生成机器人
  description: 在本教程中，你将了解如何生成具有 SSO 身份验证的机器人。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: 详细了解机器人身份验证
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: fcfff8a5fc1f38c4afdb7b6b64e752dc2234512f
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740658"
items:
- durationInMinutes: 1
  content: >
    Teams 机器人是对话机器人，可运行用户执行的重复自动化任务，例如客户服务。 用户需要多次登录，而无需单一登录 (SSO) 身份验证。 使用 SSO 身份验证方法，用户无需多次登录到机器人。


    机器人的行为方式不同，具体取决于它所涉及的对话：


    * 频道和群组聊天聊天中的机器人要求用户@mention机器人。

    * 一对一对话中的机器人不要求@提及。 用户发送的所有消息都路由到机器人。


    本分步指南可帮助你生成具有 SSO 身份验证的机器人。 你将看到以下输出：

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="移动登录到机器人":::
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境：  \n\n | &nbsp; | 安装 | 用于使用... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [帐户 (不是来宾帐户的 Microsoft Teams) ](https://www.microsoft.com/microsoft-teams/download-app) |  Microsoft Teams 可在一个位置通过聊天、会议、通话等应用与你合作的每个人进行协作。 |\n | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负载之一：<br> • ASP.NET 和 Web 开发 <br> • .NET Core 跨平台开发 | 可以在 Visual Studio 2022 中安装企业版，并安装工作负载。 |\n | &nbsp; | [Microsoft 365 开发人员帐户](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | 具有安装应用的相应权限的 Teams 帐户的访问权限。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | teams 应用功能 (对话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，这不是必需的。 此包使用 npm `devDependencies`) 安装在项目目录 (中。 |\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [authtoken](https://ngrok.com/download)。\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>设置 Teams 开发租户\n\n**租户** 类似于空间或容器，你可以在 Teams 中为组织聊天、共享文件和运行会议。 还可以旁加载和测试应用。\n\n### <a name=\"check-for-sideloading-option\"></a>检查旁加载选项\n\n创建应用后，必须在 Teams 中加载应用，而无需分发它。 此加载称为旁加载。 登录到 Microsoft 365 帐户以查看此选项。\n\n > [!NOTE]\n > 在 Teams 本地环境中预览和测试应用时，需要旁加载。 启用旁加载以在本地 Teams 中预览和测试应用。\n\n是否已拥有租户，并且是否具有管理员访问权限？ 让我们来看看你是否真的这样做了！\n\n在 Teams 中验证旁加载应用：\n\n1. 在 Teams 客户端中，选择“ **应用**”。\n1. 选择“ **管理应用** > **”“上传应用**”。\n1. 查找“ **上传自定义应用**”选项。 如果看到 选项，则表示已启用旁加载应用。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app1_1.png\" alt-text=\"图中显示了在 Teams 中上传自定义应用的选项。\":::\n\n    > [!NOTE]\n    > 如果没有上传自定义应用的选项，请联系 Teams 管理员。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>创建免费的 Teams 开发人员租户 (可选) \n\n如果没有 Teams 开发人员帐户，可以免费获取它。 加入 Microsoft 365 开发人员计划！\n\n1. 转到 [Microsoft 365 开发人员计划](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. 选择“ **立即加入** ”，然后按照屏幕上的说明进行操作。\n1. 从欢迎屏幕中选择 **“设置 E5 订阅** ”。\n1. 设置管理员帐户。 完成后，将显示以下屏幕。\n\n      :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. 使用新的管理员帐户登录到 Teams。 现在，应具有 **“上传自定义应用** ”选项。\n"
- title: 创建并注册机器人
  durationInMinutes: 5
  content: "以下步骤可帮助你在 Azure 门户 中创建和注册机器人：\n\n1. 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n1. 创建客户端密码以启用机器人的 SSO 身份验证。\n1. 添加 Teams 频道以部署机器人。\n1. 使用 ngrok 创建到 Web 服务器终结点的隧道。\n1. 将消息传递终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“**创建资源**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Createaresource_1.png\" alt-text=\"创建资源\":::\n\n1. 在搜索框中，输入 **Azure 机器人**。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/searchazurebot_1.png\" alt-text=\"创建资源\":::\n\n1. 选择“**Enter**”。\n\n1. 选择“ **Azure 机器人**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectazurebot_1.png\" alt-text=\"选择“Azure 机器人”\":::\n\n1. 选择“**创建**”。\n\n    :::image type=\"content\" source=\"./assets/images/bots/azure-bot_1.png\" alt-text=\"Azure 机器人。\":::\n\n   此时会显示 **“创建 Azure 机器人** ”窗口。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/azurebotpage.png\" alt-text=\"显示 Azure 机器人页的屏幕截图。\":::\n\n1. 输入以下详细信息以创建 Azure 机器人。\n\n    1. 在机器人句柄中输入所需的 **机器人句柄** 名称。\n\n    1. 从下拉列表中选择 **“订阅** ”和“ **资源组** ”。\n\n         :::image type=\"content\" source=\"~/assets/images/bots/Azurebotcreate.png\" alt-text=\"显示创建资源 Azure 机器人时的详细信息的屏幕截图。\":::\n  \n    1. 若要创建新资源组，请选择“ **新建** ”>输入资源名称> **确定**”。 现在，从“ **新建资源组** 位置”下拉列表中选择所需位置。\n    \n         :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"显示新资源组位置的屏幕截图\":::\n    \n    1. 选择 **“应用类型** ”作为 **“多租户**”。 \n\n    1. 在 **“Microsoft 应用 ID** ”部分中，默认选择“ **创建新的 Microsoft 应用 ID** ”。\n\n       还可以选择“ **使用现有应用注册** ”，并输入现有 **应用 ID**、 **应用租户 ID** 和 **MSI 资源 ID**。\n\n         :::image type=\"content\" source=\"~/assets/images/bots/Review-Create_1.png\" alt-text=\"显示选择多租户选项的屏幕截图。 \":::\n\n       > [!NOTE]\n       > 不能使用相同的 **Microsoft 应用 ID** 创建多个机器人。\n\n    1. 然后“**审阅 + 创建**”。\n\n1. 通过验证后，选择“ **创建**”。\n\n     :::image type=\"content\" source=\"~/assets/images/bots/validationpass_1.png\" alt-text=\"显示验证通过的屏幕截图。\":::\n\n   预配机器人服务需要一些时间。\n\n1. 选择“**转到资源**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/gotoresource_1.png\" alt-text=\"Resource\":::\n\n   已创建 Azure 机器人。 可以在 Azure 机器人中查看 **资源组** 和 **订阅 ID** 详细信息。\n\n     :::image type=\"content\" source=\"~/assets/images/bots/Azurebotresource_1.png\" alt-text=\"创建的 Azure 机器人资源\":::\n\n**创建客户端密码**\n\n 执行以下步骤以创建客户端密码：\n\n1. 在左窗格中，选择“ **配置**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectconfigure_1.png\" alt-text=\"选择“配置”\":::\n\n   > [!Tip]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n1. 在 **“Microsoft 应用 ID**”旁边，选择“ **管理**”。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"管理机器人\":::\n\n1. 在 **“客户端机密** ”部分中，选择“ **新建客户端密码**”。\n\n      :::image type=\"content\" source=\"~/assets/images/bots/newclientsecret_2.png\" alt-text=\"显示新客户端密码选择的屏幕截图。\":::\n\n   此时会显示 **“添加客户端机密** ”窗口。\n\n1. 输入 **“说明**”。\n\n1. 选择“**添加**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addclientsecret_1.png\" alt-text=\"显示向应用添加客户端密码的屏幕截图。\":::\n\n1. 在 **“值** ”列中，选择“复制到剪贴板”图标以复制值详细信息。 \n\n    :::image type=\"content\" source=\"~/assets/images/bots/valueclientsecret.png\" alt-text=\"显示复制到剪贴板的客户端密码值的屏幕截图。\":::\n\n   > [!Tip]\n   > 保存 **客户端机密** 值或应用密码以供将来参考。\n   \n**将机器人添加到 Teams 频道**\n\n1. 选择“主页”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/selecthome_1.png\" alt-text=\"主页\":::\n\n1. 从 **“最近使用的资源**”中选择机器人。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-recent-resources_1.png\" alt-text=\"选择最近的资源\":::\n\n1. 在左窗格中选择“ **频道** ”。 \n\n    :::image type=\"content\" source=\"~/assets/images/bots/selectchannel_1.png\" alt-text=\"选择“最近”\":::\n\n1. 选择 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>. \n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-microsoft-teams_1.png\" alt-text=\"选择 Microsoft Teams\":::\n\n1. 选中复选框以接受 **服务条款**。\n\n1. 选择“ **同意**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Terms-of-service_1.png\" alt-text=\"条款\":::\n\n1. 选择“**应用**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/apply_1.png\" alt-text=\"显示“应用”选项的屏幕截图\":::\n\n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n   ```bash\n   ngrok http --host-header=localhost 3978\n   ```\n   > [!TIP]\n   > 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中显示的步骤注册并验证 ngrok。 然后运行 命令 `ngrok http --host-header=localhost 3978` 。\n\n**添加消息传送终结点**\n\n1. 从 ngrok 复制 HTTPS URL。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url1_1.png\" alt-text=\"ngrok HTTPS URL\":::\n\n    > [!NOTE]\n    > ngrok 中的 HTTPS URL 是完全限定的域名。\n    > `WebAppDomain`是不包含`https://`在中的完全限定域名。\n\n1. 返回到Azure 门户。\n\n1. 在创建的 Azure 机器人 **的设置** 中，选择 **“配置**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-configuration_1.png\" alt-text=\"选择“配置”\":::\n\n1. 在 **消息传递终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/messagingURL_2.png\" alt-text=\"消息传送终结点\":::\n\n1. 选择“**应用**”。\n\n    已成功在 Azure 机器人服务 中设置机器人。\n"
- title: 为机器人配置 SSO
  durationInMinutes: 5
  content: "**将重定向 URI 添加到 Azure 机器人资源**\n\n1. 选择“ **主页** > **Azure Active Directory**”。\n\n1. 在左窗格中，选择“**应用注册**”。\n\n1. 选择机器人。\n\n1. 在左窗格中，选择“ **身份验证** ”以设置重定向 URI。\n\n     :::image type=\"content\" source=\"~/assets/images/bots/select-authentication_1.png\" alt-text=\"选择“身份验证”\":::\n\n1. 在“ **平台配置**”中，选择“ **添加平台** ”，选择要托管机器人应用的平台。 \n\n1. 对于本教程，请选择 **“Web**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-web_1.png\" alt-text=\"显示 Web 选择的屏幕截图。\":::\n    \n1. 输入 **“重定向 URI** ”作为 `https://token.botframework.com/.auth/web/redirect` 以及 Azure AD 将对其发送用户身份验证响应的 URI。\n\n1. 通过选中以下复选框启用 **隐式授予和混合流** ：\n\n    * **ID 令牌**\n    * **访问令牌**\n\n1. 选择“**配置**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-implict-grant_1.png\" alt-text=\"显示“配置”选项的屏幕截图。\":::\n\n    重定向 URI 将添加到 Azure 机器人资源。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/redirectURIadded.png\" alt-text=\"显示已添加到机器人资源的重定向 URI 的屏幕截图。\":::\n\n**公开 API 终结点**\n\n1. 在左窗格中，选择“ **公开 API**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/expose-an-api_1.png\" alt-text=\"公开 API\":::\n\n1. 选择“ **设置**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/appidURI.png\" alt-text=\"显示“设置”选项的屏幕截图。\":::\n\n1. 以 的形式 `api://botid-{your AppID}`设置应用程序 ID URI。\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/exposeAPI_1.png\" alt-text=\"显示“保存”选项的屏幕截图。\":::\n\n   > [!NOTE]\n   > 如果使用 ngrok 等隧道服务，请确保在 ngrok 子域发生更改时更新值。\n   > 例如： `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，其中 `f631****.ngrok.io` 是新的 ngrok 子域名称。\n\n1. 选择“**添加作用域**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/Addascope_1.png\" alt-text=\"显示添加范围的屏幕截图。\":::\n\n   此时将显示 **“添加范围** ”窗口。\n\n1. 输入详细信息以配置范围。    \n\n      1. 输入 `access_as_user` 作为 **范围名称**。\n\n         > [!NOTE]\n         > **作用域名称** 应与末尾追加的应用程序 **ID** URI `/access_as_user` 匹配。\n\n      1. 将 **“谁可以同意？”** 设置为 `Admins and users`。\n\n      1. 若要使用适当的范围值 `access_as_user` 配置管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n          * 输入`Teams can access the user’s profile`作为 **管理员同意显示名称**。\n\n          * 输入`Allows Teams to call the app’s web APIs as the current user`作为 **管理员同意说明**。\n\n          * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。\n\n          * 输入 `Enable Teams to call this app’s APIs with the same rights as you have` 作为 **用户同意说明**。\n\n      1. 确保将“状态”设置为“已启用”。\n\n      1. 选择 **“添加范围** ”进行保存。\n\n     :::image type=\"content\" source=\"~/assets/images/bots/addscope.png\" alt-text=\"显示配置范围的屏幕截图。\":::\n\n   应用程序 ID URI 是使用 **范围名称** 创建的。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/ExposeAPI_2.png\" alt-text=\"显示 API 公开和已添加范围的屏幕截图。\":::\n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。\n\n1. 选择 **添加客户端应用程序**。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/addaclientapplication.png\" alt-text=\"显示添加客户端应用程序的屏幕截图。\":::\n\n   此时会显示 **“添加客户端应用程序** ”窗口。\n\n1. 分别输入要授权的桌面和 Web 应用程序的客户端 ID。 它是要授权的客户端应用程序的应用程序 ID。\n   \n   |**客户端 ID**|**用于授权**|\n   |--------|-------------|\n   | `1fec8e78-bce4-4aaf-ab1b-5451cc387264` | Teams 桌面或移动应用程序 |\n   | `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` | Teams Web 应用程序 |\n\n1. 选择“ **授权的范围** ”，确定服务将返回哪种类型的令牌。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-desktop-app.png\" alt-text=\"显示已授权范围的选择的屏幕截图。\":::\n   \n1. 选择“添加应用程序”。\n\n    下图显示了客户端 ID：\n\n      :::image type=\"content\" source=\"~/assets/images/bots/clientapps.png\" alt-text=\"显示添加客户端 ID 的屏幕截图。\":::\n\n**配置 Graph 权限**\n\n1. 在左窗格中，选择“ **API 权限**”。\n\n      :::image type=\"content\" source=\"~/assets/images/bots/select-api-permissions_1.png\" alt-text=\"选择 API 权限\":::\n\n   > [!NOTE]\n   > 仅当机器人应用在不同租户中注册时，用户才需要同意 API 权限。\n\n1. 选择“**添加权限**”。\n\n   此时会显示 **“请求 API 权限** ”窗口。\n\n1. 选择 **Microsoft Graph**。\n    \n    :::image type=\"content\" source=\"~/assets/images/bots/select-microsoft-graph_2.png\" alt-text=\"显示 Microsoft Graph 选择的屏幕截图。\":::\n\n1. 选择“**委托的权限**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-graph-permissions.png\" alt-text=\"显示选择委派权限的屏幕截图。\":::\n\n1. 从 **“用户** ”下拉列表中选择“ **用户** ”。读取权限。\n\n1. 选择 **添加权限**。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/userread.png\" alt-text=\"显示“用户读取”选项的屏幕截图。\":::\n\n**更新清单**\n\n1. 在左窗格中，选择“ **清单**”。\n\n     :::image type=\"content\" source=\"~/assets/images/bots/select-manifest_1.png\" alt-text=\"选择“清单”\":::\n\n1. 确保配置项设置为 **\"accessTokenAcceptedVersion\": 2**。 否则，将其值更改为 **2** ，然后选择“ **保存**”。\n\n   > [!NOTE]\n   > 如果已在 Teams 中测试机器人，则必须从此应用和 Teams 注销。 然后再次登录以查看此更改。</br>\n    \n      :::image type=\"content\" source=\"~/assets/images/bots/update-manifest.png\" alt-text=\"显示清单更新的屏幕截图。\":::\n\n**设置机器人服务连接**\n\n1. 在 **“配置”页** 中，选择“ **添加 OAuth 连接设置**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/select-configuration_2.png\" alt-text=\"选择配置1\":::\n\n   此时将显示 **“新建连接设置”** 窗口。\n\n     \n\n1. 在 **“新建连接设置”** 中，输入以下详细信息：\n\n    | 字段 | 值或描述 |\n    | ----- | ----- |\n    | 名称 | 输入新连接设置的名称。 可以在机器人服务代码的设置中使用名称。 |\n    | 服务提供程序 | 选择“ **Azure Active Directory V2**”。 |\n    | 客户端 ID | 以前保存为 **Microsoft 应用 ID**。 |\n    | 客户端密码 | 以前保存为客户端机密 ID **的值** 。 |\n    | 令牌交换 URL | 使用之前在公开 API 终结点时获取 **的应用程序 ID URL** 。 |\n    | 租户 ID | 输入 **common**。 |\n    | Scopes | 输入 **User.Read** ，并在指定下游 API 的权限时添加所需的所有 **作用域** 。 |\n\n    :::image type=\"content\" source=\"~/assets/images/bots/botserviceconnection.png\" alt-text=\"显示机器人服务连接的屏幕截图。\":::\n\n1. 选择“**保存**”。\n\n   现已为机器人配置 SSO。\n"
- title: 配置并运行机器人示例
  durationInMinutes: 1
  content: "1. 打开 **Visual Studio**。\n\n1. 选择 **“克隆存储库**”。\n\n1. 在 **存储库位置** 中，输入 `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`。 确保记下克隆存储库 **的路径** 。\n\n1. 转到 **“文件** > **打开** > **项目/解决方案**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/project-solution_1.png\" alt-text=\"显示导航到项目/解决方案的屏幕截图。\":::\n\n1. 从 **csharp_dotnetcore** 文件夹中选择 **BotSSOCSharp.csproj** 文件。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/filepath_1.png\" alt-text=\"显示文件夹路径的屏幕截图。\":::\n\n1. 打开 **appsettings.json** 文件。\n\n1. 更新机器人的 **appsettings.json** 配置， `MicrosoftAppId` 以使用 和 `MicrosoftAppPassword`。 使用 OAuth 连接名称作为 **连接名称**。\n\n    > [!NOTE]\n    > 可以从机器人的“配置”页获取 `MicrosoftAppId` 。 `MicrosoftAppPassword`是以前在 Azure 中保存的客户端机密 ID 的值。\n\n     :::image type=\"content\" source=\"~/assets/images/bots/appsettingsjson.png\" alt-text=\"显示 appsettings json 选项的 Sceenshot。\"lightbox=\"~/assets/images/bots/appsettingsjson.png\":::\n\n1. 选择 **F5**  运行项目。\n\n1. 如果出现以下对话框，请选择“**是**”：\n\n    :::image type=\"content\" source=\"~/assets/images/bots/certificate.png\" alt-text=\"显示对话框出现时选择选项“是”的屏幕截图。\":::\n\n   此时会打开一个网页，并显示 **消息“机器人已就绪**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/yourbot.png\" alt-text=\"显示“机器人已准备就绪”的网页的屏幕截图。\":::\n    \n    <br>\n\n    <details>\n\n    <summary><b>疑难解答</b></summary>\n\n    如果收到 **“找不到包”** 错误，请执行以下步骤：\n\n    1.  转到 **“工具”** > **“NuGet 包管理器** > **”“包管理器设置**”。\n    1.  在出现的 **“选项”** 窗口中，选择“ **NuGet 包管理器** > **包源**”。\n    1.  选择“**添加**”。\n    1.  在 **“名称”** 中，输入 `nuget.org` ，并在 **“源”** 中输入 `https://api.nuget.org/v3/index.json`。\n    1.  选择“ **更新** ”和 **“确定**”。\n    1.  重新生成项目。\n    <br>\n\n    </details>\n"
- title: 配置和运行 Teams 应用
  durationInMinutes: 2
  content: "1. 在 Visual Studio 中，打开 **appPackage** 文件夹。\n\n1. 打开 **manifest.json** 文件。\n\n1. 将 **{TODO： MicrosoftAppId}** 的所有匹配项替换为机器人的 **Microsoft 应用 ID**。\n\n1. 在克隆的存储库中，转到 **bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage** 文件夹。\n\n1. 使用 **清单** 文件夹中存在的以下文件创建.zip： \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manifest_1.png\" alt-text=\"显示如何压缩清单文件夹的屏幕截图\":::\n\n1. 转到 Teams 客户端。\n1. 选择“ **应用商店**”。\n1. 选择“**管理应用**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/manage-apps_3.png\" alt-text=\"显示管理应用的选择的屏幕截图。\":::\n\n1. 选择“**上传自定义应用**”。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/upload-custom-app.png\" alt-text=\"显示上传自定义应用的屏幕截图。\":::\n\n1. 选择“ **打开** ”以上传已在 **“清单”** 文件夹中创建的.zip文件。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/open-app.png\" alt-text=\"打开应用\":::\n\n1. 选择“ **添加** ”，将聊天机器人添加到聊天。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/add-conversation-bot_1.png\" alt-text=\"显示“添加聊天机器人”选项的屏幕截图。\":::\n\n    可以通过向机器人发送消息来与机器人交互。 机器人将交换 SSO 令牌并代表你调用 图形 API。 除非你发送注销消息，否则它会让你保持 **登录** 状态。\n\n1. 向机器人发送消息。 聊天机器人首次请求同意。\n\n1. 选择“ **继续** ”，向 Teams 客户端授予访问机器人的权限。\n\n     :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request1.png\" alt-text=\"显示向机器人授予权限的选择的屏幕截图\":::\n    \n    > [!NOTE]\n    > 现在，你已使用机器人应用配置 SSO，这是你唯一需要同意的时间。\n\n1. 对于移动设备，对于 **请求的权限**，请选择“**接受**”。\n\n    > [!NOTE]\n    > 现在，你已在移动设备中配置了机器人应用的 SSO，这是你唯一需要同意的时间。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/sbsdesktop-mobile-consent-request.png\" alt-text=\"显示移动设备登录到机器人的屏幕截图。\":::\n"
- title: 完成挑战
  durationInMinutes: 1
  content: >
    你想出了这样的东西吗？

     :::image type="content" source="~/assets/images/bots/sbs-desktop-mobile.png" alt-text="显示最终输出的屏幕截图。":::
- content: 你已完成本教程，开始生成具有 SSO 身份验证的机器人。
