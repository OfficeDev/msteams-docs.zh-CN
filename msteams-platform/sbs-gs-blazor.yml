### YamlMime:Tutorial
title: 使用 Blazor 生成第一个应用
metadata:
  title: 使用 Blazor 的 Hello World
  description: 本教程介绍如何使用 Blazor 生成 Hello World 应用。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 返回到入门概述
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: dc6f4bb12b88d536ecff0559270444a0f6a5fe32
  ms.sourcegitcommit: 20841c2040428d13e493f6ed0aafd962762e2f5b
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60725859"
items:
- durationInMinutes: 1
  content: "\n利用 Blazor，可以使用 C# 而不是 JavaScript 生成交互式 Web API。 \n\n你可以开始Microsoft Teams选项卡功能生成你的第一个应用来开发应用。 2019 年 10 月，你将使用 Blazor 和 Visual Studio生成此应用程序。\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"显示此应用程序的图表具有三个功能。选项卡突出显示。\" border=\"false\":::\n\n> [!NOTE]\n> 目前，Teams Toolkit为具有 Visual Studio 2019 和 Blazor 的 Tab 应用提供模板。 自动程序功能和邮件扩展功能不可用。\n"
- title: 先决条件
  durationInMinutes: 1
  content: "\n以下是生成和部署应用所需的工具列表。\n\n| &nbsp;    | 安装   | 对于使用... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Microsoft Edge (](https://www.microsoft.com/edge)推荐) [Google Chrome](https://www.google.com/chrome/) | 具有开发人员工具的浏览器。 |\n| &nbsp; | [Visual Studio 2019、ASP.NET](https://visualstudio.com/download)**和 Web 开发** 或 **.NET Core 跨平台开发** 工作负载 | .NET |\n| **可选** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) and [Azure CLI](/cli/azure/install-azure-cli) | Azure 工具，用于访问已存储数据或在 Azure 中为 Teams应用部署基于云的后端。 |\n| &nbsp; | [Microsoft Graph 浏览器](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph资源管理器，一种基于浏览器的工具，可用于从 Microsoft 运行查询Graph数据。 |\n| &nbsp; | [Teams 开发人员门户](https://dev.teams.microsoft.com/) | 基于 Web 的门户，用于配置、管理和分发Teams应用，包括组织或 Teams 应用商店。 |\n| &nbsp; | **Visual Studio Code扩展** | &nbsp; |\n| &nbsp; | [Azure 函数核心工具](/azure/azure-functions/functions-run-local) | 在本地调试运行期间本地后端组件，包括在 Azure 中运行服务时所需的身份验证帮助程序。 它使用 npm (安装在项目目录 `devDependencies`) 。 |\n| &nbsp; | [.NET SDK](/dotnet/core/install/) | 用于本地调试和 Azure Functions 应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，可以安装可移植版本。 |\n\n> [!TIP]\n> 如果你使用 Microsoft Graph数据，你应该了解 Microsoft Graph Explorer 并添加书签。 此基于浏览器的工具允许你在应用Graph查询 Microsoft 帐户。\n</details>\n\n## <a name=\"prepare-development-environment\"></a>准备开发环境\n\n安装所需工具后，设置开发环境。\n\n### <a name=\"install-the-teams-toolkit\"></a>安装Teams Toolkit\n\n该Teams Toolkit使用工具来为应用预配和部署云资源、发布到 Teams 商店等，帮助简化开发过程。 你可以将工具包与 Visual Studio Code、Visual Studio 或用作称为 (的 CLI `teamsfx`) 。 \n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs)\n\n您可以使用 Visual Studio 2019 在 .NET Teams Blazor Server 开发应用程序。\n\n若要安装 Teams Toolkit扩展：\n\n1. 打开Visual Studio 2019。\n1. 选择 **扩展**  >  **管理扩展**。\n1. 在搜索框中，输入 **\"Teams Toolkit\"。**\n1. 选择\"Teams Toolkit扩展并选择\"下载 **\"。** 下载扩展。\n1. 关闭 Visual Studio 2019 以安装扩展。\n\n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n若要安装 TeamsFx CLI，请使用 `npm` 程序包管理器：\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\n根据您的配置，您可能需要使用 安装 `sudo` CLI：\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\n此情况在 Linux 和 macOS 系统上更为常见。\n\n确保将 npm 全局缓存添加到 PATH。 此步骤通常作为安装程序的一Node.js完成。  \n\n可以将 CLI 与 命令 `teamsfx` 一同使用。 通过运行 验证命令是否正常工作 `teamsfx -h` 。\n\n> [!CAUTION]\n> 必须先为 PowerShell 启用\"远程签名\"执行策略，然后才能在 PowerShell 终端中运行 TeamsFx。\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>设置开发Teams租户\n\n租户 **就像** 租户中的空间或组织的容器，Teams聊天、共享文件和运行会议。 此空间也是你旁加载和测试应用的地方。 让我们验证你是否已准备好使用租户进行开发。\n\n### <a name=\"enable-sideloading-option\"></a>启用旁加载选项\n\n创建应用后，必须在不分配应用的情况下Teams加载应用。 此过程称为旁加载。 登录到你的 Microsoft 365 帐户以查看此选项。\n  \n你已拥有租户，是否具有管理员访问权限？ 让我们看一下你是否确实要这样做！\n\n验证你能否在应用中旁加载Teams：\n\n1. 在 Teams 客户端中，选择 **\"应用商店图标**\"。\n1. 选择 **\"管理应用\"。**\n1. 查找用于自定义 **Upload的选项**。 如果看到 选项，则启用旁加载应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"插图显示用于将自定义应用上传到 Teams。\":::\n\n    > [!NOTE]\n    > 如果Teams显示上传自定义应用的选项，请与管理员Teams联系。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>创建一个Teams开发人员租户 (可选) \n\n如果你没有开发者帐户Teams，可以免费获取它。 加入Microsoft 365开发人员计划！\n\n1. 转到开发人员[Microsoft 365计划](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. 选择 **立即加入** 并按照屏幕上的说明进行操作。\n1. 在欢迎屏幕中，选择 **\"设置 E5 订阅\"。**\n1. 设置管理员帐户。 完成后，将显示以下屏幕。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"注册开发人员计划后看到Microsoft 365的示例。\":::\n\n1. 使用刚Teams的管理员帐户登录登录。 验证你已Upload **自定义应用** 选项Teams。\n\n## <a name=\"get-a-free-azure-account\"></a>获取免费的 Azure 帐户\n\n如果你想要在 Azure 中托管应用或访问资源，则必须拥有 Azure 订阅。 [在开始之前创建](https://azure.microsoft.com/free/) 一个免费帐户。\n\n现在，你已获得所有工具并设置帐户。 接下来，让我们设置开发环境并开始构建！\n"
- title: 为选项卡应用创建项目工作区
  durationInMinutes: 1
  content: "本教程指导你完成使用 .NET/Blazor 创建、运行和部署第一个Teams应用程序的步骤。\n\n在本教程中，你将了解：\n1. [如何使用新选项卡项目设置Teams Toolkit](#create-your-project)\n1. [关于应用的目录结构](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-project\"></a>创建项目\n\n使用 Teams 工具包创建你的第一个项目:\n\n1. 打开Visual Studio 2019。\n1. 选择 **创建新项目**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-select-project.png\" alt-text=\"插图显示创建新项目的选项。\" border=\"false\":::\n\n1. Select **Microsoft Teams** from **All project types** dropdown list.  \n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-select-teams-app.png\" alt-text=\"插图显示选择模板的选项。\" border=\"false\":::\n\n1. 选择 **Microsoft Teams应用** 作为模板，然后选择下一 **步**。\n    将显示 **\"配置新项目\"** 屏幕。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-configure-project.png\" alt-text=\"插图显示用于配置新项目的选项。\" border=\"false\":::\n\n1. 为项目输入一个合适的名称。\n\n1. 选择要创建项目工作区的文件夹路径。\n\n1. 选择要创建的解决方案的名称，然后选择\"下一步 **\"。**\n    将显示 **\"其他信息** \"屏幕。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-add-info-create.png\" alt-text=\"插图显示提供其他信息的选项。\" border=\"false\":::\n\n1. 输入应用程序名称。\n\n1. 输入公司名称。\n  应用程序名称和公司名称将显示给最终用户。\n\n1. 选择“**创建**”。 \n    \n    你的Teams应用程序在几秒后创建。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-tab-app.png\" alt-text=\"插图显示 2019 年 10 月Visual Studio项目。\" border=\"false\":::\n\n<details>\n<summary>快速回顾一下创建Teams应用。</summary>\n观看此简短回顾，Teams应用。\n\n![创建Teams应用](~/assets/videos/blazor-tab-app.gif)\n</details>\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>浏览源代码\n\n创建项目后，你拥有用于构建基本个人应用的组件。 您可以在 2019 年10 月的解决方案资源管理器区域中查看Visual Studio结构。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-app-solution-explorer.png\" alt-text=\"Screenshot showing app project files for a personal app in Visual Studio 2019.\" border=\"false\":::\n\n该Teams Toolkit基于所选功能为项目创建基架。 在其他文件中，Teams Toolkit维护：\n\n- 应用图标：应用图标在 和 中存储为 PNG `color.png` 文件 `outline.png` 。\n- `manifest.json`：用于通过开发人员门户发布的应用程序清单Teams存储在 中 `Properties/manifest.json` 。\n- `BackendController.cs`：提供后端控制器 `Controllers/BackendController.cs` 以帮助进行身份验证。\n\nThe Teams Toolkit scaffolds all the necessary code for a basic tab as a Blazor Server.\n\n- `Pages/Tab.razor`：是前端应用程序的入口点。\n- `TeamsFx.cs``JS/src/index.js`和 ：用于初始化与主机Teams通信。\n\n可以通过向应用程序添加其他 ASP.NET Core添加后端功能。\n"
- title: 在本地生成并运行你的Teams应用
  durationInMinutes: 1
  content: "使用选项卡设置项目工作区Teams Toolkit，生成选项卡项目。 你需要登录到你的帐户Microsoft 365帐户。\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>登录到你的 Microsoft 365 帐户\n\n创建项目后，使用以下项设置单一Microsoft 365：\n\n1. 选择 **Project**  >  **TeamsFx**  >  **配置进行 SSO...。**\n1. 当系统提示时Microsoft 365帐户登录管理员帐户。\n\n## <a name=\"build-and-run-your-app\"></a>构建并运行应用程序\n\n若要在本地构建并运行应用程序:\n\n1. 打开Visual Studio 2019。 \n1. 选择 **\"**  >  **调试开始调试\"** 或 **选择 F5** 以在调试模式下运行你的应用。\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>在本地调试器中运行应用时，了解会发生什么情况。</summary>\n\n    选择 **F5 时**，Teams Toolkit：\n\n    1. 向应用程序注册Azure Active Directory。\n    1. 将应用程序注册为\"旁加载\"Microsoft Teams。\n    1. 在本地运行启动应用程序后端。\n    1. 在本地托管应用程序前端启动。\n    1. 使用Microsoft Teams启动 Web 浏览器中的 url，以指示Teams在应用程序清单 (中注册 URL 时旁加载) 。\n\n    </details>\n1. 如果需要，请安装自签名 SSL 证书进行本地调试。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Screenshot showing how the prompt to install an SSL certificate to enable Teams to load your application from localhost.\":::\n\n    Teams在 Web 浏览器中加载。\n1. 如果 **系统** 提示你打开客户端，请选择\"取消\"以保留在Microsoft Teams中。\n1. 使用 Microsoft 365 帐户登录。\n1. 当 **系统** 提示安装要安装的应用时，选择\"添加\"Teams。\n\n    此时将显示应用：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-completed-app.png\" alt-text=\"已完成应用的屏幕截图\":::\n\n    你可以执行正常的调试活动，例如设置断点，就像执行任何其他 Web 应用程序一样。 该应用支持热重新加载。  如果更改了项目内的任何文件，将重新加载页面。\n\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>了解如何解决应用不在本地运行的问题。</summary>\n\n若要在应用中运行Teams，你需要一个Microsoft 365应用程序旁加载的一个开发帐户。 可以在先决条件部分了解有关它有关详细信息。\n</details>\n"
- title: 部署你的第一Teams应用
  durationInMinutes: 1
  content: "\n你已经了解了使用 Tab 功能创建、生成Teams运行应用。 最后一步是在 Azure 上部署应用。\n\n让我们在 Azure 上部署第一个使用 Tab 功能的应用，Teams Toolkit。\n\n## <a name=\"deploy-your-app-to-azure\"></a>将应用部署到 Azure\n\n部署包含两个步骤：\n\n1. 创建必要的云资源。 此过程也称为预配。\n1. 开始编码，将应用复制到已创建的云资源。\n\n    > **预览**\n    >\n    > 对 Blazor 应用的支持是 Teams Toolkit。 设置和部署是结合 Visual Studio 2019 和开发人员门户Teams。\n\n## <a name=\"provision-and-deploy-your-app-to-azure-app-service\"></a>预配应用并部署到 Azure 应用服务\n\n1. 在\"解决方案资源管理器\"中，右键单击项目节点并选择\"发布 **\"。** 您还可以使用\"生成  >  **发布\"** 菜单项。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-build-publish.png\" alt-text=\"选择项目的&quot;发布&quot;操作\" border=\"false\":::\n\n1. 选择 **Azure，** 然后选择 **\"发布** \"窗口中的\"下 **一步** \"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-publish.png\" alt-text=\"选择 Azure 作为发布目标\" border=\"false\":::\n\n1. 选择 **Azure 应用服务 (Windows) ，** 然后选择下一 **步**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-vs-app-service.png\" alt-text=\"选择 Azure 应用服务作为发布目标\" border=\"false\":::\n\n1. 选择 **+** 以创建新的应用服务实例。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-app-subscription.png\" alt-text=\"创建新实例。\" border=\"false\":::\n\n    在\"**应用服务 (Windows)** 对话框中 **，将填充**\"名称\"、订阅名称、\"资源组\"和\"**托管** 计划\"条目字段。  如果已运行应用服务，则选择现有设置。 可以选择创建新的资源组和托管计划。\n\n1. 准备就绪 **后** ，选择\"创建\"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-service-create-new.png\" alt-text=\"选择托管计划和订阅\" border=\"false\":::\n\n    你会注意到新创建的实例已在\"发布\"对话框中 **自动** 选中。\n\n1. 准备就绪 **后** ，选择\"完成\"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-app-instance.png\" alt-text=\"选择新实例。\" border=\"false\":::\n\n1. 选择部署 **(** 旁边的) 编辑铅笔 **图标**。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-deploy-mode.png\" alt-text=\"选择部署模式。\" border=\"false\":::\n      \n      将显示\"发布\"对话框。\n\n1. 选择 **\"自包含\"** 作为 **部署模式，** 然后选择\"保存 **\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish-setting.png\" alt-text=\"选择自包含部署模式。\" border=\"false\":::\n\n1. 选择“**发布**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-publish.png\" alt-text=\"将应用发布到应用服务\" border=\"false\":::\n\n      Visual Studio 2019 将应用部署到 Azure 应用服务，并且 Web 应用在浏览器中加载。  \n\n1. 添加到 `/tab` URL 的末尾以查看你的页面，如图所示。 除非添加到 URL，否则选项卡页 `/tab` 不会显示。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-tab-app.png\" alt-text=\"Blazor 选项卡应用程序\" border=\"false\":::\n\n    网站 **宿主** 窗格中的\"发布 **Visual Studio** 显示网站 URL 和其他详细信息。 \n  \n1. 选择网站 URL 旁边的\"复制\"图标，并将其保存在文本文件中。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-site-url.png\" alt-text=\"Blazor 应用程序网站 URL\" border=\"false\":::\n"
- title: 在应用中预览和测试Teams
  durationInMinutes: 1
  content: "\n可以使用开发人员门户将应用配置为在开发人员环境中预览和Teams应用。\n\n## <a name=\"create-an-environment-for-your-app\"></a>为应用创建环境\n\n适用于开发人员的开发人员Teams管理使用 Environment 加载应用的选项卡 **位置**。  \n\n### <a name=\"to-create-an-environment\"></a>创建环境\n\n1. 打开开发人员门户进行Teams。 \n1. 使用管理帐户Microsoft 365登录。\n\n1. 在 **边** 栏上查找应用并选择它。\n\n1. 从出现的列表中选择你的应用。\n\n1. 选择 **\"环境\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-create-env.png\" alt-text=\"选择环境\" border=\"false\":::\n\n1. 选择 **\"创建你的第一个环境\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-add-env.png\" alt-text=\"选择&quot;添加新环境&quot;\" border=\"false\":::\n\n1. 输入环境的名称，然后选择\"添加 **\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-env-name.png\" alt-text=\"添加新的环境名称\" border=\"false\":::\n\n1. 选择 **\"创建第一个环境变量\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-create-env-var.png\" alt-text=\"添加新的环境变量\" border=\"false\":::\n\n1. 输入 `azure_app_url` 作为 **名称**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-add-variable.png\" alt-text=\"创建环境变量\" border=\"false\":::\n\n1. 输入 Azure 网站 URL，但不带 `https://` 值 。  使用你在\"发布\"对话框的\"托管\"窗格中指出的 URL。 \n\n1. 选择“**添加**”。\n  \n    添加环境。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-blazor-azure-url-added.png\" alt-text=\"创建环境变量\" border=\"false\":::\n\n## <a name=\"update-the-app-manifest\"></a>更新应用清单\n\n应用清单从 URL 加载 `localhost` 选项卡。 将应用清单配置为从你创建的环境中列出的 URL 加载选项卡。\n\n若要更新应用清单，请运行以下操作：\n- [更新网站 URL](#update-website-url)\n- [配置选项卡功能](#configure-the-tab-capability)\n- [为应用配置单一登录](#configure-single-sign-on-for-your-app)\n\n### <a name=\"update-website-url\"></a>更新网站 URL\n\n1. 从 **边栏选择** \"基本信息\"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments3.png\" alt-text=\"选择基本信息\":::\n\n    你会发现，这被提及为\"基本信息\"窗格中 `localhost:XXXXX` 给定的 URL **的一** 部分。\n\n1. 将 替换为 的所有匹配项，包括大括号，网站 (必须为有效的 `localhost:XXXXX` `{{azure_app_url}}` **HTTPS URL)** 应用程序 **URL。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments4.png\" alt-text=\"调整环境的基本信息\":::\n\n1. 完成 **替换** 后，选择\"保存\"。\n  \n    现在，你的应用已配置为从保存在环境变量中的 URL 运行。\n\n### <a name=\"configure-the-tab-capability\"></a>配置选项卡功能\n\n1. 从 **边栏选择** 应用功能。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments5.png\" alt-text=\"选择功能\":::\n\n1. 选择 **\"个人\"选项卡**。\n1. 选择\"个人\"选项卡旁边的三 **个点**，然后选择\"编辑 **\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments6.png\" alt-text=\"编辑个人选项卡设置\":::\n\n1. 将 URL 替换为\"内容 URL\"和\"网站 **URL\"** 字段中 **的环境** 变量。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devcenter-environments7.png\" alt-text=\"编辑个人选项卡 URL\":::\n\n1. 选择“**更新**”。\n\n1. 选择“**保存**”。\n  \n  你的选项卡配置为从 Azure URL 运行。\n\n### <a name=\"configure-single-sign-on-for-your-app\"></a>为应用配置单一登录\n\n1. 从 **边栏选择** \"单一登录\"。\n\n1. 将 `localhost` 应用程序 **ID URI 中的** 替换为 `{{azure_app_url}}` 。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/blazor-sso.png\" alt-text=\"编辑单一登录应用程序 ID URI\":::\n\n1. 选择“**保存**”。\n\n1. 从边栏中， **选择域**。\n\n1. 选择“**添加域**”。\n\n1. 验证 `{{azure_app_url}}` 是否列为有效域。 如果不是，请将其添加为有效域。 然后，选择\"**添加\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-domain.png\" alt-text=\"添加域\":::\n\n  现在，你已更新清单文件。 可以使用页面顶部的 **\"Teams** 预览\"选项在应用中启动Teams。"
