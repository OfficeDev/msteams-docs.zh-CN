### YamlMime:Tutorial
title: 会议内容气泡
metadata:
  title: 会议内容气泡
  description: 在本教程中，你将了解如何在 Teams 中发送对会议内容气泡的回复。
  audience: Developer
  level: Beginner
  ms.date: 12/03/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 阅读更多内容以启用和配置会议应用
  ms.custom: mvc
  ms.localizationpriority: high
items:
  - durationInMinutes: 1
    content: |
      Microsoft Teams帮助你在会议与内容气泡Teams交互。

      > [!NOTE]
      > 会议内容气泡仅适用于Azure AD用户，不适用于匿名用户。

      **会议内容气泡的关键功能**

      * 你将看到自适应卡片中列出的议程项。
      * 可以选择给定议程中的任意选项。
      * 你可以提交有关聊天中发送的内容气泡或自适应卡片的反馈。

      此分步指南可帮助你在与与会者进行会议期间向内容气泡Teams发送反馈。 你将看到以下输出：

         ![会议内容气泡简介](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
  - title: 必备条件
    durationInMinutes: 1
    content: |
      确保安装以下工具并设置开发环境：  

      * Microsoft Teams帐户登录
      * [.NET Core SDK](https://dotnet.microsoft.com/download) 版本 3.1
      * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
      * [ngrok](https://ngrok.com/download) 最新版本 (仅用于开发人员) 或任何等效隧道解决方案

        > [!NOTE]
        > 下载 ngrok 后，注册并安装 [authtoken](https://ngrok.com/download)。

      确保您已掌握[有关C#。](https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments)
  - title: 设置本地环境
    durationInMinutes: 1
    content: |
      将`Microsoft-Teams-Samples`存储库克隆到本地GitHub：  

       1. 打开[Microsoft Teams示例"](https://github.com/OfficeDev/Microsoft-Teams-Samples)。
       1. 选择 **"代码"**。
       1. 从下拉菜单中，选择"使用桌面GitHub **打开"**。

          ![克隆存储库](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository1.png)

       1. 选择 **克隆**。 
  - title: 在门户创建和注册Azure AD程序
    durationInMinutes: 5
    content: |
      若要在 Azure Active Directory 创建和注册机器人，使用 ngrok 创建隧道并添加消息终结点，请执行以下步骤：

      * 创建 Azure Bot 资源以向 Azure Bot 服务注册自动程序。
      * 创建启用自动程序 SSO 身份验证的客户端密码。
      * 添加Microsoft Teams将机器人部署到 Teams 频道。
      * 使用 ngrok 创建到 Web 服务器的终结点的隧道。
      * 将消息终结点添加到您创建的 ngrok 隧道。

      **创建 Azure Bot 资源**

      1. 转到 Microsoft Azure [门户](https://portal.azure.com/)。
      1. 选择“**创建资源**”。
      1. 在搜索框中，输入 **Azure Bot**。
      1. 选择 **Enter**。
      1. 选择 **"Azure 自动程序"**。

           ![创建 Azure 自动程序卡](~/assets/images/bots/createazurebot.png)

      1. 选择“**创建**”。
      1. 在自动程序句柄中输入所需的 **自动程序句柄名称**。
      1. 从" **订阅** "下拉列表中，选择 **"msteams.nonprod.pub.msft.aplt"**。
      1. 从" **资源组** "下拉列表中，选择现有资源组。 还可以创建新的资源组，然后选择"新建 ("，>  输入资源名称 **>"确定**) "。

      1. 从"新建资源组位置 **"下拉列表中选择** 所需位置。

          ![创建资源 Azure 自动程序](~/assets/images/meeting-content-bubble/meeting-token-generator-review-plus-create.png)

      1. 在" **Microsoft 应用 ID"** 部分，默认情况下 **选择"创建新的 Microsoft 应用 ID** "。 

         可以选择"使用现有 **应用注册"并** 输入 **"现有应用 ID**"和"现有应用密码"，也可以选择"**创建新的 Microsoft 应用 ID"**。

         > [!NOTE]
         > 不能创建多个使用相同 **Microsoft 应用 ID 的机器人**。

      1. 然后“**审阅 + 创建**”。

          ![创建 Microsoft 应用 ID](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)

      1. 如果验证通过，请选择"创建 **"**。

          设置自动程序服务需要一些时间。

      1. 选择“**转到资源**”。 

          ![部署应用](~/assets/images/meeting-content-bubble/meeting-token-generator-botdeployment.png)

          已创建 Azure 自动程序。

          ![已创建 Azure 自动程序资源](~/assets/images/meeting-content-bubble/meeting-content-bubble-creating-resource-group.png)

      **创建客户端密码**

        如果已新建 Microsoft 应用 **ID，请执行以下步骤**：

      1. 在左侧面板中，选择" **配置"**。 

         > [!TIP]
         > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 供将来参考。

      1. 选择 **"自动程序类型"** 下的" **多租户"**。

         ![Microsoft 应用 ID](~/assets/images/meeting-content-bubble/bot-type.png)       

      1. 在 **"Microsoft 应用 ID"旁边，** 选择" **管理"**。

          ![Microsoft 应用 ID](~/assets/images/meeting-content-bubble/meeting-content-bubble-view-configuration.png)

      1. 在" **客户端密码"** 部分，选择 **"新建客户端密码"**。 

          ![新客户端密码](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)

         将显示 **"添加客户端密码"** 窗口。  

      1. 输入 **"说明"**。

      1. 选择“**添加**”。

          ![将客户端密码添加到应用](~/assets/images/meeting-token-generator/meeting-token-generator-clientsecret.png)

      1. 在" **值"** 列中，选择 **"复制到剪贴板"**。

           ![客户端密码的值](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-secret.png)
         
         > [!TIP]
         > 保存 **客户端密码** 值或应用密码，供将来参考。

      **添加Microsoft Teams频道**

      1. 选择“主页”。

      1. 从"最近使用的资源 **"中选择自动程序**。

      1. 选择 **左** 窗格中的"频道"。 

      1. 选择 **Microsoft Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/>.

      1. 选中复选框以接受 **服务条款**。

      1. 选择" **同意"**。

            ![服务条款](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)

      1. 选择“**保存**”。

            ![选择Teams](~/assets/images/meeting-token-generator/config-teams.png)   

      **为本地 Web 服务器创建隧道**

      使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：

       ```bash
       ngrok http -host-header=localhost 3978
       ```

      **添加消息终结点**

      1. 从 ngrok 中，将 HTTPS URL (https 复制到 io) 。

          ![ngrok HTTPS URL](~/assets/images/meeting-content-bubble/meeting-content-bubble-messaging-end-point.png)

          > [!NOTE]
          > ngrok 中的 HTTPS URL 是您的完全限定域名。
          > `WebAppDomain`是不包括的完全限定`https://`域名。

      1. In **设置** for the Azure bot that you created， select **Configuration**.

      1. 在 **消息终结点中**，使用 ngrok 和 URL 末尾的 HTTPS URL 添加 **/api/messages**。

          ![消息终结点](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-messaging-end-point.png)

      1. 选择“**应用**”。

          你已成功在 Azure Bot 服务中设置自动程序。
  - title: 更新Azure AD应用注册
    durationInMinutes: 1
    content: |
      **通过 Azure AD 门户注册应用**  

      1. 转到 Microsoft Azure [门户](https://portal.azure.com/)。

      1. 选择“Azure Active Directory”。

      1. 在左侧导航面板中，选择 **"应用注册"**。

      1. 选择自动程序。

      1. 在“**管理**”下，选择“**公开 API**”。

      1. 选择 **"设置"**。

      1. 以 **的形式设置应用程序 ID URI**`api://{AppID}`。

         ![设置链接](~/assets/images/meeting-content-bubble/meeting-content-bubble-set-api.png)

      1. 在 和 `WebAppDomain` 之间插入 `api://` 值 `/{AppID}`。</br>
          `api://****.ngrok.io/{AppID}`</br>
          
          ![App ID URI](~/assets/images/meeting-content-bubble/meeting-content-bubble-expose-api.png)

          > [!NOTE]
          > 如果您使用的是隧道服务（如 ngrok），请确保在 ngrok 子域发生更改时更新该值。
          > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，其中 `f631****.ngrok.io` 是新的 ngrok 子域名称。

      1. 选择“**添加作用域**”。 

          ![添加范围](~/assets/images/meeting-content-bubble/selectscope.png)

      1. 在出现的面板中，输入 作为`access_as_user`**范围名称**。

      1. 将 **Who可以同意？** 设置为 `Admins and users`。

      1. 若要使用作用域的适当 `access_as_user` 值配置管理员和用户同意提示，在字段中提供以下信息：</br>

           * 输入 `Teams can access the user’s profile` 作为 **管理员同意显示名称**。

           * 输入 `Allows Teams to call the app’s web APIs as the current user` 作为 **管理员同意说明**。

           * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。

           * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 作为 **用户同意说明**。

      1. 确保将“状态”设置为“已启用”。

      1. 选择要 **保存的"添加** 范围"。

          ![添加范围](~/assets/images/meeting-content-bubble/meeting-content-bubble-access-as-user.png)

         > [!NOTE]
         > 范围 **名称** 应匹配应用程序 **ID** URI，并 `/access_as_user` 追加到末尾。</br>
             `api://****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`

          ![范围](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-scope.png)

      1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 

      1. 选择 **添加客户端应用程序**。 

          ![添加客户端应用](~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png) 

      1. 输入 **客户端 ID**：`1fec8e78-bce4-4aaf-ab1b-5451cc387264`用于Teams桌面应用程序。 

          ![添加客户端应用程序 1](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png) 

         可以输入 **客户端 ID**：`5e3ce6c0-2b1f-4285-8d4b-75ee78787346`用于Teams Web 应用程序。

          ![添加客户端应用程序 2](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png) 

      1. 选择 **"授权范围"**。

           ![添加客户端应用程序](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-client-app.png)

         下图显示了客户端 ID：

           ![客户端应用程序](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-applications.png) 

      1. 在左侧面板中，选择 **"API 权限"**。 

         > [!NOTE]
         > 只有在应用程序应用程序注册到其他租户Azure AD用户才需要同意这些权限。

      1. 选择“**添加权限**”。

      1. 选择 **"Microsoft Graph"**。

      1. 选择“**委托的权限**”。

          默认情况下， **将选择 User.Read** 。

           ![用户](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)

      1. 添加以下权限：</br>
           * **email**
           * **offline_access**
           * **OpenId**
           * **profile**

      1. 选择 **添加权限**。

           ![其他权限](~/assets/images/meeting-token-generator/meeting-token-generator-otherpermissions.png)

      1. 从左侧面板中，选择 **"身份验证** "以设置重定向 URI。 

         > [!NOTE]
         > 如果未向应用授予 IT 管理员同意，用户必须在第一次使用应用时提供同意。
                 
           1. 选择 **添加平台**。
           1. 选择“Web”

              ![Web](~/assets/images/meeting-content-bubble/meeting-content-bubble-platform-web.png)

           1. 通过追加到完全限定的域名，输入 `auth-end` 应用的重定向 URI：</br> 
             `https://****.ngrok.io/auth-end`. </br>

           1. 通过 **选中以下复选框** 启用隐式授予和混合流：
               * **ID 令牌**
               * **访问令牌**

           1. 选择“**配置**”。

              ![Auth-end](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-web.png)
  - title: 设置应用设置
    durationInMinutes: 1
    content: |
      1. 导航到 **克隆存储库中的 appsettings.json** 。

          ![应用设置位置](~/assets/images/meeting-content-bubble/navigate-to-meeting-content-bubble-repo.png)

      1. 在 Visual Studio **2019** 中打开 **appsettings.json** 并更新以下信息：  

           * 设置为 `"MicrosoftAppId"` 自动程序 **Microsoft 应用 ID**。
           * 设置为 `"MicrosoftAppPassword"` 自动程序客户端密码 ID 值。
           * 设置为 `"BaseURL"` 。`webAppDomain`

          ![应用设置](~/assets/images/meeting-content-bubble/appsettings-json.png)
  - title: 设置清单文件
    durationInMinutes: 1
    content: |
      1. 导航到 **克隆存储库中的 manifest.json** 。

      1. Open **manifest.json** in **Visual Studio 2019** and make the following changes：

           * 设置为`id``[MicrosoftAppId]`
           * 设置为`botId``[MicrosoftAppId]`
           * 设置为`validDomains``[WebAppDomainName]`

            > [!NOTE]
            > `WebAppDomain` 是您的 ngrok 域。

            ![清单图像 1](~/assets/images/meeting-content-bubble/manifest-set.png)
  - title: 生成并运行服务
    durationInMinutes: 1
    content: |
      **使用 Visual Studio 2019 构建和运行服务**

         1. 启动 **Visual Studio 2019**。
         1. 导航到 **"FileOpen** >  >  **Project/Solution"**。

            ![打开文件](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)

         1. 打开 `ContentBubbleBot.sln` 文件。

            ![打开文件](~/assets/images/meeting-content-bubble/proj-sln.png)

         1. 按 **fn+F5** 运行项目。

            网页随即打开，显示消息 **"自动程序已准备就绪！"**。

            ![应用就绪](~/assets/images/meeting-content-bubble/your-bot-is-ready.png) 
  - title: 将会议内容气泡应用添加到Teams
    durationInMinutes: 1
    content: |
      **创建会议Teams添加会议内容气泡**

      1. 在克隆的存储库中，导航到 **csharp > Resources > Manifest**。

      1. 创建.zip清单文件夹中存在以下 **文件的文件：** 
         * manifest.json
         * icon-outline.png
         * icon-color.png

         ![Zip 文件](~/assets/images/meeting-content-bubble/create-manifest-zip.png) 

      1. 创建一个与几个演示者和与会者的会议。

      1. 创建会议后，选择"**+****添加应用"**。

         ![添加应用](~/assets/images/meeting-content-bubble/add-an-app.png) 

      1. 在打开的弹出窗口中，选择" **管理应用"**。

         ![管理应用](~/assets/images/meeting-content-bubble/manage-apps.png)

      1. 选择 **Upload自定义应用"**。 

         ![Upload自定义应用](~/assets/images/meeting-content-bubble/upload-custom-app.png)

      1. 选择 **"** 打开"以.zip清单 **文件夹中创建的文件** 。

         ![Upload zip 应用](~/assets/images/meeting-content-bubble/zip.png)

      1. 选择“**添加**”。

         ![添加应用](~/assets/images/meeting-content-bubble/content-bubble-demo.png)

      1. " **管理应用程序** "部分显示应用程序列表。

         ![管理应用](~/assets/images/meeting-content-bubble/Manage.png)

      1. 转到会议聊天。

      1. **内容气泡演示** 应用发送对会议聊天的自动答复。

         ![内容气泡演示回复](~/assets/images/meeting-content-bubble/content-bubble-demo-first-reply.png)

      1. 向 **机器人发送 Hello** 消息。

         ![提及机器人](~/assets/images/meeting-content-bubble/content-bubble-demo-second-reply.png)

      1. 自动程序会向用户发送自适应卡片中列出的议程项。

      1. 选择任意选项，然后选择 **"推送议程** "以发送答复。

         ![机器人将自适应卡片发送给你](~/assets/images/meeting-content-bubble/push-agenda.png)

      1. 机器人发送 **反馈自适应** 卡片。

      1. 请选择 **“是”** 或 **“否”**。

      1. 选择“**提交**”。

         ![机器人向您发送反馈卡片](~/assets/images/meeting-content-bubble/content-bubble-feedback.png)

          机器人会向您发送反馈消息。
        
  - title: 完成挑战
    durationInMinutes: 1
    content: |
      你提供类似这样的内容了吗？

      ![内容气泡演示桌面和移动](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
  - content: |
      你已完成教程以开始使用会议内容气泡应用。