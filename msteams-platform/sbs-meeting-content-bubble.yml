### YamlMime:Tutorial
title: 会议内容气泡
metadata:
  title: 会议内容气泡
  description: 本教程介绍如何在Teams中发送对会议内容气泡的答复。
  audience: Developer
  level: Beginner
  ms.date: 12/03/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 详细了解如何为会议启用和配置应用
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: faed93629b17d7fba656854d27bf323c08b7986e
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64737062"
items:
- durationInMinutes: 1
  content: >
    Microsoft Teams可帮助你在Teams会议中与内容气泡机器人交互。


    > [!NOTE]

    > 会议内容气泡仅适用于Azure AD用户，而不适用于匿名用户。


    **会议内容气泡的主要功能**


    * 你将看到自适应卡片中列出的议程项。

    * 可以选择给定议程中的任何选项。

    * 可以提交有关聊天中发送的内容气泡或自适应卡的反馈。


    本分步指南可帮助你在与与会者Teams会议期间向内容气泡机器人发送反馈。 你将看到以下输出：

       ![会议内容气泡简介](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境：  \n\n* 使用有效帐户Microsoft Teams\n* [.NET Core SDK](https://dotnet.microsoft.com/download) 版本 3.1\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) 最新版本 (仅用于开发人员箱测试) 或任何等效的隧道解决方案\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [身份验证](https://ngrok.com/download)。\n\n  确保你对 [C#](/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments) 有工作知识。\n"
- title: 设置本地环境
  durationInMinutes: 1
  content: "将存储库克隆`Microsoft-Teams-Samples`到本地GitHub：  \n\n 1. 打开[Microsoft Teams示例](https://github.com/OfficeDev/Microsoft-Teams-Samples)。\n 1. 选择 **“代码**”。\n 1. 在下拉菜单中，选择 **“打开并GitHub桌面**”。\n\n    ![克隆存储库](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. 选择 **“克隆**”。 \n"
- title: 在Azure AD门户中创建和注册机器人
  durationInMinutes: 5
  content: "若要在Azure Active Directory中创建和注册机器人，请使用 ngrok 创建隧道并添加消息传送终结点，请执行以下步骤：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n* 创建支持机器人 SSO 身份验证的客户端机密。\n* 添加Microsoft Teams通道以将机器人部署到Teams通道。\n* 使用 ngrok 创建到 Web 服务器终结点的隧道。\n* 将消息传送终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到[Microsoft Azure门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择 **Enter**。\n1. 选择 **Azure 机器人**。\n\n     ![创建 Azure 机器人卡](~/assets/images/bots/createazurebot.png)\n\n1. 选择“**创建**”。\n1. 在 **机器人句柄** 中输入所需的机器人句柄名称。\n1. 从下拉列表中选择 **订阅** 。\n1. 从 **“资源组** ”下拉列表中，选择现有的资源组。 还可以创建新的资源组 (选择 **“新建** >输入资源名称>选择 **”确定** “) 。\n\n1. 从 **“新建资源组”位置** 下拉列表中选择所需的位置。\n\n    ![创建资源 Azure 机器人](~/assets/images/meeting-content-bubble/meeting-token-generator-review-plus-create.png)\n\n1. 在 **“Microsoft 应用 ID”** 部分中，默认选择 **“新建 Microsoft 应用 ID** ”。 \n\n   可以选择 **“使用现有应用注册** ”并输入 **现有应用 ID** 和 **现有应用密码**，也可以选择 **“创建新的 Microsoft 应用 ID**”。\n\n   > [!NOTE]\n   > 不能创建具有相同 **Microsoft 应用 ID** 的多个机器人。\n\n1. 然后“**审阅 + 创建**”。\n\n    ![创建 Microsoft 应用 ID](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)\n\n1. 如果验证通过，请选择 **“创建**”。\n\n    预配机器人服务需要一些时间。\n\n1. 选择“**转到资源**”。 \n\n    ![部署应用](~/assets/images/meeting-content-bubble/meeting-token-generator-botdeployment.png)\n\n    Azure 机器人已创建。\n\n    ![创建的 Azure 机器人资源](~/assets/images/meeting-content-bubble/meeting-content-bubble-creating-resource-group.png)\n\n**创建客户端机密**\n\n  如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左侧面板中，选择 **“配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n1. 在 **机器人类型** 下选择 **多租户**。\n\n   ![Microsoft 应用 ID](~/assets/images/meeting-content-bubble/bot-type.png)       \n\n1. 在 **Microsoft 应用 ID** 旁边，选择 **“管理**”。\n\n    ![Microsoft 应用 ID](~/assets/images/meeting-content-bubble/meeting-content-bubble-view-configuration.png)\n\n1. 在 **“客户端机密** ”部分中，选择 **“新建客户端机密**”。 \n\n    ![新客户端机密](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   将显示 **“添加客户端机密** ”窗口。  \n\n1. 输入 **说明**。\n\n1. 选择“**添加**”。\n\n    ![将客户端机密添加到应用](~/assets/images/meeting-token-generator/meeting-token-generator-clientsecret.png)\n\n1. 在 **“值** ”列中，选择 **“复制到剪贴板**”。\n\n     ![客户端机密的值](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-secret.png)\n   \n   > [!TIP]\n   > 保存 **客户端机密** 值或应用密码以供将来参考。\n\n**添加Microsoft Teams通道**\n\n1. 选择“主页”。\n\n1. 从 **最近的资源** 中选择机器人。\n\n1. 在左窗格中选择 **“通道** ”。 \n\n1. 选择 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. 选中该复选框以接受 **服务条款**。\n\n1. 选择 **“同意**”。\n\n      ![服务条款](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. 选择“保存”。\n\n      ![选择Teams](~/assets/images/meeting-token-generator/config-teams.png)   \n\n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**添加消息传送终结点**\n\n1. 从 ngrok 将 HTTPS URL (https 复制到 io) 。\n\n    ![ngrok HTTPS URL](~/assets/images/meeting-content-bubble/meeting-content-bubble-messaging-end-point.png)\n\n    > [!NOTE]\n    > ngrok 中的 HTTPS URL 是完全限定的域名。\n    > 这是 `WebAppDomain` 一个完全限定的域名，不包括 `https://` 在其中。\n\n1. 在 **创建的** Azure 机器人的设置中，选择 **“配置**”。\n\n1. 在 **消息传送终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n    ![消息传送终结点](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-messaging-end-point.png)\n\n1. 选择“**应用**”。\n\n    已在 Azure 机器人服务中成功设置机器人。\n"
- title: 更新Azure AD应用注册
  durationInMinutes: 1
  content: "**通过 Azure AD 门户注册应用**  \n\n1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“Azure Active Directory”。\n\n1. 在左侧导航面板中，选择 **“应用注册**”。\n\n1. 选择机器人。\n\n1. 在“**管理**”下，选择“**公开 API**”。\n\n1. 选择 **“设置**”。\n\n1. 设置应用程序 **ID URI** 的形式 `api://{AppID}`。\n\n   ![设置链接](~/assets/images/meeting-content-bubble/meeting-content-bubble-set-api.png)\n\n1. 在两者`WebAppDomain`之间`api://``/{AppID}`插入值。</br>\n    `api://****.ngrok.io/{AppID}`</br>\n    \n    ![App ID URI](~/assets/images/meeting-content-bubble/meeting-content-bubble-expose-api.png)\n\n    > [!NOTE]\n    > 如果使用的是隧道服务（如 ngrok），请确保在 ngrok 子域发生更改时更新该值。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，新的 ngrok 子域名称在哪里 `f631****.ngrok.io` 。\n\n1. 选择“**添加作用域**”。 \n\n    ![添加范围](~/assets/selectscope.png)\n\n1. 在显示的面板中，输入 `access_as_user` 为 **范围名称**。\n\n1. 设置 **Who是否可以同意？** `Admins and users`\n\n1. 若要配置具有相应作用域值 `access_as_user` 的管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入 `Teams can access the user’s profile` 为 **管理员同意显示名称**。\n\n     * 输入 `Allows Teams to call the app’s web APIs as the current user` 为 **管理员同意说明**。\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 为 **用户同意显示名称**。\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 为 **用户同意说明**。\n\n1. 确保将“状态”设置为“已启用”。\n\n1. 选择 **“添加范围** ”以保存。\n\n    ![添加范围](~/assets/images/meeting-content-bubble/meeting-content-bubble-access-as-user.png)\n\n   > [!NOTE]\n   > **范围名称** 应与应用程序 **ID** URI 匹配，`/access_as_user`并追加在末尾。</br>\n       `api://****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![范围](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-scope.png)\n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 \n\n1. 选择 **添加客户端应用程序**。 \n\n    ![添加客户端应用](~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png) \n\n1. 输入 **客户端 ID**：`1fec8e78-bce4-4aaf-ab1b-5451cc387264`适用于Teams移动或桌面应用程序。 \n\n    ![添加客户端应用程序 1](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png) \n\n   可以输入 **客户端 ID**：`5e3ce6c0-2b1f-4285-8d4b-75ee78787346`用于Teams Web 应用程序。\n\n    ![添加客户端应用程序 2](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png) \n\n1. 选择 **“已授权”范围**。\n\n     ![添加客户端应用程序](~/assets/images/meeting-content-bubble/meeting-content-bubble-add-client-app.png)\n\n   下图显示客户端 ID：\n\n     ![客户端应用程序](~/assets/images/meeting-content-bubble/meeting-content-bubble-client-applications.png) \n\n1. 在左侧面板中，选择 **API 权限**。 \n\n   > [!NOTE]\n   > 仅当Azure AD应用在其他租户中注册时，用户才需要同意这些权限。\n\n1. 选择“**添加权限**”。\n\n1. 选择 **Microsoft Graph**。\n\n1. 选择“**委托的权限**”。\n\n    默认情况下， **已选择 User.Read** 。\n\n     ![用户](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)\n\n1. 添加以下权限：</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **个人资料**\n\n1. 选择 **添加权限**。\n\n     ![其他权限](~/assets/images/meeting-token-generator/meeting-token-generator-otherpermissions.png)\n\n1. 在左侧面板中，选择 **“身份验证** ”以设置重定向 URI。 \n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员许可，则用户必须在第一次使用应用时提供同意。\n           \n     1. 选择 **添加平台**。\n     1. 选择“Web”\n\n        ![Web](~/assets/images/meeting-content-bubble/meeting-content-bubble-platform-web.png)\n\n     1. 通过追加到完全限定的域名，输入应用的 `auth-end` 重定向 URI：</br> \n       `https://****.ngrok.io/auth-end`. </br>\n\n     1. 通过选择以下复选框启用 **隐式授予和混合流** ：\n         * **ID 令牌**\n         * **访问令牌**\n\n     1. 选择“**配置**”。\n\n        ![Auth-end](~/assets/images/meeting-content-bubble/meeting-content-bubble-config-web.png)\n"
- title: 设置应用设置
  durationInMinutes: 1
  content: "1. 导航到克隆存储库中的 **appsettings.json** 。\n\n    ![应用设置位置](~/assets/images/meeting-content-bubble/navigate-to-meeting-content-bubble-repo.png)\n\n1. 在 **2019 Visual Studio** 打开 **appsettings.json** 并更新以下信息：  \n\n     * 设置 `\"MicrosoftAppId\"` 为机器人的 **Microsoft 应用 ID**。\n     * 设置 `\"MicrosoftAppPassword\"` 为机器人的客户端机密 ID 值。\n     * 设置 `\"BaseURL\"` 为你的 `webAppDomain`.\n\n    ![应用设置](~/assets/images/meeting-content-bubble/appsettings-json.png)\n"
- title: 设置清单文件
  durationInMinutes: 1
  content: >
    1. 在克隆的存储库中导航到 `manifest.json` 。


    1. 在 `manifest.json` **2019 Visual Studio打开** 并进行以下更改：

         * 设置为`id``[MicrosoftAppId]`
         * 设置为`botId``[MicrosoftAppId]`
         * 设置为`validDomains``[WebAppDomainName]`

          > [!NOTE]
          > `WebAppDomain` 是 ngrok 域。

          ![清单映像 1](~/assets/images/meeting-content-bubble/manifest-set.png)
- title: 生成并运行服务
  durationInMinutes: 1
  content: "**使用 Visual Studio 2019 生成和运行服务**\n\n   1. **2019 Visual Studio启动**。\n   1. 导航到 **FileOpen** >  >  **Project/解决方案**。\n\n      ![打开文件](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)\n\n   1. 打开 `ContentBubbleBot.sln` 文件。\n\n      ![打开文件](~/assets/images/meeting-content-bubble/proj-sln.png)\n\n   1. 按 **fn+F5** 运行项目。\n\n      随即会打开一个网页，其中包含一条消息：**机器人已就绪！**\n\n      ![应用准备就绪](~/assets/images/meeting-content-bubble/your-bot-is-ready.png) \n"
- title: 将会议内容气泡应用添加到Teams
  durationInMinutes: 1
  content: "**创建Teams会议并添加会议内容气泡**\n\n1. 在克隆的存储库中，导航到 **csharp >资源>清单**。\n\n1. 使用 **清单** 文件夹中存在的以下文件创建.zip： \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip 文件](~/assets/images/meeting-content-bubble/create-manifest-zip.png) \n\n1. 创建一个与几个演示者和与会者的会议。\n\n1. 创建会议后，选择 **+****“添加应用**”。\n\n   ![添加应用](~/assets/images/meeting-content-bubble/add-an-app.png) \n\n1. 在打开的弹出窗口中，选择 **“管理应用**”。\n\n   ![管理应用](~/assets/images/meeting-content-bubble/manage-apps.png)\n\n1. 选择“**上传自定义应用**”。 \n\n   ![Upload自定义应用](~/assets/images/meeting-content-bubble/upload-custom-app.png)\n\n1. 选择 **“打开** ”以上传在 **清单** 文件夹中创建的.zip文件。\n\n   ![Upload zip 应用](~/assets/images/meeting-content-bubble/zip.png)\n\n1. 选择“**添加**”。\n\n   ![添加应用](~/assets/images/meeting-content-bubble/content-bubble-demo.png)\n\n1. “ **管理应用** ”部分显示应用程序列表。\n\n   ![管理应用](~/assets/images/meeting-content-bubble/Manage.png)\n\n1. 转到会议聊天。\n\n1. **内容气泡演示** 应用发送对会议聊天的自动答复。\n\n   ![内容气泡演示回复](~/assets/images/meeting-content-bubble/content-bubble-demo-first-reply.png)\n\n1. 向机器人发送 **hello** 消息。\n\n   ![提及机器人](~/assets/images/meeting-content-bubble/content-bubble-demo-second-reply.png)\n\n1. 机器人向你发送自适应卡片中列出的议程项。\n\n1. 选择任何选项，然后选择 **“推送议程** ”以发送答复。\n\n   ![机器人向你发送自适应卡片](~/assets/images/meeting-content-bubble/push-agenda.png)\n\n1. 机器人发送 **反馈** 自适应卡片。\n\n1. 请选择 **“是”** 或 **“否”**。\n\n1. 选择“**提交**”。\n\n   ![机器人向你发送反馈卡片](~/assets/images/meeting-content-bubble/content-bubble-feedback.png)\n\n    机器人会向你发送反馈消息。\n  \n"
- title: 完成质询
  durationInMinutes: 1
  content: >
    你想出了这样的事吗？


    ![内容气泡演示桌面版和移动版](~/assets/images/meeting-content-bubble/desktop-and-mobile-image-final.png)
- content: 你已完成本教程以开始使用会议内容气泡应用。
