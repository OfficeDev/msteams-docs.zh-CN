### YamlMime:Tutorial
title: 使用机器人在 Teams 中展开链接
metadata:
  title: 使用机器人在 Teams 中展开链接
  description: 了解如何设置 Teams 链接展开机器人。 本指南可帮助你注册应用并接收调用活动。
  audience: Developer
  level: Beginner
  ms.date: 01/20/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/link-unfurling.md
  nextTutorialTitle: 详细了解链接展开
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: e3821b87d03d76c6932aed9184e11b70ed88078c
  ms.sourcegitcommit: 10debe0f01574a21aab54bfac692a4c8373263a8
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/31/2022
  ms.locfileid: "68789959"
items:
- durationInMinutes: 1
  content: "Microsoft Bot Framework通过添加一组预定义卡片来扩展卡片规范，机器人可以将这些卡片用作机器人消息传递的一部分。 在 Teams 中使用机器人展开链接可帮助你注册应用。 当包含域的 URL 粘贴到撰写消息区域时，有助于接收调用活动。 调用活动包含完整的 URL，可以使用卡片进行响应。 用户可以使用机器人展开链接，并附带其他信息，以获得增强的体验。\n\n > [!NOTE]\n > 目前，移动客户端不支持链接展开。\n\n **链接展开的主要功能** \n\n * 允许用户粘贴 URL 并使用卡片进行响应。\n * 允许用户注册应用并接收调用活动。\n\n本分步指南可帮助你创建机器人以在 Microsoft Teams 中为 `https://www.BotFramework.com`执行链接展开。 你将看到以下输出：\n\n:::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/final-image.png\" alt-text=\"链接展开\":::\n"
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境： \n\n | &nbsp; | 安装 | 用于使用... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams 可在一个位置通过聊天、会议、通话等应用与你合作的每个人进行协作。|\n | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负载之一：<br> • **ASP.NET 和 Web 开发** <br> • **.NET Core 跨平台开发** | 可以在 Visual Studio 2022 中安装企业版并安装工作负载。 |\n | &nbsp; | [.NET Core SDK 版本 3.1](https://dotnet.microsoft.com/en-us/download) | 用于本地调试和Azure Functions应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，则可以安装可移植版本。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | teams 应用功能 (对话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，这不是必需的。 此包使用 npm `devDependencies`) 安装在项目目录 (中。 |\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [authtoken](https://ngrok.com/download)。\n"
- title: 设置本地环境
  durationInMinutes: 1
  content: "\n1. 打开 [BotBuilder 示例](https://github.com/microsoft/BotBuilder-Samples)。\n1. 选择“ **代码**”。\n1. 从下拉菜单中选择“ **使用 GitHub Desktop 打开** ”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clonerepository-new_1.png\" alt-text=\"克隆存储库\":::\n\n1. 选择“ **克隆**”。 \n"
- title: 在 Azure 门户 中创建并注册机器人
  durationInMinutes: 5
  content: "以下步骤可帮助你在 Azure 门户 中创建和注册机器人：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n* 创建客户端密码以启用机器人的 SSO 身份验证。\n* 添加 Teams 频道以将机器人部署到 Teams 频道。\n* 使用 ngrok 创建到 Web 服务器终结点的隧道。\n* 将消息传递终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到 [Microsoft Azure 门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择“**Enter**”。\n1. 选择“ **Azure 机器人**”。\n\n   :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Azure 机器人。\":::\n\n1. 选择“**创建**”。\n1. 在机器人句柄中输入所需的 **机器人句柄** 名称。\n1. 从相应的下拉列表中选择 **“订阅** ”和“ **资源组** ”。\n1. 选择所需的 **数据驻留 (预览)**。\n\n   :::image type=\"content\" source=\"./assets/images/conversation-bot/create-azure-bot.png\" alt-text=\"显示如何创建 Azure 机器人的屏幕截图。\":::\n   \n   还可以创建新的资源组， (选择“ **新建** ”>输入资源名称>选择“ **确定**) ”。\n\n1. 如果已创建新资源组，请从“ **新建资源组位置** ”下拉列表中选择所需位置。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"显示新资源组位置的屏幕截图。\":::\n\n1. 在 **“Microsoft 应用 ID** ”部分中，默认选择“ **创建新的 Microsoft 应用 ID** ”。 \n\n   还可以选择“ **使用现有应用注册** ”，然后输入 **“应用 ID**”、“ **应用租户 ID”** 和 **“MSI 资源 ID**”。\n\n   > [!NOTE]\n   > 不能使用相同的 **Microsoft 应用 ID** 创建多个机器人。\n\n1. 选择 **“应用类型** ”作为 **“多租户**”。\n\n1. 然后“**审阅 + 创建**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/register-bot-2_1.png\" alt-text=\"显示创建 Microsoft 应用 ID 的屏幕截图。\":::\n\n1. 通过验证后，选择“ **创建**”。\n\n   预配机器人服务需要一些时间。 \n\n1. 选择“**转到资源**”。 \n\n    :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/botdeployment_1.png\" alt-text=\"显示转到资源的导航的屏幕截图。\":::\n\n   Azure 机器人已创建，可以在 Azure 机器人中看到 **资源组** 和 **订阅 ID** 。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/bot-page_1.png\" alt-text=\"创建的 Azure 机器人资源\":::\n    \n  **创建客户端密码**\n\n   如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左窗格中，选择“ **配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n1. 在 **“Microsoft 应用 ID**”旁边，选择“ **管理**”。\n\n   :::image type=\"content\" source=\"~/assets/images/manage-bot-label_1.png\" alt-text=\"显示选择“管理”选项的屏幕截图。\":::\n\n1. 在 **“客户端机密** ”部分中，选择“ **新建客户端密码**”。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_1.png\" alt-text=\"显示新客户端密码选择的屏幕截图。\":::\n        \n   此时会显示 **“添加客户端机密** ”窗口。\n\n1. 输入客户端密码 **的“说明** ”。\n\n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clientsecret_1.png\" alt-text=\"显示“添加”选项的屏幕截图。\":::\n   \n1. 在 **“值** ”列中，选择“复制到剪贴板”图标以复制值详细信息。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/clientvalue.png\" alt-text=\"显示复制到剪贴板的客户端密码值的屏幕截图。\":::\n         \n   > [!TIP]\n   > 保存客户端密码 **值** 或应用密码以供将来参考。\n\n **添加 Teams 频道**\n\n1. 选择“主页”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/gotohome_1.png\" alt-text=\"主页\":::\n   \n1. 从 **“最近使用的资源**”中选择机器人。\n\n1. 在左窗格中选择“ **频道** ”。\n\n1. 选择 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. 选中复选框以接受 **服务条款**。\n\n1. 选择“ **同意**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/terms.png\" alt-text=\"服务条款\":::\n  \n1. 选择“**应用**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/apply.png\" alt-text=\"显示 Teams 选择的屏幕截图。\":::\n  \n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n  \n   ```bash\n   ngrok http --host-header=localhost 3978\n   ```\n   > [!TIP]\n   > 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中显示的步骤注册并验证 ngrok。 然后运行 命令 `ngrok http --host-header=localhost 3978` 。\n\n**添加消息传送终结点**\n\n1. 从 ngrok 中，将 HTTPS URL (https 复制到 io) 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"显示 ngrok https url 的屏幕截图。\":::\n\n    > [!NOTE]\n    > ngrok 中的 HTTPS URL 是完全限定的域名。\n    > `WebAppDomain`是不包含`https://`在中的完全限定域名。\n\n1. 在 **设置** 中，选择“**配置**”。\n\n1. 在 **消息传递终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/messaging-endpoint_2.png\" alt-text=\"显示消息传送终结点的屏幕截图。\":::\n     \n1. 选择“**应用**”。\n\n    已成功在 Azure 机器人服务 中设置机器人。\n"
- title: 更新 Azure AD 应用注册
  durationInMinutes: 1
  content: "1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“Azure Active Directory”。\n\n1. 在左窗格中，选择“**应用注册**”。\n\n1. 选择机器人。\n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appregister_1.png\" alt-text=\"应用注册\":::\n   \n1. 选择 **“公开 API**”。\n\n1. 选择“ **设置**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/exposeanapi_1.png\" alt-text=\"公开 API\":::\n  \n1. 以 的形式`api://your ngrok/botid-{your AppID}`设置 **应用程序 ID URI**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/setlink_1.png\" alt-text=\"设置链接\":::\n           \n   下图显示了域名：\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appIDuri_1.png\" alt-text=\"应用 ID\":::\n  \n    > [!NOTE]\n    > 如果使用 ngrok 等隧道服务，请确保在 ngrok 子域发生更改时更新值。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，其中 `f631****.ngrok.io` 是新的 ngrok 子域名称。\n\n1. 选择“**添加作用域**”。 \n   \n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"选择作用域\":::\n\n1. 在显示的面板中，输入 `access_as_user` 作为 **“范围名称**”。\n\n1. 将 **“谁可以同意？”** 设置为 `Admins and users`。\n\n1. 若要使用适当的范围值 `access_as_user` 配置管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入`Teams can access the user’s profile`作为 **管理员同意显示名称**。\n\n     * 输入`Allows Teams to call the app’s web APIs as the current user`作为 **管理员同意说明**。\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 作为 **用户同意说明**。\n\n1. 确保将“状态”设置为“已启用”。\n\n1. 选择 **“添加范围** ”进行保存。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/addscope.png\" alt-text=\"显示如何添加作用域的屏幕截图。\"::: \n    \n    > [!NOTE]\n    > **作用域名称** 应与末尾追加的应用程序 **ID** URI `/access_as_user` 匹配。</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/scope_1.png\" alt-text=\"Scopes\"::: \n    \n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 \n\n1. 选择 **添加客户端应用程序**。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"显示选择客户端应用程序的屏幕截图。\":::\n   \n1. 对于 Teams 桌面应用程序，输入 **客户端 ID**： `1fec8e78-bce4-4aaf-ab1b-5451cc387264` 。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"显示添加客户端应用程序的屏幕截图\":::\n   \n   对于 Teams Web 应用程序，输入 **客户端 ID**： `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"添加客户端 ID 的屏幕截图。\":::\n  \n1. 选择 **“授权的范围**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/authorizedscope.png\" alt-text=\"显示添加客户端应用程序的屏幕截图。\":::\n  \n   下图显示了 **客户端 ID**：\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"显示客户端应用的屏幕截图。\"::: \n     \n1. 在左窗格中，选择“ **API 权限**”。 \n\n   > [!NOTE]\n   > 仅当 Azure AD 应用在不同租户中注册时，用户才需要同意 API 权限。\n\n1. 选择“**添加权限**”。\n\n1. 选择 **“Microsoft Graph** > **委托的权限**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/addpermission_1.png\" alt-text=\"显示添加权限的屏幕截图。\":::\n  \n1. 选择以下权限：</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **个人资料**\n     * **User.Read**\n\n1. 选择 **添加权限**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"显示添加其他权限的屏幕截图。\":::\n     \n1. 在左窗格中，选择“ **身份验证** ”以设置重定向 URI。 \n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员同意，用户必须在首次使用应用时提供同意。\n           \n     1. 选择 **添加平台**。\n     1. 选择“Web”\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/webauth_1.png\" alt-text=\"Web\":::\n     \n     1. 通过将 追加 `auth-end` 到完全限定的域名，输入应用的重定向 URI：</br> \n       `https://your ngrok/auth-end`. </br>\n\n     1. 通过选中以下复选框启用 **隐式授予和混合流** ：\n         * **ID 令牌**\n         * **访问令牌**\n\n     1. 选择“**配置**”。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/authend_1.png\" alt-text=\"Auth-end\":::\n        \n"
- title: 设置应用设置和清单文件
  durationInMinutes: 1
  content: "1. 转到克隆存储库中的 **appsettings.json** 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appsettingslocation_1.png\" alt-text=\"显示应用设置位置导航的屏幕截图。\":::\n  \n1. 在 Visual Studio 中打开 **appsettings.json** 。\n\n1. 更新以下信息：  \n\n     * 设置为 `\"MicrosoftAppType\"` **MultiTenant**。\n     * 设置为 `\"MicrosoftAppId\"` 机器人的 **Microsoft 应用 ID**。\n     * 设置为 `\"MicrosoftAppPassword\"` 机器人的客户端机密 ID 值。\n     * 将 MultiTenant 机器人设置为 `\"MicrosoftAppTenantId\"` 空白。\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appsettings_1.png\" alt-text=\"显示应用设置的屏幕截图。\":::\n    \n1. 转到克隆存储库中的 **manifest.json** 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manifestlocation_1.png\" alt-text=\"显示清单文件位置的屏幕截图。\":::\n    \n1. 在 Visual Studio 中打开 **manifest.json** 。\n\n1. 将以下代码片段添加到清单文件（如果尚不存在）：\n\n   ```json\n   \"bots\": [\n    {\n      \"botId\": \"<<YOUR-MICROSOFT-APP-ID>>\",\n      \"scopes\": [\n        \"personal\",\n        \"team\",\n        \"groupchat\"\n      ],\n      \"supportsFiles\": false,\n      \"isNotificationOnly\": false\n    }      \n   ```\n\n1. 将 的所有匹配项 `<<YOUR-MICROSOFT-APP-ID>>` 替换为机器人的 **Microsoft 应用 ID**。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manifest_1.png\" alt-text=\"显示替换 Microsoft 应用 ID 的屏幕截图。\":::\n  \n"
- title: 生成并运行服务
  durationInMinutes: 1
  content: "**使用最新版本的 Visual Studio 或命令行生成和运行服务**\n\n# <a name=\"visual-studio\"></a>[Visual Studio](#tab/vs)\n\n   1. 启动最新版本的 Visual Studio。\n   1. 转到 **“文件** > **打开** > **项目/解决方案**”。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/VSopenfile_1.png\" alt-text=\"显示打开文件的导航的屏幕截图。\":::\n      \n   1. 从 **55.teams-link-unfurling** 文件夹中选择 **TeamsLinkUnfurling.csproj** 文件。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/csproj_1.png\" alt-text=\"显示选择文件夹的屏幕截图。\":::\n  \n   1. 从 **视图** 打开 **解决方案资源管理器**。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/solutionexplorer_1.png\" alt-text=\"显示解决方案资源管理器的屏幕截图。\":::\n      \n   1. 右键单击 **TeamsLinkUnfurling**。\n\n   1. 选择“ **设置为启动项目**”。\n      \n      :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/startup_1.png\" alt-text=\"显示启动项目的设置的屏幕截图。\"::: \n      \n   1. 按 **F5** 运行项目。\n\n   1. 如果出现以下对话框，请选择“**是**”：\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/certificate_1.png\" alt-text=\"显示信任证书的屏幕截图。\":::\n      \n      此时会打开一个网页，并显示消息 **“机器人已准备就绪！”**。\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/appisready.png\" alt-text=\"显示“机器人已准备就绪”的网页的屏幕截图。\":::\n              \n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在命令提示符窗口中转到 **BotBuilder-Samples >示例> csharp_dotnetcore > 55.teams-link-unfurling** ，然后输入以下命令：\n\n```bash\ndotnet run\n```\n:::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/dotnetruncmd.png\" alt-text=\"显示 bash 中的 dotnet 运行的屏幕截图。\":::\n\n  ---\n"
- title: 上传链接展开应用
  durationInMinutes: 1
  content: "1. 在克隆的存储库中，转到 **csharp_dotnetcore > 55.teams-link-unfurling > TeamsAppManifest**。\n\n1. 使用 **清单** 文件夹中存在的以下文件创建.zip： \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/zipfile_1.png\" alt-text=\"显示文件压缩的屏幕截图。\":::\n   \n1. 转到 **Microsoft Teams**。\n\n1. 选择“**应用**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/AppStore_1.png\" alt-text=\"Zip 文件\":::\n   \n1. 选择“**管理应用**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/manageapps_1.png\" alt-text=\"管理应用\":::\n      \n1. 选择“**上传自定义应用**”。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/uploadapp_1.png\" alt-text=\"上传自定义应用\":::\n  \n1. 选择“ **打开** ”以上传在 **TeamsAppManifest** 文件夹中创建的.zip文件。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/selectzip_1.png\" alt-text=\"显示 zip 文件的选择的屏幕截图。\":::\n  \n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/addapp.png\" alt-text=\"显示添加应用的屏幕截图。\":::\n   \n   应用将在聊天中打开。\n\n1. 在撰写消息区域中，输入 `https://www.BotFramework.com`。\n\n   链接展开，如下图所示：\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/result.png\" alt-text=\"显示链接展开结果的屏幕截图。\":::\n   \n1. 按 Enter。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/result-1.png\" alt-text=\"显示输出的屏幕截图。\":::\n"
- title: 完成挑战
  durationInMinutes: 1
  content: >
    你想出了这样的东西吗？


    :::image type="content" source="../msteams-platform/assets/images/Teams-link-unfurling/final-image.png" alt-text="显示最终输出的屏幕截图。":::
- content: 你已完成本教程以开始使用 Teams 链接展开应用！
