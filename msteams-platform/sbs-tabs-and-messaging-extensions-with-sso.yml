### YamlMime:Tutorial
title: AAD选项卡和消息传递扩展的 SSO
metadata:
  title: AAD选项卡和消息传递扩展的 SSO
  description: 本教程介绍如何为选项卡设置AAD SSO。
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: 详细了解选项卡的 SSO 身份验证。
  ms.custom: mvc
  ms.localizationpriority: high
items:
  - durationInMinutes: 1
    content: |
      SSO Azure Active Directory单一登录 (AAD SSO) 帮助验证用户Teams。 

      **选项卡和消息传递扩展的 SSO AAD指南的关键方面**

       * 首次登录后，AAD SSO 允许用户自动登录。
       * 允许用户登录到其他设备，而无需重新输入登录凭据。
       * 获取已登录用户的令牌。   

      此分步指南可帮助你创建支持 SSO 身份验证的选项卡AAD扩展。 你将看到以下输出：

        ![祝贺图像](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   
  - title: 必备条件
    durationInMinutes: 1
    content: |
      确保安装以下工具并设置开发环境：  

      * Microsoft Teams帐户， (来宾帐户) 
      * [.NET Core SDK](https://dotnet.microsoft.com/download) 版本 3.1
      * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
      * [ngrok](https://ngrok.com/download) 最新版本 (仅用于开发人员) 或任何等效隧道解决方案
      * [Microsoft 365开发者帐户](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant)或Teams具有安装应用的适当权限的帐户
  - title: 设置本地环境
    durationInMinutes: 1
    content: |
      将`Microsoft-Teams-Samples`存储库克隆到本地GitHub：  

       1. 打开[Microsoft Teams示例"](https://github.com/OfficeDev/Microsoft-Teams-Samples)。
       1. 选择 **"代码"**。
       1. 从下拉菜单中，选择"使用桌面 **GitHub打开"**。

          ![克隆存储库](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)

       1. 选择 **克隆**。 
  - title: 在门户创建和注册Azure AD程序
    durationInMinutes: 5
    content: |
      以下步骤将指导您：

      * 创建 Azure Bot 资源以向 Azure Bot 服务注册自动程序。
      * 创建启用自动程序 SSO 身份验证的客户端密码。
      * 添加Microsoft Teams将机器人部署到 Teams 频道。
      * 使用 ngrok 创建到 Web 服务器的终结点的隧道。
      * 将消息终结点添加到您创建的 ngrok 隧道。

      **创建 Azure Bot 资源**

      1. 转到 Microsoft Azure [门户](https://portal.azure.com/)。
      1. 选择“**创建资源**”。
      1. 在搜索框中，输入 **Azure Bot**。
      1. 选择 **Enter**。
      1. 选择 **"Azure 自动程序"**。

           ![创建 Azure 自动程序卡](~/assets/images/bots/createazurebot.png)

      1. 选择“**创建**”。
      1. 在自动程序句柄中输入所需的 **自动程序句柄名称**。
      1. 从" **订阅** "下拉列表中，选择 **"msteams.nonprod.pub.msft.aplt"**。
      1. 从" **资源组** "下拉列表中，选择现有资源组。 还可以创建新的资源组，然后选择"新建 ("，>  输入资源名称 **>"确定**) "。

          ![注册自动程序](~/assets/images/Tab-ME-SSO/register-bot.png)

      1. 在" **Microsoft 应用 ID"** 部分，默认情况下 **选择"创建新的 Microsoft 应用 ID** "。 

         选择 **"使用现有应用注册** "，然后为现有应用程序输入现有应用 **ID** **和现有** 应用密码。 选择 **"为新应用程序创建新的 Microsoft 应用 ID** "。

         > [!NOTE]
         > 不能创建多个使用相同 **Microsoft 应用 ID 的机器人**。

      1. 然后“**审阅 + 创建**”。

         ![注册自动程序](~/assets/images/Tab-ME-SSO/register-bot-2.png)

      1. 如果验证通过，请选择"创建 **"**。

          设置自动程序服务需要一些时间。

      1. 选择“**转到资源**”。 

          ![部署应用](~/assets/images/Tab-ME-SSO/go-to-resource.png)

          已创建 Azure 自动程序。

          ![部署应用](~/assets/images/Tab-ME-SSO/app-overview.png)

      **创建客户端密码**

        如果已新建 Microsoft 应用 ID，请 **执行以下步骤**：

      1. 在左侧面板中，选择" **配置"**。 

         > [!TIP]
         > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 供将来参考。

      1. 选择 **"自动程序类型"** 下的" **多租户"**。

          ![自动程序类型](~/assets/images/Tab-ME-SSO/bot-type.png)

      1. 在 **"Microsoft 应用 ID"旁边，** 选择" **管理"**。

          ![Microsoft 应用 ID](~/assets/images/Tab-ME-SSO/manage.png)

      1. 在" **客户端密码"** 部分，选择 **"新建客户端密码"**。 

          ![新客户端密码](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)

         将显示 **"添加客户端密码"** 窗口。  

      1. 输入 **"说明"**。

      1. 选择“**添加**”。

          ![将客户端密码添加到应用](~/assets/images/Tab-ME-SSO/add-client-id.png)

      1. 在" **值"** 列中，选择 **"复制到剪贴板"**。

           ![客户端密码的值](~/assets/images/Tab-ME-SSO/client-ids.png)
         
         > [!TIP]
         > 保存 **客户端密码** 值或应用密码，供将来参考。

      **添加Microsoft Teams频道**

      1. 选择“主页”。

          ![主页](~/assets/images/Tab-ME-SSO/home.png)

      1. 从"最近使用的资源 **"中选择自动程序**。

      1. 选择 **左** 窗格中的"频道"。 

      1. 选择 **Microsoft Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/>.

      1. 选中复选框以接受 **服务条款**。

      1. 选择" **同意"**。

            ![服务条款](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)

      1. 选择“**保存**”。

            ![选择Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   

      **为本地 Web 服务器创建隧道**

      使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：

       ```bash
       ngrok http -host-header=localhost 3978
       ```

      **添加消息终结点**

      1. 从 ngrok 中，将 HTTPS URL (https 复制到 io) 。

          ![ngrok HTTPS URL](~/assets/images/Tab-ME-SSO/ngrok-image.png)

          > [!NOTE]
          > ngrok 中的 HTTPS URL 是您的完全限定域名。
          > `WebAppDomain`是不包括的完全限定`https://`域名。

      1. In **设置** for the Azure bot that you created， select **Configuration**.

      1. 在 **消息终结点中**，使用 ngrok 和 URL 末尾的 HTTPS URL 添加 **/api/messages**。

          ![消息终结点](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)

      1. 选择“**应用**”。

          你已成功在 Azure Bot 服务中设置自动程序。
  - title: 为选项卡配置 SSO
    durationInMinutes: 1
    content: |
      **通过 Azure AD 门户注册应用**  

      1. 转到 Microsoft Azure [门户](https://portal.azure.com/)。

      1. 选择“Azure Active Directory”。

      1. 在左侧窗格中，选择" **应用注册"**。

      1. 选择自动程序。

      1. 选择 **"公开 API"**。

      1. 选择 **"设置"**。

         ![公开 API](~/assets/images/Tab-ME-SSO/application-id-set.png)

      1. 以 **的形式设置应用程序 ID URI**`api://botid-{AppID}`。

         ![设置链接](~/assets/images/Tab-ME-SSO/appid-uri1.png)
          
      1. 选择“**添加作用域**”。 

      1. 在出现的面板中，输入 作为`access_as_user`**范围名称**。

      1. 将 **Who可以同意？** 设置为 `Admins and users`。

      1. 若要使用作用域的适当 `access_as_user` 值配置管理员和用户同意提示，在字段中提供以下信息：</br>

         * 输入 `Teams can access the user’s profile` 作为 **管理员同意显示名称**。

         * 输入 `Allows Teams to call the app’s web APIs as the current user` 作为 **管理员同意说明**。

         * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。

         * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 作为 **用户同意说明**。

      1. 确保将“状态”设置为“已启用”。

      1. 选择要 **保存的"添加** 范围"。

         ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope.png)

          > [!NOTE]
          > 范围 **名称** 应匹配应用程序 **ID** URI，并 `/access_as_user` 追加到末尾。</br>
             `api://botid-00000000-0000-0000-0000-000000000000/access_as_user`

            ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) 

      1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 

      1. 选择 **添加客户端应用程序**。 

      1. 输入以下每个客户端 ID 并选择授权范围：</br>

           * `1fec8e78-bce4-4aaf-ab1b-5451cc387264` (Teams移动或桌面应用程序) 

             ![添加客户端应用程序](~/assets/images/Tab-ME-SSO/add-client-application.png) 

           * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` (Teams Web 应用程序) 

             ![添加客户端应用程序](~/assets/images/Tab-ME-SSO/add-client-application21.png) 
          

         下图显示客户端 **ID**：

           ![客户端应用程序](~/assets/images/Tab-ME-SSO/client-id-2.png) 

      1. 在左侧面板中，选择 **"API 权限"**。 

         > [!NOTE]
         > 只有在应用程序应用程序注册到其他租户Azure AD用户才需要同意这些权限。

      1. 选择“**添加权限**”。

      1. 选择 **"Microsoft Graph"**。

         ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)

      1. 选择“**委托的权限**”。

         默认情况下， **将选择 User.Read** 。

         ![用户](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)

      1. 添加以下权限：</br>
          * **email**
          * **offline_access**
          * **OpenId**
          * **profile**


      1. 选择 **添加权限**。

      1. 从左侧面板中，选择 **"身份验证** "以设置重定向 URI。 

         > [!NOTE]
         > 如果未向应用授予 IT 管理员同意，用户必须在第一次使用应用时提供同意。
                 
           1. 选择 **添加平台**。
           1. 选择“Web”

              ![Web](~/assets/images/Tab-ME-SSO/configure-platform1.png)

           1. 输入 **重定向 URI** 作为 `https://token.botframework.com/.auth/web/redirect`。

           1. 通过 **选中以下复选框** 启用隐式授予和混合流：
               * **ID 令牌**
               * **访问令牌**

           1. 选择“**配置**”。

              ![配置 Web](~/assets/images/Tab-ME-SSO/configure-web.png)

      **更新清单**

      1. 从 **左窗格中** 选择清单。

      1. 确保配置项设置为" **accessTokenAcceptedVersion"：2**。 如果没有，请将其值更改为 **2，** 然后选择"保存 **"**。 

         > [!Tip]
         > 如果你已在测试自动程序Teams，则必须注销自动程序并注销Teams。 然后再次登录以查看此更改。

         ![更新清单](~/assets/images/bots/update-manifest.png)</br>

      **设置自动程序服务连接**

      1. 转到配置 **页面** > **Add OAuth Connection 设置**。

      1. 选择 **"添加 OAuth 连接设置**"。

      1. 在 **"新建连接设置**"中，输入以下详细信息：

          | Field | 值或描述 |
          | ----- | ----- |
          | **名称** | 输入新连接设置的名称。 可以在自动程序服务代码的设置中使用该名称。 |
          | **服务提供程序** | 选择 **"Azure Active Directory V2"**。 |
          | **客户端 ID** | 以前另存为 **Microsoft 应用 ID**。 |
          | **客户端密码** | 以前另存 **为** 客户端密码 ID 的值。 |
          | **令牌Exchange URL** | 在公开 **API 终结点** 时，使用之前获取的应用程序 ID URI。 |
          | **租户 ID** | 输入 **common**。 |
          | **Scopes** | 输入 **User.Read** 并添加选择的所有 **作用域** ，同时指定下游 API 的权限。 |

      1. 选择“**保存**”。

          <img src="~/assets/images/Tab-ME-SSO/new-connection-setting.png" alt="Bot Service connection" width="300"/>
  - title: 设置应用设置
    durationInMinutes: 1
    content: |
      1. 导航到 **克隆存储库中的 appsettings.json** 。

          ![应用设置位置](~/assets/images/Tab-ME-SSO/app-setting-folder.png)

      1. 在 **应用程序中打开 appsettings.json** **Visual Studio Code** 并更新以下信息：  

           * 设置为 `"MicrosoftAppId"` 自动程序 **Microsoft 应用 ID**。
           * 设置为 `"MicrosoftAppPassword"` 自动程序客户端密码 ID 值。
           * 设置为 `"DOMAIN-NAME"` ngrok URL。
           * 设置为 `"ConnectionName"` OAuth 连接设置的名称。
           * 设置为 `"ClientId"` 自动程序 **Microsoft 应用 ID**。
           * 设置为 `"AppSecret"` 自动程序客户端密码 ID 值。
           * 以 `"ApplicationIdURI"` 形式设置 `api://584f****.ngrok.io/botid-{AppID}`。

          ![应用设置](~/assets/images/Tab-ME-SSO/app-setting1.png)
  - title: 设置清单文件
    durationInMinutes: 1
    content: |
      1. 导航到 **克隆存储库中的 manifest.json** 。

          ![清单文件位置](~/assets/images/Tab-ME-SSO/folder-manifest.png)

      1. 在 Visual Studio Code中打开 **manifest.json**，然后进行以下更改：

           * 将 的所有匹配项 `[DOMAIN-NAME]` 替换为您的 ngrok 域名。 
           * 将 的所有匹配项 `[YOUR-MICROSOFT-APP-ID]` 替换为自动程序 **Microsoft 应用 ID**。

               > [!NOTE]
               > 根据方案的不同， `[YOUR-MICROSOFT-APP-ID]` 可能会 `[DOMAIN-NAME]` 多次发生。

           * `api://584f****.ngrok.io/botid-{AppID}`设置为 `"resource"` 。</br>
          
          ![清单图像 2](~/assets/images/Tab-ME-SSO/vs-manifest.png)
  - title: 生成并运行服务
    durationInMinutes: 1
    content: |
      **使用 2019 或命令行Visual Studio和运行服务**

      # <a name="visual-studio-2019"></a>[Visual Studio 2019](#tab/vs2019)

         1. 启动 **Visual Studio 2019**。
         1. 导航到 **"FileOpen** >  >  **Project/Solution"**。

            ![打开文件](~/assets/images/Tab-ME-SSO/open-project1.png)

         1. 从 **csharp** **文件夹中选择"应用 SSO Sample.csproj** 文件"。

            ![Project文件夹](~/assets/images/Tab-ME-SSO/project-folder1.png)

         1. 你将看到以下输出：

            ![令牌文件](~/assets/images/Tab-ME-SSO/output1.png)

         1. 按 **F5** 运行项目。

         1. 如果 **显示** 以下对话框，请选择"是"：

            ![信任证书](~/assets/images/Tab-ME-SSO/certificate.png)

            网页随即打开，显示消息 **"自动程序已准备就绪！**

            ![应用就绪](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) 

          
      # <a name="command-line"></a>[命令行](#tab/cli)

      导航到 **命令提示符窗口中的 csharp** 文件夹，然后输入以下命令：

      ```bash
      dotnet run
      ```

      ![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)
        
  - title: Upload SSO 应用Teams
    durationInMinutes: 1
    content: |
      **通过Teams文件运行manifest.zip应用程序**

      1. 在克隆的存储库中，导航到 **teamsAppManifest > csharp >应用 SSO 示例**。

      1. 创建.zip清单文件夹中存在以下 **文件的文件：** 
         * manifest.json
         * icon-outline.png
         * icon-color.png

         ![选择 zip 文件](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)

      1. 转到 **Microsoft Teams**。

      1. 选择 **"存储"**。
      1. 选择 **"管理应用"**。
      1. 选择 **"发布应用"**。

         ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)

      1. 选择 **Upload自定义应用"**。 

         ![Upload自定义应用](~/assets/images/Tab-ME-SSO/upload-custom-app.png)

      1. 选择 **"** 打开"上载.zip清单 **文件夹中创建的文件** 。

         ![选择 zip 文件](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)

      1. 选择“**添加**”。

         ![添加应用](~/assets/images/Tab-ME-SSO/add-sso-app.png)

      1. 向自动程序发送消息。 
      1. 机器人将执行单一登录并显示配置文件卡以及查看令牌的选项提示。

         ![个人资料卡片](~/assets/images/Tab-ME-SSO/Congratulation-image.png)

      1. 选择 **"是** "查看令牌或 **选择"** 否"继续聊天。
        
         ![令牌视图](~/assets/images/Tab-ME-SSO/token-view1.png)

        1. 如果未执行 SSO，则机器人将为选项卡执行默认身份验证方法。

            ![无 SSO](~/assets/images/Tab-ME-SSO/not-login11.png)

        1. 选择省略号 **...** 以打开邮件扩展。

            ![邮件扩展](~/assets/images/Tab-ME-SSO/message-extension.png)
        
        1. 选择新的 SSO 应用程序。

            ![SSO 应用](~/assets/images/Tab-ME-SSO/recent-app-sso.png)

        1. 选择 **"登录"**。

            ![登录](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)

        1. 在登录框中输入你的凭据，然后选择下一 **步**。

            ![登录框](~/assets/images/Tab-ME-SSO/sign-in-box.png)
        
        1. 选择“**接受**”。

            ![许可框](~/assets/images/Tab-ME-SSO/concent-box.png)

        1. 打开邮件扩展并选择应用程序。

        1. 在搜索框下选择你的配置文件。 你将看到如下所示：

            ![个人资料](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)

        1. 发送到 `https://profile.botframework.com` 应用程序，获取配置文件卡片。
         
            ![个人资料卡片](~/assets/images/Tab-ME-SSO/profile-card.png)
  - title: 完成挑战
    durationInMinutes: 1
    content: |
      你提供类似这样的内容了吗？

         ![SSO 配置文件](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
  - content: |
      你已完成教程以开始使用适用于选项卡和消息传递扩展应用的 SSO。