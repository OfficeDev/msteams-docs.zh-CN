### YamlMime:Tutorial
title: 从 Microsoft Teams 调用任务模块
metadata:
  title: 从 Microsoft Teams 调用任务模块
  description: 通过此学习模块，了解如何使用自适应卡片或 Bot Framework 卡来设置 Teams 任务模块。
  audience: Developer
  level: Beginner
  ms.date: 23/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: task-modules-and-cards/task-modules/task-modules-bots.md
  nextTutorialTitle: 从机器人了解有关任务模块的详细信息
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: 784e4efdfa0754d58a34d4bbef807efd6e5af590
  ms.sourcegitcommit: ac59d469b823b80e65ee6f7be11ec5c365977a1c
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/06/2022
  ms.locfileid: "68491606"
items:
- durationInMinutes: 1
  content: >
    可以使用自适应卡片或 Bot Framework 卡从 Teams 机器人调用任务模块。


    **任务模块的主要功能：**


    * 通过避免多个步骤来增强用户体验。

    * 帮助用户跟踪机器人状态。

    * 从用户检索输入并显示自定义网页内容。


    本分步指南可帮助你创建一个示例 Azure 机器人来调用 Teams 任务模块。 你将看到以下输出：

     ![任务模块](~/assets/images/Teams-task-module/final_image.png)
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境： \n\n | &nbsp; | 安装 | 用于使用... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams 可通过一个位置的聊天、会议、呼叫和所有应用与你协作的所有人进行协作。|\n | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负荷之一：<br> • **ASP.NET 和 Web 开发** <br> • **.NET Core 跨平台开发** | 可以在 Visual Studio 2022 中安装企业版本，并安装工作负荷。 |\n | &nbsp; | [.NET Core SDK 版本 3.1](https://dotnet.microsoft.com/en-us/download) | 用于本地调试和Azure Functions应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，则可以安装可移植版本。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | Teams 应用功能 (会话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，不需要这样做。 此包安装在项目目录中， (使用 npm `devDependencies`) 。 |\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [身份验证](https://ngrok.com/download)。\n"
- title: 设置本地环境
  durationInMinutes: 1
  content: "将存储库克隆 `BotBuilder-Samples` 到本地 GitHub：  \n\n 1. 打开 [BotBuilder 示例](https://github.com/microsoft/BotBuilder-Samples)。\n 1. 选择 **“代码**”。\n 1. 从下拉菜单中选择“ **使用 GitHub Desktop 打开** ”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/clonerepository_1.png\" alt-text=\"克隆存储库\":::\n\n 1. 选择 **“克隆**”。 \n"
- title: 在 Azure AD 门户中创建和注册机器人
  durationInMinutes: 5
  content: "若要在 Microsoft Azure Active Directory (Azure AD) 中创建和注册机器人，请执行以下步骤：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n* 创建客户端机密 ID 和值详细信息，以启用机器人的 SSO 身份验证。\n* 添加 Teams 通道以将机器人部署到 Teams 频道。\n* 使用 ngrok 创建到 Web 服务器终结点的隧道。\n* 将消息传送终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到 [Microsoft Azure 门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择“**Enter**”。\n1. 选择 **Azure 机器人**。\n\n     :::image type=\"content\" source=\"./assets/images/Teams-task-module/azure-bot_1.png\" alt-text=\"Azure 机器人。\":::\n\n1. 选择“**创建**”。\n1. 在 **机器人句柄** 中输入所需的机器人句柄名称。\n1. 从下拉列表中选择 **订阅** 和 **资源组** 。\n    \n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/review-plus-create_2.png\" alt-text=\"选择资源 Azure 机器人\"::: \n\n   若要创建新的资源组，请选择 **“新建** >输入资源名称>选择 **”确定**”。 从 **“新建资源组”位置** 下拉列表中选择所需的位置。\n   \n    ![新的资源组位置](~/assets/images/bots/newresource.png)\n\n1. 在机器人类型下选择 **多租户** 。\n\n1. 在 **“Microsoft 应用 ID”** 部分中，默认选择 **“新建 Microsoft 应用 ID** ”。 \n\n   还可以选择 **“使用现有应用注册** ”并输入 **应用 ID**、 **应用租户 ID** 和 **MSI 资源 ID**。\n\n   > [!NOTE]\n   > 不能创建具有相同 **Microsoft 应用 ID** 的多个机器人。\n\n1. 然后“**审阅 + 创建**”。\n\n    ![Microsoft 应用 ID](~/assets/images/Teams-task-module/multi-tenant-option.png)\n\n1. 通过验证后，选择 **“创建**”。 \n\n    预配机器人服务需要一些时间。 \n\n1. 选择“**转到资源**”。 \n\n    ![部署应用](~/assets/images/Teams-task-module/bot-deployment_1.png)\n\n    Azure 机器人已创建。\n\n    ![创建的 Azure 机器人资源](~/assets/images/Teams-task-module/bot-page_1.png)\n\n**创建客户端机密**\n\n  如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左窗格中，选择 **“配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n    ![创建的 Microsoft ID](~/assets/images/Teams-task-module/manage.png)\n\n1. 在 **Microsoft 应用 ID** 旁边，选择 **“管理**”。\n\n1. 在 **“客户端机密** ”部分中，选择 **“新建客户端机密**”。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_1.png\" alt-text=\"新客户端机密\":::\n\n   将显示 **“添加客户端机密** ”窗口。  \n\n1. 输入 **说明**。\n\n1. 选择“**添加**”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/clientsecret_1.png\" alt-text=\"将客户端机密添加到应用\":::\n\n1. 在 **“值** ”列中，选择“复制到剪贴板”图标以复制值详细信息。\n\n     :::image type=\"content\" source=\"~/assets/images/Teams-task-module/clientvalue_1.png\" alt-text=\"客户端机密的值\":::\n   \n   > [!TIP]\n   > 保存 **客户端机密** 值或应用密码以供将来参考。\n\n**添加 Teams 频道**\n\n1. 选择“主页”。\n\n    ![主页](~/assets/images/Teams-task-module/gotohome_1.png)\n\n1. 从 **最近的资源** 中选择机器人。\n\n1. 在左窗格中选择 **“通道**”，然后选择 **“Microsoft Teams**” <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n     :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"在频道中选择 Teams\":::\n     \n1. 选中该复选框以接受 **服务条款**。\n\n1. 选择 **“同意**”。\n\n      ![服务条款](~/assets/images/Teams-task-module/terms_1.png)\n\n1. 选择“保存”。\n\n      ![选择 Teams](~/assets/images/Teams-task-module/configteams_1.png)  \n\n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n ```bash\n ngrok http --host-header=rewrite 3978\n ```\n\n> [!TIP]\n> 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中提供的步骤注册 ngrok 并进行身份验证。 然后运行该 `ngrok http --host-header=localhost 3978` 命令。\n\n**添加消息传送终结点**\n\n1. 从 ngrok 复制 HTTPS URL。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url.png\" alt-text=\"ngrok HTTPS URL\":::\n\n    > [!NOTE]\n    > ngrok 中的 HTTPS URL 是完全限定的域名。\n    > 这是 `WebAppDomain` 一个完全限定的域名，不包括 `https://` 在其中。\n\n1. 在创建的 Azure 机器人 **的“设置”** 中，选择 **“配置**”。\n\n1. 在 **消息传送终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n    ![消息传送终结点](~/assets/images/Teams-task-module/messaging-endpoint_1.png)\n\n1. 选择“**应用**”。\n\n    已在 Azure 机器人服务中成功设置机器人。\n"
- title: 更新 Azure AD 应用注册
  durationInMinutes: 1
  content: "1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“Azure Active Directory”。\n\n1. 在左窗格中，选择 **“应用注册**”。\n\n1. 选择机器人。\n\n   ![应用注册](~/assets/images/Teams-task-module/appregister_1.png)\n\n1. 选择 **“公开 API**”。\n\n1. 选择 **“设置**”。\n\n   ![公开 API](~/assets/images/Teams-task-module/exposeanapi_1.png)\n\n1. 设置应用程序 **ID URI** 的形式 `api://your ngrok/{AppID}`。\n\n   ![设置链接](~/assets/images/Teams-task-module/setlink_1.png)\n\n    > [!NOTE]\n    > 如果使用的是隧道服务（如 ngrok），请确保在 ngrok 子域发生更改时更新该值。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，新的 ngrok 子域名称在哪里 `f631****.ngrok.io` 。\n\n1. 选择“**添加作用域**”。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectscope_1.png\" alt-text=\"选择作用域\":::\n\n   将显示 **“添加范围** ”窗口。\n\n1. 输入以下详细信息以配置范围：\n\n    1. 输入 `access_as_user` 为 **范围名称**。\n\n    1. 将 **谁可以同意？** `Admins and users`\n\n1. 若要配置具有相应作用域值 `access_as_user` 的管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入`Teams can access the user’s profile`为 **管理员许可显示名称**。\n\n     * 输入`Allows Teams to call the app’s web APIs as the current user`为 **管理员同意说明**。\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 为 **用户同意显示名称**。\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 为 **用户同意说明**。\n\n1. 确保将“状态”设置为“已启用”。\n\n1. 选择 **“添加范围** ”以保存。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/addascope_1.png\" alt-text=\"添加范围\":::\n\n    > [!NOTE]\n    > **范围名称** 应与应用程序 **ID** URI 匹配，`/access_as_user`并追加在末尾。</br>\n       `api://d4b8****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/Teams-task-module/scopes_2.png) \n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 \n\n1. 选择 **添加客户端应用程序**。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"选择客户端应用程序\"::: \n\n1. 输入 **客户端 ID**： `1fec8e78-bce4-4aaf-ab1b-5451cc387264` 适用于 Teams 移动或桌面应用程序。 \n\n    ![添加客户端应用程序 1](~/assets/images/meetings-side-panel/addclientapplication1.png) \n\n   输入 **客户端 ID**： `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` 适用于 Teams Web 应用程序。\n\n    ![添加客户端应用程序 2](~/assets/images/meetings-side-panel/addclientapplication2.png) \n\n1. 选择 **“已授权”范围**。\n\n    ![添加客户端应用程序 2](~/assets/images/Teams-task-module/authorizedscope.png) \n\n   下图显示客户端 ID：\n\n    ![客户端应用程序](~/assets/images/meetings-side-panel/clientapps.png) \n\n1. 在左窗格中，选择 **“API 权限**”。 \n\n   > [!NOTE]\n   > 仅当 Azure AD 应用在其他租户中注册时，用户才需要同意 API 权限。\n\n1. 选择“**添加权限**”。\n\n    ![添加权限](~/assets/images/meetings-side-panel/add-permission_1.png)\n\n1. 选择 **Microsoft Graph**。\n\n1. 选择“**委托的权限**”。\n\n1. 选择以下权限：</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **个人资料**\n      * **User.Read**\n\n1. 选择 **添加权限**。\n\n     ![其他权限](~/assets/images/meetings-side-panel/other-permissions_1.png)\n\n1. 在左侧面板中，选择 **“身份验证** ”以设置重定向 URI。 \n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员许可，则用户必须在第一次使用应用时提供同意。\n           \n     1. 选择 **“添加平台** > **Web**”。\n\n        ![Web](~/assets/images/Teams-task-module/webauth_1.png)\n\n     1. 通过追加到完全限定的域名，输入应用的 `auth-end` 重定向 URI：</br> \n       `https://d4b8****.ngrok.io/auth-end`. </br>\n\n     1. 通过选择以下复选框启用 **隐式授予和混合流** ：\n         * **ID 令牌**\n         * **访问令牌**\n\n     1. 选择“**配置**”。\n\n        ![Auth-end](~/assets/images/Teams-task-module/authend_1.png)\n"
- title: 设置应用设置和清单文件
  durationInMinutes: 1
  content: "1. 转到克隆存储库中的 **appsettings.json** 。\n\n    ![应用设置位置](~/assets/images/Teams-task-module/appsettingslocation_1.png)\n\n1. 在最新版本的 Visual Studio 中打开 **appsettings.json** ，并更新以下信息：  \n\n     * 设置 `\"MicrosoftAppType\"` 为 **MultiTenant**。\n     * 设置 `\"MicrosoftAppId\"` 为机器人的 **Microsoft 应用 ID**。\n     * 设置`\"MicrosoftAppPassword\"`为 **客户端机密** 的 **值**。\n     * 设置 `\"MicrosoftAppTenantId\"` 为使用应用的租户的租户 ID。\n     * 设置 `\"BaseUrl\"` 为完全限定的域名 (https 到 io) 。\n\n    ![应用设置](~/assets/images/Teams-task-module/appsettings_1.png)\n\n1. 转到克隆存储库中的“manifest.json”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/manifestlocation_1.png\" alt-text=\"清单文件位置\":::\n\n1. 在最新版本的 Visual Studio 中打开“manifest.json”，并进行以下更改：\n\n     * 将所有匹配项 `YourDeployedBotUrl.com` 替换为 `WebAppDomain` 名称。\n     * 将所有事件 `<<YOUR-MICROSOFT-APP-ID>>` 替换为机器人的 **Microsoft 应用 ID**。\n\n    ![清单映像 2](~/assets/images/Teams-task-module/manifest_1.png)\n"
- title: 生成并运行服务
  durationInMinutes: 1
  content: "**使用最新版本的 Visual Studio 或命令行生成和运行服务**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[最新版本的 Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. 启动最新版本的 Visual Studio。\n   1. 转到 **文件** > **打开** > **项目/解决方案**。\n\n      ![打开文件](~/assets/images/Teams-task-module/VSopenfile.png)\n\n   1. 从 **54.teams-task-module** 文件夹中选择 **TeamsTaskModule.csproj** 文件。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-task-module/csprojfileopen_1.png\" alt-text=\"CS proj 文件\":::\n\n   1. 从 **视图** 打开 **解决方案资源管理器**。\n\n      ![解决方案资源管理器](~/assets/images/Teams-task-module/solutionexplorer_1.png)\n\n   1. 右键单击以选择 **TeamsTaskModule**。\n\n   1. 选择 **“设置为启动项目**”。\n\n      ![解决方案资源管理器](~/assets/images/Teams-task-module/startup_1.png)\n\n   1. 按 **F5** 运行项目。\n\n   1. 如果出现以下对话框，请选择“**是**”：\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-task-module/certificate_1.png\" alt-text=\"信任证书\":::\n\n      随即打开一个网页，其中包含一条消息 **。机器人已准备就绪！**\n\n      ![应用准备就绪](~/assets/images/Teams-task-module/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在命令提示符窗口中转到 **BotBuilder-Samples >示例> csharp_dotnetcore > 54.teams-task-module** ，并输入以下命令：\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-task-module/dotnetruncmd.png)\n"
- title: 上传任务模块应用
  durationInMinutes: 1
  content: "1. 在克隆的存储库中，转到 **csharp_dotnetcore > 54.teams-task-module > TeamsAppManifest**。\n\n1. 使用 **TeamsAppManifest** 文件夹中存在的以下文件创建.zip： \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip 文件](~/assets/images/Teams-task-module/zip-file_1.png) \n\n1. 转到 **Microsoft Teams**。\n\n1. 选择“**应用**”。\n\n   ![Zip 文件](~/assets/images/Teams-task-module/AppStore_1.png)\n\n1. 选择“**管理应用**”。\n\n   ![管理应用](~/assets/images/Teams-task-module/manage-apps_1.png)\n\n1. 选择“**上传自定义应用**”。 \n\n   ![上传自定义应用](~/assets/images/Teams-task-module/upload-app_1.png)\n\n1. 选择 **“打开** ”可上传在 **TeamsAppManifest** 文件夹中创建的.zip文件。\n\n   ![选择 zip 文件](~/assets/images/Teams-task-module/select-zip_1.png)\n\n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/add-app_1.png\" alt-text=\"添加应用\":::\n\n   应用在聊天中打开。\n\n1. 输入任何文本，然后选择 Enter。 \n\n   ![聊天](~/assets/images/Teams-task-module/chat_ready.png)\n\n   该应用显示 **从 Hero 卡和****任务模块调用自适应卡的任务模块调用**。         \n"
- title: 在 Teams 中与应用交互
  durationInMinutes: 1
  content: >
    1. **从“英雄卡”任务模块调用** 中选择 **自适应卡** 片，或 **从自适应卡片中选择任务模块调用**。

       ![自适应卡片](~/assets/images/Teams-task-module/adaptive-card_1.png)

    1. 输入任何文本。


    1. 选择“**提交**”。

       ![自适应卡片文本](~/assets/images/Teams-task-module/adaptive-card-text.png)

       **自适应卡片** 发送确认消息。

       ![自适应卡提交](~/assets/images/Teams-task-module/adaptive-card-submit.png)

    1. 从 Hero 卡或 **任务模块调用中****从自适应卡片中选择任务模块调** 用中的 **自定义窗** 体。

       ![自定义窗体](~/assets/images/Teams-task-module/custom-form_1.png)

    1. 输入所需的信息：

       * **名称**
       * "电子邮件"
       * **收藏书**
       * **Password**
       * **确认密码**

    1. 选择 **“注册”。**

       ![自定义窗体文本](~/assets/images/Teams-task-module/custom-text.png)

       **自定义窗体** 发送确认消息。

       ![注册](~/assets/images/Teams-task-module/custom-on-sign-up.png)

       聊天中会显示以下信息：

       ![聊天](~/assets/images/Teams-task-module/adaptive-custom-chat.png)

    1. **从“英雄卡”或****“任务模块调用**”中从“自适应卡片”中选择“任务模块调用”中的 **YouTube**。

       ![YouTube](~/assets/images/Teams-task-module/youtube_1.png)

    1. 选择 **“播放**”。

       ![YouTube 选择](~/assets/images/Teams-task-module/youtube-select_1.png)

       视频播放。
- title: 完成质询
  durationInMinutes: 1
  content: >
    你想出了这样的事吗？

       ![任务模块](~/assets/images/Teams-task-module/final_image.png)
- content: 你已完成本教程以开始使用 Teams 任务模块应用！
