### YamlMime:Tutorial
title: 从 Microsoft Teams 调用任务模块
metadata:
  title: 从 Microsoft Teams 调用任务模块
  description: 通过本学习模块，了解如何使用自适应卡片或 Bot Framework 卡片设置 Teams 任务模块。
  audience: Developer
  level: Beginner
  ms.date: 23/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: task-modules-and-cards/task-modules/task-modules-bots.md
  nextTutorialTitle: 详细了解机器人的任务模块
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: 171f401aeedbe871127f7f7e7a955c4f53e767a4
  ms.sourcegitcommit: 6926cf5eee55d5047c11ca13afc7f6f23e270396
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 10/27/2022
  ms.locfileid: "68740234"
items:
- durationInMinutes: 1
  content: >
    可以使用自适应卡片或 Bot Framework 卡从 Teams 机器人调用任务模块。


    **任务模块的主要功能：**


    * 通过避免多个步骤来增强用户体验。

    * 帮助用户跟踪机器人状态。

    * 从用户检索输入并显示自定义网页内容。


    本分步指南可帮助你创建示例 Azure 机器人来调用 Teams 任务模块。 你将看到以下输出：

     :::image type="content" source="./assets/images/Teams-task-module/final_image.png" alt-text="任务模块":::
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境： \n\n | &nbsp; | 安装 | 用于使用... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams 可在一个位置通过聊天、会议、通话等应用与你合作的每个人进行协作。|\n | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负载之一：<br> • ASP.NET 和 Web 开发 <br> • .NET Core 跨平台开发 | 可以在 Visual Studio 2022 中安装企业版，并安装工作负载。 |\n | &nbsp; | [.NET Core SDK 版本 3.1](https://dotnet.microsoft.com/en-us/download) | 用于本地调试和Azure Functions应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，则可以安装可移植版本。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | teams 应用功能 (对话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，这不是必需的。 此包使用 npm `devDependencies`) 安装在项目目录 (中。 |\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [authtoken](https://ngrok.com/download)。\n"
- title: 设置本地环境
  durationInMinutes: 1
  content: "将存储库克隆 `BotBuilder-Samples` 到本地 GitHub：  \n\n 1. 打开 [BotBuilder 示例](https://github.com/microsoft/BotBuilder-Samples)。\n 1. 选择“ **代码**”。\n 1. 从下拉菜单中选择“ **使用 GitHub Desktop 打开** ”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/clonerepository_2.png\" alt-text=\"克隆存储库\":::\n\n 1. 选择“ **克隆**”。 \n"
- title: 在 Azure AD 门户中创建和注册机器人
  durationInMinutes: 5
  content: "若要在 Microsoft Azure Active Directory (Azure AD) 中创建和注册机器人，请执行以下步骤：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n* 创建客户端机密 ID 和值详细信息，以启用单一登录 (SSO) 机器人的身份验证。\n* 添加 Teams 频道以将机器人部署到 Teams 频道。\n* 使用 ngrok 创建到 Web 服务器终结点的隧道。\n* 将消息传递终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到 [Microsoft Azure 门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择“**Enter**”。\n1. 选择“ **Azure 机器人**”。\n\n     :::image type=\"content\" source=\"./assets/images/Teams-task-module/azure-bot_1.png\" alt-text=\"Azure 机器人。\":::\n\n1. 选择“**创建**”。\n1. 在机器人句柄中输入所需的 **机器人句柄** 名称。\n1. 从下拉列表中选择 **“订阅** ”和“ **资源组** ”。\n    \n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/review-plus-create_2.png\" alt-text=\"选择资源 Azure 机器人\"::: \n\n   若要创建新的资源组，请选择“ **新建** ”>输入资源名称>选择“ **确定**”。 从“ **新建资源组** 位置”下拉列表中选择所需位置。\n   \n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"新建资源组位置\":::\n\n1. 选择 **“应用类型** ”作为 **“多租户**”。\n\n1. 在 **“Microsoft 应用 ID** ”部分中，默认选择“ **创建新的 Microsoft 应用 ID** ”。 \n\n   还可以选择“ **使用现有应用注册** ”，然后输入 **“应用 ID**”、“ **应用租户 ID”** 和 **“MSI 资源 ID**”。\n\n   > [!NOTE]\n   > 不能使用相同的 **Microsoft 应用 ID** 创建多个机器人。\n\n1. 然后“**审阅 + 创建**”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/multi-tenant-option_1.png\" alt-text=\"Microsoft 应用 ID\":::\n\n1. 通过验证后，选择“ **创建**”。 \n\n    预配机器人服务需要一些时间。 \n\n1. 选择“**转到资源**”。 \n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/bot-deployment_2.png\" alt-text=\"部署应用\":::\n\n    已创建 Azure 机器人。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/bot-page_1.png\" alt-text=\"创建的 Azure 机器人资源\":::\n\n**创建客户端密码**\n\n  如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左窗格中，选择“ **配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/manage_1.png\" alt-text=\"已创建的 Microsoft ID\":::\n\n1. 在 **“Microsoft 应用 ID**”旁边，选择“ **管理**”。\n\n1. 在 **“客户端机密** ”部分中，选择“ **新建客户端密码**”。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_2.png\" alt-text=\"新建客户端密码\":::\n\n   此时会显示 **“添加客户端机密** ”窗口。 \n\n1. 输入 **“说明**”。\n\n1. 选择“**添加**”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/clientsecret_2.png\" alt-text=\"向应用添加客户端密码\":::\n\n1. 在 **“值** ”列中，选择“ **复制到剪贴板**”。\n\n     :::image type=\"content\" source=\"~/assets/images/Teams-task-module/clientvalue_2.png\" alt-text=\"客户端密码的值\":::\n   \n   > [!TIP]\n   > 保存 **客户端机密** 值或应用密码以供将来参考。\n\n**添加 Teams 频道**\n\n1. 选择“主页”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/gotohome_2.png\" alt-text=\"主页\":::\n\n1. 从 **“最近使用的资源**”中选择机器人。\n\n1. 在左窗格中选择“**频道**”，然后选择“**Microsoft Teams**” <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n     :::image type=\"content\" source=\"~/assets/images/adaptive-cards/channel-teams.png\" alt-text=\"在频道中选择 Teams\":::\n     \n1. 选中复选框以接受 **服务条款**。\n\n1. 选择“ **同意**”。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-task-module/terms_2.png\" alt-text=\"服务条款\":::\n\n1. 选择“**应用**”。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-task-module/configteams_2.png\" alt-text=\"选择 Teams\":::  \n\n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n ```bash\n ngrok http --host-header=rewrite 3978\n ```\n\n> [!TIP]\n> 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中提供的步骤注册并验证 ngrok。 然后运行 命令 `ngrok http --host-header=localhost 3978` 。\n\n**添加消息传送终结点**\n\n1. 从 ngrok 复制 HTTPS URL。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/ngrok-url1_1.png\" alt-text=\"ngrok HTTPS URL\":::\n\n    > [!NOTE]\n    > ngrok 中的 HTTPS URL 是完全限定的域名。\n    > `WebAppDomain`是不包含`https://`在中的完全限定域名。\n\n1. 在创建的 Azure 机器人 **的设置** 中，选择 **“配置**”。\n\n1. 在 **消息传递终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/messaging-endpoint_1.png\" alt-text=\"消息传送终结点\":::\n\n1. 选择“**应用**”。\n\n    已成功在 Azure 机器人服务 中设置机器人。\n"
- title: 更新 Azure AD 应用注册
  durationInMinutes: 1
  content: "1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“Azure Active Directory”。\n\n1. 在左窗格中，选择“ **应用注册**”。\n\n1. 选择机器人。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/appregister_1.png\" alt-text=\"应用注册\":::\n\n1. 选择 **“公开 API**”。\n\n1. 选择“ **设置**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/exposeanapi_1.png\" alt-text=\"公开 API\":::\n\n1. 以 的形式`api://your ngrok/{AppID}`设置 **应用程序 ID URI**。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/setlink_1.png\" alt-text=\"设置链接\":::\n\n    > [!NOTE]\n    > 如果使用 ngrok 等隧道服务，请确保在 ngrok 子域发生更改时更新值。\n    > 例如： `api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，其中 `f631****.ngrok.io` 是新的 ngrok 子域名称。\n\n1. 选择“**添加作用域**”。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectscope_2.png\" alt-text=\"选择作用域\":::\n\n   此时将显示 **“添加范围** ”窗口。\n\n1. 输入以下详细信息以配置范围：\n\n    1. 输入 `access_as_user` 作为 **作用域名称**。\n\n    1. 将 **“谁可以同意？”** 设置为 `Admins and users`。\n\n1. 若要使用适当的范围值 `access_as_user` 配置管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入`Teams can access the user’s profile`作为 **管理员同意显示名称**。\n\n     * 输入`Allows Teams to call the app’s web APIs as the current user`作为 **管理员同意说明**。\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 作为 **用户同意说明**。\n\n1. 确保将“状态”设置为“已启用”。\n\n1. 选择 **“添加范围** ”进行保存。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/addascope_1.png\" alt-text=\"添加范围\":::\n\n    > [!NOTE]\n    > **作用域名称** 必须与末尾追加的应用程序 **ID** URI `/access_as_user` 匹配。</br>\n       `api://d4b8****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/scopes_3.png\" alt-text=\"Scopes\"::: \n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 \n\n1. 选择 **添加客户端应用程序**。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"选择客户端应用程序\"::: \n\n1. 对于 Teams 移动或桌面应用程序，输入 **客户端 ID**： `1fec8e78-bce4-4aaf-ab1b-5451cc387264` 。 \n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"添加客户端应用程序 1\"::: \n\n   对于 Teams Web 应用程序，输入 **客户端 ID**： `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` 。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"添加客户端应用程序 2\"::: \n\n1. 选择 **“授权的范围**”。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/authorizedscope.png\" alt-text=\"添加客户端应用程序 2\"::: \n\n   下图显示了客户端 ID：\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"客户端应用程序\"::: \n\n1. 在左窗格中，选择“ **API 权限**”。 \n\n   > [!NOTE]\n   > 仅当 Azure AD 应用在不同租户中注册时，用户才需要同意 API 权限。\n\n1. 选择“**添加权限**”。\n\n    :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/add-permission_2.png\" alt-text=\"添加权限\":::\n\n1. 选择 **Microsoft Graph**。\n\n1. 选择“**委托的权限**”。\n\n1. 选择以下权限：</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **个人资料**\n      * **User.Read**\n\n1. 选择 **添加权限**。\n\n     :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/other-permissions_1.png\" alt-text=\"其他权限\":::\n\n1. 在左侧面板中，选择“ **身份验证** ”以设置重定向 URI。 \n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员同意，用户必须在首次使用应用时提供同意。\n           \n     1. 选择 **“添加平台** > **Web**”。\n\n        :::image type=\"content\" source=\"~/assets/images/Teams-task-module/webauth_1.png\" alt-text=\"Web\":::\n\n     1. 通过将 追加 `auth-end` 到完全限定的域名，输入应用的重定向 URI：</br> \n       `https://d4b8****.ngrok.io/auth-end`. </br>\n\n     1. 通过选中以下复选框启用 **隐式授予和混合流** ：\n         * **ID 令牌**\n         * **访问令牌**\n\n     1. 选择“**配置**”。\n\n        :::image type=\"content\" source=\"~/assets/images/Teams-task-module/authend_1.png\" alt-text=\"Auth-end\":::\n"
- title: 设置应用设置和清单文件
  durationInMinutes: 1
  content: "1. 转到克隆存储库中的 **appsettings.json** 。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/appsettingslocation_1.png\" alt-text=\"应用设置位置\":::\n\n1. 在最新版本的 Visual Studio 中打开 **appsettings.json** 并更新以下信息：  \n\n     * 设置为 `\"MicrosoftAppType\"` **MultiTenant**。\n     * 设置为 `\"MicrosoftAppId\"` 机器人的 **Microsoft 应用 ID**。\n     * 将 设置为`\"MicrosoftAppPassword\"`**“客户端机密****的值**”。\n     * 设置为 `\"MicrosoftAppTenantId\"` 使用应用的租户的租户 ID。\n     * 设置为 `\"BaseUrl\"` 完全限定的域名， (https 到 io) 。\n\n    ![应用设置](~/assets/images/Teams-task-module/appsettings_1.png)\n\n1. 转到克隆存储库中的 **manifest.json** 。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/manifestlocation_1.png\" alt-text=\"清单文件位置\":::\n\n1. 在最新版本的 Visual Studio 中打开 **manifest.json** 并进行以下更改：\n\n     * 将 的所有匹配项 `YourDeployedBotUrl.com` 替换为 `WebAppDomain` name。\n     * 将 的所有匹配项 `<<YOUR-MICROSOFT-APP-ID>>` 替换为机器人的 **Microsoft 应用 ID**。\n\n    :::image type=\"content\" source=\"~/assets/images/Teams-task-module/manifest_1.png\" alt-text=\"清单映像 2。\"lightbox=\"~/assets/images/Teams-task-module/manifest_1.png\":::\n"
- title: 生成并运行服务
  durationInMinutes: 1
  content: "**使用最新版本的 Visual Studio 或命令行生成和运行服务**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[最新版本的 Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. 启动最新版本的 Visual Studio。\n   1. 转到 **“文件** > **打开** > **项目/解决方案**”。\n\n      ![打开文件](~/assets/images/Teams-task-module/VSopenfile.png)\n\n   1. 从 **54.teams-task-module** 文件夹中选择 **TeamsTaskModule.csproj** 文件。\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-task-module/csprojfileopen_1.png\" alt-text=\"CS proj 文件\":::\n\n   1. 从 **视图** 打开 **解决方案资源管理器**。\n\n      ![解决方案资源管理器](~/assets/images/Teams-task-module/solutionexplorer_1.png)\n\n   1. 右键单击以选择 **TeamsTaskModule**。\n\n   1. 选择“ **设置为启动项目**”。\n\n      ![解决方案资源管理器](~/assets/images/Teams-task-module/startup_1.png)\n\n   1. 按 **F5** 运行项目。\n\n   1. 如果出现以下对话框，请选择“**是**”：\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-task-module/certificate_1.png\" alt-text=\"信任证书\":::\n\n      此时会打开一个网页，其中包含消息 **。机器人已准备就绪！**\n\n      :::image type=\"content\" source=\"~/assets/images/Teams-task-module/appisready.png\" alt-text=\"应用就绪\"::: \n\n    \n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在命令提示符窗口中转到 **BotBuilder-Samples >示例> csharp_dotnetcore > 54.teams-task-module** ，然后输入以下命令：\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Teams-task-module/dotnetruncmd.png)\n"
- title: 上传任务模块应用
  durationInMinutes: 1
  content: "1. 在克隆的存储库中，转到 **csharp_dotnetcore > 54.teams-task-module > TeamsAppManifest**。\n\n1. 使用 **TeamsAppManifest** 文件夹中存在的以下文件创建.zip： \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/zip-file_1.png\" alt-text=\"Zip 文件\"::: \n\n1. 转到 **Microsoft Teams**。\n\n1. 选择“**应用**”。\n\n1. 选择“**管理应用**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/manage-apps_3.png\" alt-text=\"管理应用\":::\n\n1. 选择“**上传自定义应用**”。 \n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/upload-app_1.png\" alt-text=\"上传自定义应用\":::\n\n1. 选择“ **打开** ”以上传在 **TeamsAppManifest** 文件夹中创建的.zip文件。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/select-zip_1.png\" alt-text=\"选择 zip 文件\":::\n\n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/add-app_1.png\" alt-text=\"添加应用\":::\n\n   应用将在聊天中打开。\n\n1. 输入任何文本并发送。 \n\n   :::image type=\"content\" source=\"~/assets/images/Teams-task-module/chat_ready_1.png\" alt-text=\"聊天\":::\n\n   应用显示 **来自主图卡的任务模块调用** 和 **来自自适应卡片的任务模块调用**。         \n"
- title: 在 Teams 中与应用交互
  durationInMinutes: 1
  content: >
    1. 从 **主卡的任务模块调用** 中选择 **自适应卡片**，或者 **从自适应卡片中选择任务模块调用**。

       :::image type="content" source="~/assets/images/Teams-task-module/adaptive-card_1.png" alt-text="自适应卡片":::

    1. 输入任何文本。


    1. 选择“**提交**”。

       ![自适应卡片文本](~/assets/images/Teams-task-module/adaptive-card-text.png)

       **自适应卡片** 发送确认消息。

       ![自适应卡片提交](~/assets/images/Teams-task-module/adaptive-card-submit.png)

    1. 从 **主卡的任务模块调用** 中选择 **自定义窗体**，或者 **从自适应卡片调用任务模块**。

       :::image type="content" source="~/assets/images/Teams-task-module/custom-form_1.png" alt-text="自定义窗体":::

    1. 输入所需信息：

       * **名称**
       * "电子邮件"
       * **最喜爱的书籍**
       * **Password**
       * **确认密码**

    1. 选择“ **注册**”。

       :::image type="content" source="~/assets/images/Teams-task-module/custom-text.png" alt-text="自定义窗体文本":::

       **自定义窗体** 发送确认消息。

       :::image type="content" source="~/assets/images/Teams-task-module/custom-on-sign-up.png" alt-text="注册":::

       聊天中将显示以下信息：

       :::image type="content" source="~/assets/images/Teams-task-module/adaptive-custom-chat.png" alt-text="聊天":::

    1. 从 **主图卡的任务模块调用** 中选择 **YouTube**，或者 **从自适应卡片中选择任务模块调用**。

       :::image type="content" source="~/assets/images/Teams-task-module/youtube_1.png" alt-text="YouTube":::

    1. 选择“ **播放**”。

       :::image type="content" source="~/assets/images/Teams-task-module/youtube-select_1.png" alt-text="YouTube 选择":::

       视频将播放。
- title: 完成挑战
  durationInMinutes: 1
  content: >
    你想出了这样的东西吗？

       :::image type="content" source="./assets/images/Teams-task-module/final_image.png" alt-text="任务模块":::
- content: 你已完成开始使用 Teams 任务模块应用的教程！
