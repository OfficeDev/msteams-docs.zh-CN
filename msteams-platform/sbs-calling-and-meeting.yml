### YamlMime:Tutorial
title: Teams通话和会议机器人
metadata:
  title: Teams呼叫和会议自动程序
  description: 在本教程中，你将学习如何在自动程序中为 Teams。
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: 注册通话机器人
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 99671564ef597944b946c44a40f830d7b4558321
  ms.sourcegitcommit: a36760750ff4f510c374a4c956be57f7c1b4a0db
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 03/20/2022
  ms.locfileid: "63674969"
items:
- durationInMinutes: 1
  content: "通话和会议机器人提供基本功能，例如创建呼叫、加入呼叫、转接或重定向呼叫、加入安排的会议，以及通过将云通信 API 与 API 集成来邀请Graph。\n\n机器人可以使用实时Teams、视频和屏幕共享与呼叫和会议进行交互。 借助 Microsoft Graph API 进行呼叫和联机会议，Teams应用现在可以使用语音和视频与用户交互，以增强体验。 这些 API 允许你添加以下新功能：\n\n* IVR (互动语音) \n* 呼叫控制\n* 访问实时音频和视频流，包括桌面应用共享\n\n创建自动程序，并指定一些附加信息和权限，以在 Graph 应用中使用这些Teams API。\n\n此分步指南可帮助你创建具有通话和会议功能的机器人。 本教程结束时，你可以实现以下输出：\n\n![最终输出](~/assets/images/calls-and-meetings/final-output.png)\n"
- title: 必备条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境：  \n\n* [Office 365租户](https://developer.microsoft.com/microsoft-365/dev-program)\n* [Ngrok](https://ngrok.com/) 或等效隧道解决方案\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [.NET Core SDK](https://dotnet.microsoft.com/download) 版本 3.1\n* Microsoft Teams帐户， (来宾帐户) \n* 通过[Windows PowerShell](/microsoftteams/teams-powershell-install)命令安装命令\n"
- title: 设置呼叫和会议机器人
  durationInMinutes: 5
  content: "使用应用门户中的应用注册注册Microsoft Azure应用与应用Microsoft 标识平台并调用 Microsoft Graph。 执行下列操作：\n\n1. 使用 ngrok 创建到 Web 服务器的终结点的隧道。\n1. 创建 Azure Bot 资源以向 Azure Bot 服务注册自动程序。\n1. 创建启用自动程序 SSO 身份验证的客户端密码。\n1. 为演示租户用户创建策略，以使用 PowerShell 创建联机会议。\n1. 为下游调用添加 API 权限。\n1. 在 Azure 帐户中创建自动程序通道注册。\n1. 添加Microsoft Teams将聊天机器人部署到 Teams 频道。\n1. 将消息终结点添加到您创建的 ngrok 隧道。\n\n**创建 ngrok 隧道：**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**在 Azure 中注册应用：**\n\n1. 使用你的 [个人 Microsoft 帐户登录到 Azure](https://portal.azure.com/) 门户。\n1. 选择\"**Azure Active Directory** 服务\"，然后从左侧窗格中选择\"应用注册\"，然后选择\"新建 **注册\"**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active Directory。\":::\n\n1. **将打开\"注册应用程序** \"页。 输入应用程序的注册信息。\n1. 输入 **向应用用户** 显示的有意义的应用程序名称。\n1. 在 **\"支持的帐户** 类型\"中，选择希望应用程序支持的帐户。\n1. 在\"重定向 **URI** (可选) \"字段中，选择应用 Web 或公共客户端 **(移动 & 桌面) 的类型**，然后输入应用程序的重定向 URI。\n\n    > [!NOTE]\n    > 对于 Web 应用程序，将基本 URI 提供为 `http://localhost:31544`。 对于公共客户端应用程序，请提供供 Azure AD返回令牌响应的 `myapp://auth`URI。\n\n1. 选择“**注册**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app.png\" alt-text=\"注册应用。\":::\n\n**创建客户端密码：**\n\n1. In **Overview** page of your bot， select **Essentials** and save the **Application client ID** (microsoft App ID) for future reference.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new.png\" alt-text=\"Microsoft 应用 ID。\":::\n\n1. 在 **\"管理**\"中， **&** 密码\"部分，然后选择\"客户端密码\" **，** 然后选择\" **新建客户端密码\"**。 将显示 **\"添加客户端密码\"** 窗口。  \n\n1. 输入 **\"说明** \"，然后选择\" **添加\"**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client.png\" alt-text=\"添加客户端密码。\":::\n\n1. 在\" **值\"** 列中， **选择\"复制到剪贴板** \"，并保存客户端密码 ID 供将来参考。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret.png\" alt-text=\"值。\":::\n\n**运行 PowerShell 脚本以创建策略：**\n\n1. 为演示租户用户创建一个策略，以使用下面的 PowerShell 脚本创建联机会议：\n\n    > [!NOTE]\n    > 以Windows PowerShell运行 PSI 并执行脚本。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell-script.png\" alt-text=\"PowerShell 脚本。\":::\n\n1. 将 `azure-client-id` 替换为自动程序 Microsoft **应用 ID** `object-id` 和用于登录 Teams (复制链接（如下图所示）的帐户的租户 **ID**，可在获取) 的链接中查找 Teams 帐户的租户 ID。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams链接。\":::\n\n1. `policy-description``azure-client-id`在 `PolicyName`PowerShell 脚本中添加 `object-id` 、、 和 。 当 PowerShell Teams时，使用你的帐户登录。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell.png\" alt-text=\"PowerShell。\":::\n\n1. 在 PowerShell 中运行以下命令以验证策略是否已成功创建。 将策略名称替换为定义的策略名称。\n\n    ```powershell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n**为下游调用添加 API 权限：**\n\n> [!NOTE]\n> 确保你的帐户可以授予 Microsoft 管理员同意。 添加权限后， `Grant admin consent for Microsoft` 选择了解同意状态。\n\n1. 在 **自动** 程序管理窗格中，选择 **API 权限**。\n1. 选择“**添加权限**”。 **将显示请求 API 权限** 窗口。\n1. 选择 **\"Microsoft API\"**，然后选择 **\"Microsoft Graph\"**。\n1. 选择 **\"应用程序权限\"** ，然后选择\"权限\"。\n1. 将以下Graph API 应用程序权限添加到 Azure 应用，并授予管理员同意。\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. 选择 **添加权限**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-api-permissions.png\" alt-text=\"添加 API 权限。\":::\n\n**在 Azure 帐户中创建自动程序通道注册：**\n\n1. 打开 [Azure 门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索 **框中搜索 Azure Bot** 。\n1. 选择 **\"Azure 自动程序\"**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot-homepage.png\" alt-text=\"Azure 自动程序卡。\":::\n\n1. 选择“**创建**”。\n1. 在\"自动程序句柄\"字段中 **输入自动程序句柄** 名称。\n1. 从下拉列表 **中选择** 你的订阅。\n1. 从 **下拉列表中选择** 资源组。\n\n    若要创建新的资源组，请选择\"新建\"，输入资源名称，选择\"确定\"，然后从\"新建资源组位置 **\"下拉列表中选择** 所需位置。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"创建 Azure Bot。\":::\n\n1. 选择 **\"应用类型\"** 作为 Microsoft 应用 **ID** **的多** 租户。\n\n    > [!NOTE]\n    > 在 `Creation type` \"Microsoft 应用 ID\" `Create new Microsoft App ID` 部分中，已选择创建新自动程序。 如果已注册 `Use existing app registration`自动程序，也可以选择 。 在字段中输入 Microsoft 应用 ID `Existing app id` ，在字段中输入 `Existing app password` 值。\n\n1. 选择 **\"使用现有应用注册**\"，然后输入在演示租户中注册的 Azure 应用的应用 **ID** 和应用密码。\n1. 然后“**审阅 + 创建**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create.png\" alt-text=\"多租户。\":::\n\n1. 如果验证通过，请选择\"创建 **\"**。\n\n   设置自动程序服务需要一些时间。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation.png\" alt-text=\"验证。\":::\n\n1. 选择“**转到资源**”。 自动程序和相关资源在资源组中列出。\n\n    现在，已创建 Azure 自动程序。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource.png\" alt-text=\"转到资源。\":::\n\n**若要添加Microsoft Teams通道：**\n\n1. 转到 **\"主页\"**。\n1. 打开\"最近使用的资源\"部分 **列出的自动** 程序。\n1. 选择 **左窗格中** 的\"频道\"，**然后选择\"Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> 从可用频道列表中。    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams.png\" alt-text=\"频道Teams。\":::\n\n1. 选中复选框以接受服务条款，然后选择\"同意 **\"**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/terms-of-service.png\" alt-text=\"服务条款。\":::\n\n1. 选择“**保存**”。\n1. 选择 **\"Microsoft Teams****\"，然后选择**\"Teams页面上的\"呼叫\"选项卡。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"配置Teams。\":::\n\n1. 选择 **\"启用呼叫**\"，然后使用 HTTPS ngrok URL (**Webhook**https://yourNgrok/api/callback)，然后在`/api/callback`末尾添加。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling.png\" alt-text=\"启用呼叫。\":::\n\n1. 选择“**保存**”。\n\n**添加消息终结点：**\n\n1. 转到自动 **程序** 主页，**然后从左** 窗格中选择 **设置配置\"**。\n1. 转到 ngrok。\n1. 将 HTTPS URL (https 复制到 io) 如下图所示：\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok.png\" alt-text=\"Ngrok。\":::\n\n1. 在 **消息终结点中**，添加 ngrok 中提供的 HTTPS URL，在 URL 末尾添加 **/api/messages**。\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint.png\" alt-text=\"消息终结点。\":::\n\n1. 选择“**应用**”。\n\n    你已成功在 Azure Bot 服务中设置自动程序，现在需要设置自动程序服务连接。\n"
- title: 更新和创建Teams应用包
  durationInMinutes: 1
  content: "配置自动程序示例，了解如何在 Microsoft Teams 中对对话机器人进行身份验证，Teams应用包并将其上载到组织。\n\n1. 更新 Visual Studio 中的 appsettings.json。\n1. 更新 Visual Studio manifest.json，并压缩到文件资源管理器中的 zip 文件。\n\n**更新用于调用自动程序的应用设置：**\n\n1. 转到存储库 https://github.com/OfficeDev/Microsoft-Teams-Samples.git。\n1. 选择 **\"** 代码\"，然后选择下拉列表。\n1. 选择 **\"下载 ZIP\"**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/repo-download.png\" alt-text=\"存储库下载。\":::\n\n1. 确保记下下载的存储库的路径。\n1. 在文件 **资源管理器中**，转到 Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharp >  >  >  文件夹。\n1. 在 **自动程序更新Visual Studio中打开 appsettings.json** 文件。\n\n    * 你可以从 `MicrosoftAppId` 自动程序的配置页面获取 。 是 `MicrosoftAppPassword` 之前保存的客户端密码 ID 的值。\n    * 可以从用于`Tenant ID`登录`UserId`帐户的帐户的链接获取 或 Teams。 按照映像中的路径获取 的链接 `tenant id`。\n    \n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams链接。\":::\n    \n    * 你可以从 `DisplayName` Microsoft 浏览器网站`UserId`[Graph 和](https://developer.microsoft.com/graph/graph-explorer) 。\n        * 使用帐户登录页面Teams`Users`在搜索框中的 URl 末尾添加，然后选择\"运行 **查询\"**。\n        * 将生成链接到帐户的显示名称和用户 ID。\n        * 选取任意三个帐户，并将其添加到 `DisplayName` 和 `UserId` appsettings.json 中。\n\n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer.png\" alt-text=\"Graph资源管理器&quot;。\":::\n\n    > [!NOTE]\n    > `Tenant ID`或 `UserId` Teams `DisplayName` `UserId` 帐户表示从何处发起呼叫，用户表示呼叫重定向到或转接对象。\n\n1. 将 `MicrosoftAppId`、`ClientId`、 `AppId` 替换为 **你的 (客户端) ID** 和 `MicrosoftAppPassword`、 `ClientSecret``AppSecret` **和 值。**\n1. 使用 `BotBaseUrl` URL 更新 `ngrok` 。\n1. 更新 `Tenant ID` 和 `UserId`。\n1. 更新 `DisplayName` 和 `UserId`。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings.png\" alt-text=\"Appsettings Json。\":::\n\n1. 选择“**保存**”。\n\n**更新清单：**\n\n1. 在文件 **资源管理器中**，转到 Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharpManifest >  >  >  >  文件夹。\n1. 打开 **Visual Studio 中的 manifest.json** 文件。\n1. 在 **manifest.json** 文件中，查找 **{id}、{BotId}** 并添加 Microsoft 应用 ID。\n1. 将 ngrok url 添加到 **validDomains** 中，https:// 并保存。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest.png\" alt-text=\"清单。\":::\n\n1. Zip the contents of the **Manifest** folder to create **manifest.zip**.\n\n    > [!NOTE]\n    > 中 `manifest.zip` 不应包含任何其他文件夹。 它在 zip `manifest json` 文件夹中应 `color` `outline` 包含源文件、图标和图标。\n    > Upload你的演示租户中为组织或你的 Teams 帐户创建清单，然后使用 Visual Studio 运行你的Visual Studio。\n\n1. 转到Teams。\n1. 若要上传 **manifest.zip**，请选择\"应用商店>管理应用\"**> Upload自定义应用\"**，然后从manifest.zip资源管理器中的存储库文件夹打开应用。\n1. 选择 **\"添加**\"以在 Teams 中安装呼叫Teams。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output.png\" alt-text=\"添加输出。\":::\n\n    在 Visual Studio 中调试后，你可以与Visual Studio。\n"
- title: 与呼叫和会议机器人的交互
  durationInMinutes: 2
  content: >
    机器人允许你访问频道或聊天中专用空间中的服务和内容。


    按照以下步骤使用自动程序：


    1. 在列表的左侧窗格中Teams省略号 "。然后从列表中选择你的应用。

    1. 机器人将发送带自适应卡片的欢迎文本，如下所示。

        :::image type="content" source="./assets/images/calls-and-meetings/bot-with-adaptive-card.png" alt-text="自动程序中的自适应卡片。":::

    1. 你可以让机器人创建呼叫。

        :::image type="content" source="./assets/images/calls-and-meetings/placed-call.png" alt-text="已拨打呼叫。":::

    1. 你可以让机器人转接呼叫。

        :::image type="content" source="./assets/images/calls-and-meetings/transfer-call.png" alt-text="转接呼叫。":::

    1. 你可以让机器人安排会议并邀请参与者。

        :::image type="content" source="./assets/images/calls-and-meetings/meeting.png" alt-text="会议机器人。":::
- title: 完成挑战
  durationInMinutes: 1
  content: >
    你提供类似这样的内容了吗？


    ![最终输出](~/assets/images/calls-and-meetings/final-output.png)
- content: 你已完成教程，开始使用机器人呼叫和会议应用进行Microsoft Teams。
