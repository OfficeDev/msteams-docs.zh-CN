### YamlMime:Tutorial
title: Teams 通话和会议机器人
metadata:
  title: 具有通话和会议的 Teams 机器人
  description: 通过此学习模块，了解如何在适用于 Teams 的机器人中设置通话和会议功能。
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: 注册通话机器人
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: b57e9744699c7318674f387451f17afc66c5667e
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818096"
items:
- durationInMinutes: 1
  content: >
    Microsoft Teams 通话和会议机器人提供基本功能，例如，创建呼叫、加入呼叫、转移或重定向呼叫、加入计划会议，以及通过集成云通信图形 API 邀请参与者。


    机器人可以使用实时语音、视频和屏幕共享与 Teams 通话和会议进行交互。 借助用于通话和在线会议的 Microsoft Graph API，Teams 应用可以使用语音和视频与用户交互，以增强其体验。 这些 API 允许添加以下新功能:


    * 使用交互式语音响应 (IVR) 。

    * 使用呼叫控件。

    * 提供对实时音频和视频流的访问，包括桌面和应用共享。


    创建机器人并指定用于在 Teams 应用中使用这些 Graph API 的其他信息和权限。


    本分步指南可帮助你设置 Teams 通话和会议机器人。 在本教程结束时，可以实现以下输出：


    :::image type="content" source="./assets/images/calls-and-meetings/final-output.png" alt-text="最终输出。":::
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境：\n\n | &nbsp; | 安装 | 用于使用... |\n | --- | --- | --- |\n | **Required** | &nbsp; | &nbsp; |\n | &nbsp; | [Microsoft 365 开发人员帐户](/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) | 具有安装应用的相应权限的 Teams 帐户的访问权限。 |\n | &nbsp; | [ngrok](https://ngrok.com/download) | teams 应用功能 (对话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，这不是必需的。 此包使用 npm `devDependencies`) 安装在项目目录 (中。 |\n | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负载之一：<br> • ASP.NET 和 Web 开发 <br> • .NET Core 跨平台开发 | 可以在 Visual Studio 2022 中安装企业版，并安装工作负载。 |   \n | &nbsp; | [.NET Core SDK 版本 3.1 (不是来宾帐户) ](https://dotnet.microsoft.com/en-us/download) | 用于本地调试和 Azure Functions 应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，则可以安装可移植版本。 |\n | &nbsp; | [Microsoft Teams 和 Teams 帐户](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams 可在一个位置通过聊天、会议、通话等应用与你合作的每个人进行协作。 |\n | &nbsp; | [Windows PowerShell](/microsoftteams/teams-powershell-install) | 通过执行所有命令进行安装。 |\n"
- title: 设置通话和会议机器人
  durationInMinutes: 5
  content: "在 Microsoft Azure 门户中使用应用注册注册应用程序，以便应用与Microsoft 标识平台集成并调用 Microsoft Graph API。 执行以下步骤：\n\n1. 创建指向 Web 服务器的终结点的 ngrok 隧道。\n1. 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n1. 创建启用单一登录 (SSO) 机器人身份验证的客户端密码。\n1. 为演示租户用户创建策略，以使用 PowerShell 创建联机会议。\n1. 为下游调用添加 API 权限。\n1. 在 Azure 帐户中创建机器人通道注册。\n1. 添加 Microsoft Teams 频道以将机器人部署到 Teams 频道。\n1. 将消息传递终结点添加到创建的 ngrok 隧道。\n\n**创建 ngrok 隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n```bash\nngrok http --host-header=rewrite 3978\n```\n\n**在 Azure 中注册应用**\n\n1. 使用个人 Microsoft 帐户转到 [Azure 门户](https://portal.azure.com/) 。\n1. 选择“Azure Active Directory”。\n\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active directory。\":::\n\n1. 在左窗格中，选择“ **应用注册**”。\n1. 选择“新注册”。\n\n   :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory_1.png\" alt-text=\"新建 Azure Active directory。\":::\n\n\n此时会显示 **“注册应用程序**”窗口。 输入应用程序的注册信息。\n\n  1. 在 **“名称”** 中，输入向用户显示的应用程序名称。\n\n  1. 在 **“支持的帐户类型**”中，选择希望应用程序支持的帐户。\n\n  1. 在 **“重定向 URI (可选)**”中，选择应用 **Web 或公共客户端 (移动和桌面)** 的类型，然后输入应用程序的重定向 URI。\n\n     > [!NOTE]\n     > 对于 Web 应用程序，请提供基 URI 作为 `http://localhost:31544`。 对于公共客户端应用程序，请提供 Azure AD 用于以 的形式 `myapp://auth`返回令牌响应的 URI。\n\n  1. 选择“**注册**”。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app_2.png\" alt-text=\"显示选择寄存器的屏幕截图。\" lightbox=\"./assets/images/calls-and-meetings/reg-app_1.png\":::\n\n**创建客户端密码**\n\n1. 在机器人的 **“概述** ”页中，选择“ **概要** ”，并将 **应用程序 (客户端) ID** (Microsoft App ID) 保存以供将来参考。\n\n   :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new_2.png\" alt-text=\"显示 Microsoft 应用 ID 的屏幕截图。\":::\n\n1. 在 **“管理**”中，选择“ **证书&机密**”。\n1. 选择“ **客户端密码** > **”“新建客户端密码**”。\n\n此时会显示 **“添加客户端密码**”窗口。\n\n  1. 输入客户端密码 **的“说明** ”。\n  1. 选择“**添加**”。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client_2.png\" alt-text=\"显示正在添加的客户端密码的屏幕截图。\"lightbox=\"./assets/images/calls-and-meetings/add-client_2.png\":::\n\n  1. 选择“ **复制到剪贴板** ”以复制 **“值** 详细信息”。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret_2.png\" alt-text=\"显示要复制到剪贴板的值的屏幕。\":::\n\n      > [!TIP]\n      > 保存客户端密码 **值** 或应用密码以供将来参考。\n\n**运行 PowerShell 脚本以创建策略**\n\n1. 使用以下 PowerShell 脚本为演示租户用户创建策略以创建联机会议：\n\n    > [!NOTE]\n    > 以管理员身份运行 Windows PowerShell PSI 并执行脚本。\n\n    ```PowerShell\n\n    New-CsApplicationAccessPolicy -Identity \"<<policy-identity/policy-name>>\" -AppIds \"<<azure-client-id>>\" -Description \"Policy-description\"\n    Grant-CsApplicationAccessPolicy -PolicyName \"<<policy-identity/policy-name>>\" -Identity \"<<object-id-of-the-user-to-whom-policy-need-to-be-granted>>\"\n\n    ```\n\n1. 将 替换为 **Microsoft 应用 ID**，并将 `object-id` 替换为`azure-client-id`用于登录 Teams 的帐户的 **租户 ID**。 复制链接，如下图所示，可以在获取的链接中找到 Teams 帐户的租户 ID：\n\n    1. 选择 **“Teams**”。\n\n    1. 选择省略号 ●●。。\n\n    1. 选择“**获取团队链接**”。\n   \n       :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-final.png\" alt-text=\"屏幕截图显示替换Microsoft-App ID。\":::\n   \n1. 在 PowerShell 脚本中添加 `PolicyName`、 `azure-client-id`、 `policy-description`和 `object-id` 。\n1. 在 PowerShell 提示时使用 Teams 帐户登录。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell_1.png\" alt-text=\"显示 PowerShell 的屏幕截图。\":::\n\n1. 在 PowerShell 中运行以下命令，验证是否已成功创建策略。 将策略名称替换为定义的策略名称。\n\n \n    ```PowerShell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n    > [!NOTE]\n    > 确保未在系统中禁用正在运行的脚本。 有关详细信息，请参阅 [执行策略](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.2)。\n\n**为下游调用添加 API 权限**\n\n> [!NOTE]\n> 确保你的帐户可以向 Microsoft 授予管理员同意。 添加权限后，选择 以了解 `Grant admin consent for Microsoft` 许可的状态。\n\n1. 在机器人的“ **管理** ”窗格中，选择“ **API 权限**”。\n1. 选择“**添加权限**”。 此时会显示 **“请求 API 权限**”窗口。\n1. 选择 **“Microsoft API** > **Microsoft Graph**”。\n1. 选择“**应用程序权限**”。\n1. 选择权限，将以下 Graph API 应用程序权限添加到 Azure 应用并授予管理员同意：\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. 选择 **添加权限**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/api-permissions_1.png\" alt-text=\"显示添加 API 权限的屏幕截图。\" lightbox=\"./assets/images/calls-and-meetings/api-permissions_1.png\":::\n\n**在 Azure 帐户中创建机器人通道注册**\n\n1. 转到“[Azure 门户](https://portal.azure.com/)”。\n1. 选择“**创建资源**”。\n1. 在搜索框中搜索 **Azure 机器人** 。\n1. 选择“ **Azure 机器人**”。\n1. 选择“**创建**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot_1.png\" alt-text=\"显示 Azure 机器人主页的屏幕截图。\":::\n  \n   此时会显示 **“创建 Azure 机器人**”窗口。\n\n1. 在机器人句柄字段中输入 **机器人句柄** 名称。\n1. 从下拉列表中选择 **“订阅** ”和“ **资源组** ”。\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"显示创建 Azure 机器人的屏幕截图。\":::\n  \n   还可以创建新的资源组。 选择“ **新建** >输入资源名称>选择 **”确定**”。\n\n1. 如果已创建新资源组，请从“ **新建资源组位置** ”下拉列表中选择所需位置。\n\n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"显示新资源组位置的屏幕截图。\":::\n\n1. 选择 **“应用类型** ”作为 **“多租户**”。\n\n    > [!NOTE]\n    > 在 `Creation type` Microsoft 应用 ID 部分中， `Create new Microsoft App ID` 已选择 创建新的机器人。 如果已注册机器人，还可以选择 `Use existing app registration`。 在 `Existing app ID` 字段中输入 Microsoft 应用 ID，并在 `Existing app password` 字段中输入值。\n\n1. 选择“ **使用现有应用注册** ”，并输入在演示租户中注册的 Azure 应用的应用 **ID** 。\n1. 然后“**审阅 + 创建**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create_1.png\" alt-text=\"显示选择多租户的屏幕截图。\":::\n\n1. 如果已通过验证，请选择“ **创建**”。\n\n   预配机器人服务需要一些时间。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation_1.png\" alt-text=\"显示验证通过的屏幕截图。\":::\n\n1. 选择“**转到资源**”。 机器人和相关资源在资源组中列出。\n\n    现已创建 Azure 机器人。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource_1.png\" alt-text=\"显示转到资源的导航的屏幕截图。\":::\n\n**添加 Microsoft Teams 频道**\n\n1. 转到“**主页**”。\n1. 从 **“最近使用的资源**”中选择机器人。\n1. 在左窗格中选择“ **频道** ”。\n1. 选择 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams_1.png\" alt-text=\"显示频道 Teams 的屏幕截图。\":::\n\n1. 选中复选框以接受 **服务条款**。\n1. 选择“ **同意**”。\n\n    :::image type=\"content\" source=\"~/assets/images/calls-and-meetings/terms.png\" alt-text=\"服务条款\":::\n\n1. 选择“**应用**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-file-upload-bot/apply-teams_1.png\" alt-text=\"microsoft teams\":::\n\n1. 选择 **“Microsoft Teams** ”，然后在 Teams 频道页上选择“ **通话** ”选项卡。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"配置 Teams。\":::\n\n1. 选择“ **启用调用”**，然后使用 HTTPS ngrok URL 更新 **Webhook** (https://yourngrok/api/callback) 并在末尾添加 `/api/callback` 。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling_1.png\" alt-text=\"启用调用。\":::\n\n1. 选择“**应用**”。\n\n**添加消息传送终结点**\n\n1. 转到 ngrok。\n1. 将 HTTPS URL (https 复制到 io) ，如下图所示：\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok_1.png\" alt-text=\"显示 ngrok 窗口的屏幕截图。\":::\n\n1. **转到机器人** 的主页。\n1. 在左窗格中的 **“设置”** 下选择 **“配置**”。\n1. 在 **消息终结点** 中，从 ngrok 添加 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint_1.png\" alt-text=\"显示消息传送终结点的屏幕截图。\":::\n\n1. 选择“**应用**”。\n\n    已成功在 Azure 机器人服务中设置机器人，需要设置机器人服务连接。\n"
- title: 更新和创建 Teams 应用包
  durationInMinutes: 1
  content: "配置机器人示例，了解如何在 Microsoft Teams 中对对话机器人进行身份验证并创建 Teams 应用包，并将其上传到组织。\n\n1. 在 Visual Studio 中更新 appsettings.json。\n1. 在 Visual Studio 中更新 manifest.json 并将其压缩为 ფაილთა მნახველი 中的 zip 文件。\n\n**更新调用机器人的应用设置**\n\n1. 转到存储库 https://github.com/OfficeDev/Microsoft-Teams-Samples.git。\n1. 选择“ **代码** ”，然后选择下拉列表。\n1. 选择 **“下载 ZIP**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/git_1.png\" alt-text=\"显示存储库下载的屏幕截图。\":::\n\n    > [!NOTE]\n    > 确保记下下载的存储库的路径。\n\n1. 在 **ფაილთა მნახველი**，转到 **Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > **csharp** 文件夹。\n1. 在 Visual Studio 中打开 **appsettings.json** 文件并更新机器人的配置。\n\n    * 可以从机器人的配置页获取 `MicrosoftAppId` 。 `MicrosoftAppPassword`是之前保存的客户端机密 ID 的值。\n    * 可以从用于登录 Teams 的帐户的链接获取 `tenantId` 或 `UserId` 。 按照图像中的路径获取 的链接 `tenantId`：\n      \n       1. 选择 **“Teams**”。\n\n       1. 选择省略号 ●●●。\n\n       1. 选择“**获取团队链接**”。\n\n     :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-final.png\" alt-text=\"显示 Teams 链接的屏幕截图。\":::\n    \n    * 可以从 [Microsoft Graph 资源管理器](https://developer.microsoft.com/graph/graph-explorer)站点获取 `displayName` 和`id`：\n\n        * 使用 Teams 租户帐户登录到页面。\n\n        * 在搜索框中的 URl 末尾添加 `Users` 。\n\n        * 选择 **运行查询**。\n        \n          :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer_1.png\" alt-text=\"Graph 资源管理器。\":::\n\n\n        * 将生成链接到帐户的显示名称和用户 ID。\n\n        * 选择任意三个帐户，并将其添加到 `DisplayName` appsettings.json 中的 和 `UserId` 中。\n   \n          :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer_2.png\" alt-text=\"Graph 资源管理器。\" lightbox=\"./assets/images/calls-and-meetings/graph-explorer_2.png\":::\n\n   \n        > [!NOTE]\n        > `TenantId`或 `UserId` Teams 帐户表示要从何处发起呼叫，以及`DisplayName``UserId`表示要重定向或转移呼叫的用户。\n\n1. 将 `MicrosoftAppId`、 `ClientId``AppId` 替换为 **Application (客户端) ID** 和 `MicrosoftAppPassword`、 `ClientSecret`和 `AppSecret` **值**。\n1. 将 替换为 `BotBaseUrl` `ngrok` URL。\n1. 替换 `TenantId` 和 `UserId`。\n1. 替换 `DisplayName` 和 `Id`。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings_1.png\" alt-text=\"显示 Appsettings Json 的屏幕截图。\":::\n\n1. 选择“**保存**”。\n\n**更新清单**\n\n1. 在 **ფაილთა მნახველი**，转到 **Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > **csharp** > **Manifest** 文件夹。\n1. 打开 Visual Studio 中的 `manifest.json` 文件。\n1. 在 文件中 `manifest.json` ，将 **{id}、{BotId}** 替换为你的 Microsoft 应用 ID。\n1. 在 **validDomains** 中添加 ngrok url，不包括 https://。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest_1.png\" alt-text=\"显示清单的屏幕截图。\" lightbox= \"./assets/images/calls-and-meetings/manifest_1.png\" :::\n\n1. 压缩 **清单** 文件夹的内容以创建 `manifest.zip`。\n\n    > [!NOTE]\n    > 中 `manifest.zip` 不得包含任何额外的文件夹。 它必须在 zip 文件夹中具有 `manifest json` 源文件、 `color` 图标和 `outline` 图标。\n    > 在组织的演示租户或 Teams 帐户中上传清单，并在 Visual Studio 中运行解决方案。\n\n1. 转到 Teams。\n1. 若要上传 `manifest.zip`，请选择“ **应用>管理应用>上传应用>上传自定义应用**。\n\n   :::image type=\"content\" source=\"./assets/images/calls-and-meetings/upload.png\" alt-text=\"显示选择添加输出的屏幕截图。\":::\n\n1. 从 ფაილთა მნახველი 中的存储库文件夹打开`manifest.zip`。\n1. 选择“ **添加** ”，在 Teams 中安装呼叫机器人。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output_1.png\" alt-text=\"显示选择添加输出的屏幕截图。\":::\n\n    在 Visual Studio 中调试后，可以与此机器人交互。\n"
- title: 与呼叫和会议机器人交互
  durationInMinutes: 2
  content: "机器人允许你访问频道内或聊天中专用空间中的服务和内容。\n\n执行以下步骤以使用机器人：\n\n1. 在 Teams 的左窗格中，选择省略号 ●●● 并从列表中选择你的应用。\n1. 机器人使用自适应卡片发送欢迎文本。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/bot-with-adaptive-card.png\" alt-text=\"机器人中的自适应卡片。\":::\n\n1. 选择“ **创建呼叫**”。 \n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/placed-call.png\" alt-text=\"显示已发出呼叫的屏幕截图。\":::\n\n1. 选择“ **转接呼叫**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/transfer-call.png\" alt-text=\"屏幕截图显示了转接呼叫。\":::\n\n1. 可以要求机器人安排会议并邀请参与者。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/meeting.png\" alt-text=\"显示会议机器人的屏幕截图。\":::\n"
- title: 完成挑战
  durationInMinutes: 1
  content: >
    你想出了这样的输出吗？


    :::image type="content" source="./assets/images/calls-and-meetings/final-output.png" alt-text="最终输出。":::
- content: 你已完成本教程，开始使用适用于 Microsoft Teams 的机器人呼叫和会议应用。
