### YamlMime:Tutorial
title: Teams呼叫和会议机器人
metadata:
  title: 使用呼叫和会议Teams机器人
  description: 本教程介绍如何在机器人中为Teams设置呼叫和会议。
  audience: Developer
  level: Beginner
  ms.date: 02/08/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/calls-and-meetings/registering-calling-bot.md
  nextTutorialTitle: 注册通话机器人
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 1910a5472711528f48c073c4c4a1bbe20b892c6b
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64736899"
items:
- durationInMinutes: 1
  content: "呼叫和会议机器人提供基本功能，例如创建呼叫、加入呼叫、传输或重定向呼叫、加入计划的会议以及通过集成云通信 API 图形 API邀请参与者。\n\n机器人可以使用实时语音、视频和屏幕共享与Teams呼叫和会议交互。 使用 Microsoft Graph API 进行通话和联机会议，Teams应用现在可以使用语音和视频与用户进行交互，以增强体验。 使用这些 API 可以添加以下新功能：\n\n* 交互式语音响应 (IVR) \n* 呼叫控制\n* 访问实时音频和视频流，包括桌面和应用共享\n\n创建机器人，并指定一些其他信息和权限，以便在Teams应用中使用这些Graph API。\n\n本分步指南可帮助你创建具有通话和会议功能的机器人。 本教程结束时，可以实现以下输出：\n\n![最终输出](~/assets/images/calls-and-meetings/final-output.png)\n"
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境：  \n\n* [Office 365租户](https://developer.microsoft.com/microsoft-365/dev-program)\n* [Ngrok](https://ngrok.com/) 或等效隧道解决方案\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)\n* [.NET Core SDK](https://dotnet.microsoft.com/download) 版本 3.1\n* 使用帐户Microsoft Teams (不是来宾帐户) \n* 通过执行所有命令安装[Windows PowerShell](/microsoftteams/teams-powershell-install)\n"
- title: 设置呼叫和会议机器人
  durationInMinutes: 5
  content: "在Microsoft Azure门户中使用应用注册注册应用程序，使应用与Microsoft 标识平台集成并调用 Microsoft Graph。 执行以下操作：\n\n1. 使用 ngrok 创建到 Web 服务器终结点的隧道。\n1. 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n1. 创建支持机器人 SSO 身份验证的客户端机密。\n1. 为演示租户用户创建策略，以便使用 PowerShell 创建联机会议。\n1. 为下游调用添加 API 权限。\n1. 在 Azure 帐户中创建机器人通道注册。\n1. 添加Microsoft Teams通道以将机器人部署到Teams通道。\n1. 将消息传送终结点添加到创建的 ngrok 隧道。\n\n**创建 ngrok 隧道：**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**在 Azure 中注册应用：**\n\n1. 使用个人 Microsoft 帐户登录到[Azure 门户](https://portal.azure.com/)。\n1. 选择 **Azure Active Directory** 服务，然后从左窗格中选择 **应用注册**，然后选择 **“新建注册**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-active-directory.png\" alt-text=\"Azure Active Directory。\":::\n\n1. **“注册应用程序** ”页随即打开。 输入应用程序的注册信息。\n1. 输入向应用用户显示的有意义的应用程序 **名称** 。\n1. 在 **支持的帐户类型** 中，选择希望应用程序支持的帐户。\n1. 在 **“重定向 URI** ” (可选) 字段中，选择 **移动&桌面)  (应用 Web 或公共客户** 端的类型，然后输入应用程序的重定向 URI。\n\n    > [!NOTE]\n    > 对于 Web 应用程序，请提供基本 URI 作为 `http://localhost:31544`。 对于公共客户端应用程序，请提供Azure AD用于返回令牌响应的 `myapp://auth`URI。\n\n1. 选择“**注册**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/reg-app.png\" alt-text=\"注册应用。\":::\n\n**若要创建客户端机密，请执行以下操作：**\n\n1. 在机器人的 **“概述** ”页中，选择 **“概要** ”并保存应用程序 **客户端 ID** (Microsoft 应用 ID) 供将来参考。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/microsoft-app-id-new.png\" alt-text=\"Microsoft 应用 ID。\":::\n\n1. 在 **“管理****”中，选择“证书&机密**”部分，然后选择 **“客户端机密**”，然后选择 **“新建客户端机密**”。 将显示 **“添加客户端机密** ”窗口。  \n\n1. 输入 **说明** 并选择 **“添加**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-client.png\" alt-text=\"添加客户端机密。\":::\n\n1. 在 **“值** ”列中，选择 **“复制到剪贴板** ”，并保存客户端机密 ID 以供将来引用。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/client-secret.png\" alt-text=\"价值。\":::\n\n**运行 PowerShell 脚本以创建策略：**\n\n1. 使用以下 PowerShell 脚本为演示租户用户创建用于创建联机会议的策略：\n\n    > [!NOTE]\n    > 以管理员身份运行 Windows PowerShell PSI 并执行脚本。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell-script.png\" alt-text=\"PowerShell 脚本。\":::\n\n1. 替换`azure-client-id`为机器人的 **Microsoft 应用 ID** 和`object-id`用于登录到Teams (复制链接的帐户的 **租户 ID**，如下图所示，可以在获取) 的链接中找到Teams帐户的租户 ID。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams链接。\":::\n\n1. `azure-client-id``policy-description`在 PowerShell 脚本中添加`PolicyName`、添加和`object-id`添加。 PowerShell 提示时，使用Teams帐户登录。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/powershell.png\" alt-text=\"PowerShell。\":::\n\n1. 在 PowerShell 中运行以下命令，验证策略是否已成功创建。 将策略名称替换为定义的策略名称。\n\n    ```powershell\n    Get-CsApplicationAccessPolicy -Identity “<<policy-identity/policy-name>>”\n    ```\n\n**为下游调用添加 API 权限：**\n\n> [!NOTE]\n> 确保你的帐户可以为 Microsoft 授予管理员许可。 添加权限后，选择 `Grant admin consent for Microsoft` 了解同意状态。\n\n1. 在机器人的 **“管理** ”窗格中，选择 **API 权限**。\n1. 选择“**添加权限**”。 **将显示“请求 API 权限** ”窗口。\n1. 选择 **Microsoft API**，然后选择 **Microsoft Graph**。\n1. 选择 **应用程序权限** ，然后选择权限。\n1. 将以下图形 API应用程序权限添加到Azure 应用并授予管理员许可。\n    * `Calls.AccessMedia.All`\n    * `Calls.Initiate.All`\n    * `Calls.InitiateGroupCall.All`\n    * `Calls.JoinGroupCall.All`\n    * `Calls.JoinGroupCallAsGuest.All`\n    * `OnlineMeetings.ReadWrite.All`\n1. 选择 **添加权限**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/add-api-permissions.png\" alt-text=\"添加 API 权限。\":::\n\n**在 Azure 帐户中创建机器人通道注册：**\n\n1. 打开[Azure 门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索框中搜索 **Azure 机器人** 。\n1. 选择 **Azure 机器人**。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/azure-bot-homepage.png\" alt-text=\"Azure 机器人卡。\":::\n\n1. 选择“**创建**”。\n1. 在机器人句柄字段中输入 **机器人句柄** 名称。\n1. 从下拉列表中选择 **订阅** 。\n1. 从下拉列表中选择 **资源组** 。\n\n    若要创建新的资源组，请选择 **“新建**”、“输入资源名称”、“选择 **确定**”，然后从 **“新建资源组位置”下** 拉列表中选择所需的位置。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/create-azure-bot.png\" alt-text=\"创建 Azure 机器人。\":::\n\n1. 选择 **应用类型** 作为 **Microsoft 应用 ID** 的 **多租户**。\n\n    > [!NOTE]\n    > 在 `Creation type` Microsoft 应用 ID 部分中， `Create new Microsoft App ID` 已选择创建新机器人。 如果已注册机器人，也可以选择 `Use existing app registration`。 在字段中 `Existing app id` 输入 Microsoft 应用 ID，并在字段中 `Existing app password` 输入值。\n\n1. 选择 **“使用现有应用注册** ”，并输入在演示租户中注册的 azure 应用的 **应用 ID** 和 **应用机密** 。\n1. 然后“**审阅 + 创建**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/review-create.png\" alt-text=\"多租户。\":::\n\n1. 如果验证通过，请选择 **“创建**”。\n\n   预配机器人服务需要一些时间。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/validation.png\" alt-text=\"验证。\":::\n\n1. 选择“**转到资源**”。 机器人和相关资源在资源组中列出。\n\n    现在已创建 Azure 机器人。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/go-to-resource.png\" alt-text=\"转到资源。\":::\n\n**若要添加Microsoft Teams通道：**\n\n1. **回家吧**\n1. 打开“ **最近资源** ”部分中列出的机器人。\n1. 在左窗格中选择 **“通道**”，然后选择 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/> 从可用通道列表。    \n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/channels-teams.png\" alt-text=\"通道Teams。\":::\n\n1. 选中该复选框以接受服务条款，然后选择 **“同意**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/terms-of-service.png\" alt-text=\"服务条款。\":::\n\n1. 选择“保存”。\n1. 选择 **Microsoft Teams**，然后在Teams频道页面上选择“**呼叫**”选项卡。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/configure-teams.png\" alt-text=\"配置Teams。\":::\n\n1. 选择 **“启用调用**”，然后使用 HTTPS ngrok URL (https://yourNgrok/api/callback)更新 **Webhook**，并在末尾添加`/api/callback`。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/enable-calling.png\" alt-text=\"启用呼叫。\":::\n\n1. 选择“保存”。\n\n**若要添加消息传送终结点，请执行以下操作：**\n\n1. 转到机器人的 **主** 页，然后从左窗格的 **设置** 下选择 **“配置**”。\n1. 转到 ngrok。\n1. 将 HTTPS URL (https 复制到 io) ，如下图所示：\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/ngrok.png\" alt-text=\"Ngrok.\":::\n\n1. 在 **消息传送终结点** 中，添加 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n    \n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/messaging-endpoint.png\" alt-text=\"消息传送终结点。\":::\n\n1. 选择“**应用**”。\n\n    你已在 Azure 机器人服务中成功设置了机器人，现在需要设置机器人服务连接。\n"
- title: 更新和创建Teams应用包
  durationInMinutes: 1
  content: "配置机器人示例以了解如何在Microsoft Teams中对聊天机器人进行身份验证，并创建Teams应用包并将其上传到组织。\n\n1. 更新 Visual Studio 中的 appsettings.json。\n1. 更新 Visual Studio 中的 manifest.json，并将其压缩到文件资源管理器中的 zip 文件。\n\n**更新用于调用机器人的应用设置：**\n\n1. 转到存储库 https://github.com/OfficeDev/Microsoft-Teams-Samples.git。\n1. 选择 **“代码”** 并选择下拉列表。\n1. 选择 **“下载 ZIP**”。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/repo-download.png\" alt-text=\"存储库下载。\":::\n\n1. 请确保记下下载的存储库的路径。\n1. 在 **文件资源管理器** 中，转到 Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharp >  >  >  文件夹。\n1. 在Visual Studio中打开 **appsettings.json** 文件，并更新机器人的配置。\n\n    * 可以从机器人的配置页获取 `MicrosoftAppId` 该配置页。 是 `MicrosoftAppPassword` 之前保存的客户端机密 ID 的值。\n    * 可以获取`Tenant ID`或`UserId`从用于登录到Teams的帐户的链接。 按照图像中的路径获取链接 `tenant id`。\n    \n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/teams-link-new.png\" alt-text=\"Teams链接。\":::\n    \n    * 可以从 [Microsoft Graph资源管理器](https://developer.microsoft.com/graph/graph-explorer)站点获取`DisplayName`和`UserId`获取资源管理器站点。\n        * 使用Teams帐户登录到页面，并在搜索框的 URL 末尾添加`Users`并选择 **“运行查询**”。\n        * 将生成链接到帐户的显示名称和用户 ID。\n        * 选取任意三个帐户并将其添加到 `DisplayName` appsettings.json 中。`UserId`\n\n        :::image type=\"content\" source=\"./assets/images/calls-and-meetings/graph-explorer.png\" alt-text=\"Graph资源管理器。\":::\n\n    > [!NOTE]\n    > `Tenant ID`或`UserId`Teams帐户表示要从何处发起呼叫，`DisplayName``UserId`用户表示要重定向或转移呼叫。\n\n1. 将应用程序 **(客户端) ID** 和`MicrosoftAppPassword``ClientSecret``AppSecret`值替换`MicrosoftAppId`为 **你的值**。 `ClientId``AppId`\n1. 使用 URL `ngrok` 进行更新`BotBaseUrl`。\n1. 更新 `Tenant ID` 和 `UserId`.\n1. 更新 `DisplayName` 和 `UserId`.\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/appsettings.png\" alt-text=\"Appsettings Json。\":::\n\n1. 选择“保存”。\n\n**若要更新清单，**\n\n1. 在 **文件资源管理器** 中，转到 Microsoft-Teams-Samples-mainsamplesbot-calling-meetingcsharpManifest >  >  >  >  文件夹。\n1. 打开 Visual Studio 中的 `manifest.json` 文件。\n1. 在文件中 `manifest.json` ，找到 **{id}、{BotId}** 并添加 Microsoft 应用 ID。\n1. 在 **validDomains** 中添加 ngrok url（不包括 https:// 并保存）。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/manifest.png\" alt-text=\"清单。\":::\n\n1. 压缩要创建`manifest.zip`的 **清单** 文件夹的内容。\n\n    > [!NOTE]\n    > 不应 `manifest.zip` 在其中包含任何其他文件夹。 它应在 zip 文件夹中包含 `manifest json` 源文件、 `color` 图标和 `outline` 图标。\n    > Upload组织或Teams帐户的演示租户中的清单，并在Visual Studio中运行解决方案。\n\n1. 转到Teams。\n1. 若要上传`manifest.zip`，**请选择“存储>管理自定义应用> Upload应用**，然后`manifest.zip`从文件资源管理器中的存储库文件夹打开。\n1. 选择 **“添加**”以在Teams中安装呼叫机器人。\n\n    :::image type=\"content\" source=\"./assets/images/calls-and-meetings/output.png\" alt-text=\"添加输出。\":::\n\n    调试Visual Studio后，可以与此机器人交互。\n"
- title: 与呼叫和会议机器人交互
  durationInMinutes: 2
  content: >
    机器人允许你访问频道内或聊天中的专用空间中的服务和内容。


    按照步骤使用机器人：


    1. 在Teams的左窗格中，选择省略号 “}”，然后从列表中选择应用。

    1. 机器人将使用自适应卡片发送欢迎文本，如下所示。

        :::image type="content" source="./assets/images/calls-and-meetings/bot-with-adaptive-card.png" alt-text="机器人中的自适应卡片。":::

    1. 可以要求机器人创建呼叫。

        :::image type="content" source="./assets/images/calls-and-meetings/placed-call.png" alt-text="放置呼叫。":::

    1. 可以要求机器人转移呼叫。

        :::image type="content" source="./assets/images/calls-and-meetings/transfer-call.png" alt-text="传输呼叫。":::

    1. 可以要求机器人安排会议并邀请参与者。

        :::image type="content" source="./assets/images/calls-and-meetings/meeting.png" alt-text="会议机器人。":::
- title: 完成质询
  durationInMinutes: 1
  content: >
    你想出了这样的事吗？


    ![最终输出](~/assets/images/calls-and-meetings/final-output.png)
- content: 你已完成本教程，以开始使用机器人呼叫和会议应用Microsoft Teams。
