### YamlMime:Tutorial
title: 使用 Node.js 生成第一个应用
metadata:
  title: Hello WorldNode.js
  description: 在本教程中，你将通过设置新项目、生成和部署选项卡、机器人和消息扩展应用，了解如何使用Node.js生成Hello World应用。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 返回入门概述
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 6e0f04ccdd716f43303442e9acae038892cf0af3
  ms.sourcegitcommit: c398dfdae9ed96f12e1401ac7c8d0228ff9c0a2b
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 06/30/2022
  ms.locfileid: "66557972"
items:
- durationInMinutes: 1
  content: >
    通过使用选项卡、机器人和消息扩展功能生成第一个应用来启动 Microsoft Teams 应用开发。


    > 此应用将具有所有功能，每个功能都有自己的 UI 和 UX：


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="显示此应用有三个功能的示意图。":::


    在本教程中，你将了解：


    - 如何使用命令行工具设置新项目。

    - 如何生成具有不同功能的三个应用（选项卡、机器人和消息扩展）。

    - 如何从开发人员门户部署应用。
- title: 先决条件
  durationInMinutes: 1
  content: "\n下面是生成和部署 Teams 应用时需要安装的工具列表。\n\n| &nbsp; | 安装 | 用于使用... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js和 NPM](https://nodejs.org/) | 后端 JavaScript 运行时环境。 使用最新的 v16 LTS 版本。|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams 应用功能 (会话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，不需要这样做。 此包安装在项目目录中， (使用 npm `devDependencies`) 。 |\n| &nbsp; | [微软&nbsp;边缘](https://www.microsoft.com/edge) (建议) 或 [Google Chrome](https://www.google.com/chrome/) | 包含开发人员工具的浏览器。 |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript、TypeScript 或 SharePoint 框架 (SPFx) 生成环境。 使用版本 1.55 或更高版本。 |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git 用于从 GitHub 使用示例Node.js应用存储库。 |\n| &nbsp; |  [吞掉](https://gulpjs.com/docs/en/getting-started/quick-start) | 开源 JavaScript 工具包。 安装版本 4.0.0 或更高版本。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | 通过聊天、会议、通话等应用与每一位同事进行协作的 Microsoft Teams - 一个地方完成所有操作。 | \n| **可选** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) 和 [Microsoft Azure CLI](/cli/azure/install-azure-cli) | 用于访问存储数据或在 Azure 中为 Teams 应用部署基于云的后端的 Azure 工具。 |\n| &nbsp; | [React适用于 Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) 或 [React Microsoft&nbsp;Edge 开发人员工具的开发人员工具](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | 使用 JavaScript 进行选项卡开发的浏览器工具。 |\n| &nbsp; | [Microsoft Graph 浏览器](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer 是一种基于浏览器的工具，可用于从 Microsoft Graph 数据运行查询。 |\n| &nbsp; | [Teams 开发人员门户](https://dev.teams.microsoft.com/) | 基于 Web 的门户，用于配置、管理和分发 Teams 应用，包括组织或 Teams 应用商店。 |\n| &nbsp; | **Visual Studio Code扩展** | &nbsp; |\n| &nbsp; | [Azure Functions Core Tools](/azure/azure-functions/functions-run-local) | 本地调试运行期间本地的后端组件，包括在 Azure 中运行服务时所需的身份验证帮助程序。 它使用 npm `devDependencies`)  (安装在项目目录中。 |\n| &nbsp; | [.NET SDK](/dotnet/core/install/) | 用于本地调试和Azure Functions应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，则可以安装可移植版本。 |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>验证已安装工具的版本号\n\n使用以下命令验证工具的已安装版本是否已根据需要。\n\n> [!NOTE]\n> 使用平台上最舒适的终端窗口。 这些示例使用 Git Bash (包括在 Git 安装) 中，但这些脚本将在大多数平台上运行。\n\n验证安装的工具的版本号：\n\n1. 打开终端窗口。 \n2. 运行以下命令以验证计算机上安装的 `git` 版本：\n\n    ```bash\n    $ git --version\n    ```\n\n    输出示例： `git version 2.19.0.windows.1`\n    \n3. 运行以下命令来验证 `node.js` 版本：\n    \n    ```bash\n    $ node -v\n    ```\n\n    输出示例： `v8.9.3`\n\n4. 验证以下版本号 `npm`：\n\n    ```bash\n    $ npm -v\n    ```\n\n    输出示例： `5.5.1`\n\n5. 验证以下版本号 `gulp`：\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    输出示例：  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. 运行以下命令来验证Visual Studio Code的版本号：\n\n    ```bash\n    code --version\n    ```\n\n    输出示例：  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\n可以使用不同版本的这些应用程序，没有任何问题。\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>设置 Teams 开发租户\n\n**租户** 类似于 Teams 中组织的空间或容器，可在其中聊天、共享文件和运行会议。\n此空间也是旁加载和测试应用的位置。 \n\n我们来验证是否已准备好使用租户进行开发。\n\n### <a name=\"enable-sideloading-option\"></a>启用旁加载选项\n\n创建应用后，必须在 Teams 中加载应用，而无需分发它。 此过程称为“旁加载”。 登录到 Microsoft 365 帐户以查看此选项。\n  \n> [!NOTE]\n> 在 Teams 本地环境中预览和测试应用需要旁加载。 如果未启用，则无法在本地 Teams 中预览和测试应用。\n\n是否已拥有租户，是否具有管理员访问权限？ 我们来检查你是否真的这样做了！\n\n验证是否可以在 Teams 中旁加载应用：\n\n1. 在 Teams 客户端中，选择 **“应用商店** ”图标。\n1. 选择“**管理应用**”。\n1. 查找 **用于上传自定义应用的** 选项。 如果看到此选项，则会启用旁加载应用。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"此图显示了在 Teams 中上传自定义应用的选项。\":::\n\n    > [!NOTE]\n    > 如果 Teams 未显示上传自定义应用的选项，请与 Teams 管理员联系。\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>创建免费的 Teams 开发人员租户\n\n如果没有 Teams 开发人员帐户，可以免费获取。 加入 Microsoft 365 开发人员计划！\n\n1. 转到 [Microsoft 365 开发人员计划](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. 选择 **“立即加入** ”，并按照屏幕上的说明操作。\n1. 在欢迎屏幕中，选择 **“设置 E5 订阅**”。\n1. 设置管理员帐户。 完成后，将显示以下屏幕。\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"注册 Microsoft 365 开发人员计划后看到的示例。\":::\n\n1. 使用刚设置的管理员帐户登录到 Teams。 验证你是否在 Teams 中具有 **“上传自定义应用** ”选项。\n\n## <a name=\"get-a-free-azure-account\"></a>获取免费的 Azure 帐户\n\n如果要在 Azure 中托管应用或访问资源，则必须具有 Azure 订阅。 在开始之前[创建免费帐户](https://azure.microsoft.com/free/)。\n\n现在，你已获得所有工具并设置了帐户。 接下来，让我们设置开发环境并开始构建！\n\n可以继续使用此终端窗口运行本教程中所遵循的命令。\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>下载示例\n\n对于本教程，请使用 [Hello，World！](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) 要开始使用的示例。 可以从 GitHub 下载并克隆它。\n\n**若要使用 Git Bash 克隆示例存储库，请** 执行以下操作：\n\n1. 打开终端窗口。\n1. 运行以下命令，将示例存储库克隆到计算机：\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> 如果要修改和签入对 GitHub 存储库的更改以供将来参考，可以分 [叉](https://help.github.com/articles/fork-a-repo/) 此 [存储](https://github.com/OfficeDev/Microsoft-Teams-Samples) 库。\n"
- title: 生成第一个Node.js应用
  durationInMinutes: 1
  content: "\n克隆Node.js示例应用的存储库后，可以在本地环境中生成和测试应用。\n\n在此页中，你将学习以下内容：\n1. [生成并运行第一个应用](#build-and-run-the-sample)\n1. [测试示例应用](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>生成和运行示例\n\n克隆存储库后，可以生成示例应用。\n\n1. 打开终端窗口。\n1. 在终端中运行更改目录命令以更改为示例应用目录：\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. 使用以下命令安装所有依赖项：\n\n    ```bash\n    npm install\n    ```\n\n    应会看到一堆依赖项正在安装。\n\n1. 安装完成后，使用以下命令运行应用：\n\n    ```bash\n    npm start\n    ```\n\n    当Hello World应用启动时，它将显示`App started listening on port 3333`在终端窗口中。\n\n    > [!NOTE]\n    > 如果看到上述消息中显示的端口号不同，那是因为你设置了一个端口环境变量。 可以继续使用该端口或将环境变量更改为 3333。\n\n1. 打开浏览器窗口并使用以下 URL 验证所有Hello World应用 URL 是否正在加载：\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"显示Node.js本地主机的图像\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"显示Node.js本地主机 hello 页面的图像\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"显示Node.js本地主机“第一”选项卡的图像\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"显示Node.js本地主机第二个选项卡的图像\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>在本地环境中测试示例应用\n\n请记住，Microsoft Teams 中的应用是公开一个或多个功能的 Web 应用程序。 使你的应用在 Internet 上可用，以便 Teams 平台可以加载它。 若要使应用可从 Internet 访问，需要 *托管* 应用。\n\n对于本地测试，可以在本地计算机上运行应用，并使用 Web 终结点创建到它的隧道。 [ngrok](https://ngrok.com) 是一种免费工具，可用于执行此操作。 使用 *ngrok*，可以获取 Web 地址，例如 `https://d0ac14a5.ngrok.io` ， (此 URL 只是) 示例。 可以 [下载并安装](https://ngrok.com/download)*环境的 ngrok*。 请确保将其添加到其中 `PATH`的某个位置。\n\n### <a name=\"create-ngrok-tunnel\"></a>创建 ngrok 隧道\n\n安装 ngrok 后，可以创建隧道以在本地部署应用。\n\n1. 打开新的终端窗口。\n1. 运行以下命令以创建隧道。 示例应用使用端口 3333：\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    将创建 ngrok 隧道。 下面是 ngrok 隧道的示例。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"显示 ngrok 隧道的图像\":::\n\n    *Ngrok* 侦听来自 Internet 的请求，并将它们路由到在端口 3333 上运行的应用。\n\n验证应用的本地部署：\n\n1. 打开浏览器。\n1. 使用以下 URL 加载应用：\n\n    `https://<forwarding address in ngrok console session>/`\n\n    下面是 URL 的示例：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"显示node.js应用在 ngrok 隧道本地运行的图像\":::\n\n    可以尝试添加或`second`添加`first``hello`到 ngrok 隧道 URL 以查看应用的不同选项卡页。\n\n    Ngrok 侦听来自 Internet 的请求，并将它们路由到在端口 3333 上运行的应用。        \n\n1. 记下 ngrok 控制台中的转发地址。 需要此 URL 才能在 Teams 中部署应用。\n\n    > [!NOTE]\n    > 如果在 [生成和运行](#build-and-run-the-sample)期间使用了其他端口，请确保使用相同的端口号来设置 *ngrok* 隧道。\n    \n    > [!TIP]\n    > 最好在其他终端窗口中运行 *ngrok* ，使其保持运行，而不会干扰节点应用，你以后可能必须停止、重新生成和重新运行该应用。 *ngrok* 会话将在此窗口中返回有用的调试信息。 *ngrok* 的付费版本允许永久性名称。\n\n    >[!IMPORTANT] \n    > 如果使用 ngrok 的免费版本，则应用仅在开发计算机上的当前会话期间可用。 如果计算机关闭或进入睡眠状态，则它不可用。 重新启动服务时，它将返回一个新地址。 然后，必须更新使用过时地址的每个位置。 共享应用进行测试时，请记住此步骤。\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>生成Node.js应用包\n\n可以使用 `gulp CLI` 它来生成用于Node.js的应用包。\n\n1. 打开终端窗口。\n1. 确保你位于克隆目录的 `node.js` 目录中。 这是放置在其中 `gulpfile.js` 的文件夹。 \n1. 运行以下命令以生成Node.js应用包。\n\n    ```$ gulp```\n\n    下面是命令输出的示例：\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    创建应用包helloworldapp.zip。 可以在以下路径中找到包文件。\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > 如果所用工具中的位置不明确，请搜索应用包文件helloworldapp.zip。\n"
- title: 使用开发人员门户配置第一个Node.js应用
  durationInMinutes: 1
  content: "\n可以使用 [开发人员门户](https://dev.teams.microsoft.com/) 将应用包上传到 Teams 并配置应用功能。 开发人员门户是一个 Teams 应用，可简化应用的创建和注册。 从 Teams 应用商店安装！\n\n生成并测试 Teams 应用后，可以使用开发人员门户对其进行配置和预览。\n\n更新应用包包括：\n\n1. [将应用包导入开发人员门户](#import-the-app-package-to-developer-portal)\n1. [配置应用功能](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>将应用包导入开发人员门户\n\n若要导入应用包，请执行以下操作：\n\n1. 打开 Microsoft Teams。\n\n1. 从左侧栏中选择 **“应用商店**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::”图标。\n\n1. 在搜索栏中搜索 **开发人员门户** ，然后选择“开发人员门户”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"选择开发人员门户应用\":::\n\n1. 选择 **“打开”**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"显示打开的开发人员门户应用的图像\":::\n\n    开发人员门户随即打开。\n\n1. 选择“ **应用”** 选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"开发人员门户应用\":::\n\n1. 选择 **“导入”应用**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"显示“导入应用”按钮的图像\":::\n\n1. 在 C# 示例存储库目录结构中从以下路径打开应用包 `helloworldapp.zip` ：\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    **Hello World** 应用在开发人员门户中导入。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"显示在 Teams 中导入的应用的图像\":::\n\n    将应用导入开发人员门户后，可以在开发人员门户中查看其详细信息。\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>在开发人员门户中浏览应用\n\n将应用导入到开发人员门户后，可以查看其详细信息，包括清单文件。\n\n#### <a name=\"view-app-information\"></a>查看应用信息\n\n1. 从开发人员门户的左窗格中选择 **“基本信息** ”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"图像显示开发人员门户的左窗格\":::\n\n1. 请注意基本信息中的以下信息：\n    - 应用程序 ID\n    - 开发人员信息\n    - 应用 URL\n\n1. 从左窗格中选择 **“品牌** ”以查看品牌信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"显示应用品牌信息的图像\":::\n\n    如果要编写用于分发的新应用，这些详细信息非常重要。\n\n#### <a name=\"view-app-features\"></a>查看应用功能\n\n- 从开发人员门户的左窗格中选择 **应用功能** 。\n\n    应用功能显示在右窗格中。 可以查看个人应用、机器人和消息扩展的卡片。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"显示应用功能的图像\":::\n\n#### <a name=\"view-the-app-manifest\"></a>查看应用清单\n\n使用清单文件为应用配置功能、所需资源和其他重要属性。\n\n- 从左侧面板中选择 **“发布** ”以打开下拉列表，然后选择 **“应用”包**。\n\n    应用清单显示在右窗格中。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"显示开发人员门户中的应用清单文件的图像\":::\n\n    清单文件显示在右窗格中。\n\n### <a name=\"configure-your-apps-capabilities\"></a>配置应用的功能\n\n将应用导入开发人员门户后，下一步是配置应用功能。 开发人员门户包含不同部分中的所有应用信息。 它使配置应用功能变得简单。\n\n使用开发人员门户，可以：\n1. [配置个人选项卡应用](#configure-personal-tab-app)。\n1. [配置机器人](#configure-bot)。\n1. [配置消息扩展](#configure-message-extension)。\n\n#### <a name=\"configure-personal-tab-app\"></a>配置个人选项卡应用\n\n若要配置个人选项卡应用，请执行以下操作：\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::在“**应用功能**”窗格的 **“个人应用** 卡”上选择图标，然后选择 **“编辑**”。\n\n    显示“Hello”选项卡的详细信息。\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::选择“Hello”选项卡的图标，然后选择 **“编辑**”以打开要更新的应用详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"显示“Hello”选项卡菜单的图像\":::\n\n1. 在“ **向个人应用添加选项卡**”中输入“Hello”选项卡的应用详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"显示 Hello 选项卡详细信息的图像\":::\n\n    输入以下详细信息：\n    - **名称**：Hello 选项卡。\n    - **内容 URL** 和 **网站 URL**：ngrok 控制台会话中的转发地址。\n    - **上下文**：选择 **“个人”选项卡**。\n\n1. 选择“**更新**”。\n\n    “你好”选项卡的详细信息显示在 **“个人应用** ”窗格上。\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"显示要保存的 Hello 选项卡详细信息的图像\":::\n\n    “ **个人应用** ”窗格现在显示新选项卡和自动创建的“关于”选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"显示“Hello”选项卡和“关于”选项卡详细信息的图像\":::\n\n#### <a name=\"configure-bot\"></a>配置机器人\n\n将机器人功能添加到应用很容易。 Hello World示例应用已将机器人作为示例的一部分，但必须将其注册到 Teams。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"显示未使用应用 ID 导入的机器人应用的图像\":::\n\n从示例导入的机器人没有关联的应用 ID。 需要删除它并创建新的机器人。 开发人员门户创建新的应用 ID，并将其注册到 Teams。\n\n添加和配置机器人涉及：\n\n1. [添加新机器人](#to-add-a-new-bot)。\n1. [将机器人添加到应用](#to-add-bot-to-app)。\n1. [配置机器人范围](#to-configure-bot-scope)。\n\n##### <a name=\"to-add-a-new-bot\"></a>添加新机器人\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::在 **“应用功能**”窗格的 **“机器人** 卡”上选择图标，然后选择 **“删除**”。\n\n1. 选择 **要** 添加功能的工具。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"显示“工具”选项的图像\":::\n\n1. 在 **“工具”** 窗格上选择 **“机器人管理**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"显示机器人管理窗格的图像\":::\n\n1. 在 **“机器人管理**”窗格中选择 **“+ 新建机器人**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"显示新机器人选项的图像\":::\n\n1. 为机器人输入合适的名称，然后选择 **“添加**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"显示如何添加机器人的图像\":::\n\n    “ **配置** ”窗格显示在左窗格中显示新机器人的详细信息。\n\n1. 从 `ngrok` 控制台输入转发 URL，然后选择 **“保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"显示如何添加机器人终结点的图像\":::\n\n1. 选择 **客户端机密**，然后选择 **“向机器人添加客户端机密** ”，为机器人生成密码。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"显示客户端机密部分的图像\":::\n\n    开发人员门户为机器人生成密码。\n\n    可以使用该 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: 图标复制密码。 在本教程中，无需复制它。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"显示生成的客户端机密的图像\":::\n\n1. 选择“**确定**”。\n\n1. 选择 **<机器人** 以返回到 **机器人管理** 窗格。\n\n    机器人 **管理** 窗格显示添加了应用 ID 的新机器人。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"显示具有应用 ID 的新机器人的图像\":::\n\n1. 确保从 **客户端机密** 部分保存机器人 ID 和密码。\n\n##### <a name=\"to-add-bot-to-app\"></a>将机器人添加到应用\n\n1. 打开 **“应用功能** ”窗格，然后选择 **机器人** 卡片。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"显示机器人卡片的图像\":::\n\n    将显示 **“机器人** ”窗格。\n\n1. 从 **“选择现有机器人**”中选择机器人应用，然后选择 **“保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"显示如何选择现有机器人应用的图像\":::\n\n    新机器人将使用自己的应用 ID 添加到应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"显示添加到应用的新机器人的图像\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>配置机器人范围\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::选择新 **机器人** 卡片上的图标，然后选择 **“编辑**”。\n\n1. 在 **“机器人** ”窗格中移动以查看 **“命令”** 部分，然后选择 **“+ 添加命令**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"显示命令节的图像\":::\n\n1. 输入 **命令的合适** 名称和说明。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"显示如何添加命令详细信息的图像\":::\n\n1. 选择命令的所有三个范围，然后选择 **“添加**”。\n    - 个人\n    - **团队**\n    - **群组聊天**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"显示如何保存命令详细信息的图像\":::\n\n    新命令将添加到 **机器人** 窗格的 **“命令**”部分。\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"显示要保存的命令详细信息的图像\":::\n\n    将保存命令详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"显示已保存命令详细信息的图像\":::\n\n1. 打开 **“应用功能** ”窗格，然后选择 **“个人应用** 卡”以查看应用的选项卡详细信息。\n\n    你将看到新聊天机器人的选项卡已添加到应用中。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"显示已配置聊天选项卡的图像\":::\n\n#### <a name=\"configure-message-extension\"></a>配置消息扩展\n\n消息扩展允许用户从服务中请求信息并发布该信息。 信息以卡的形式发布到频道对话中。 消息扩展显示在撰写框的底部。\n\n若要添加新的消息扩展插件，\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::在 **“应用功能**”窗格的 **“消息扩展** 卡”上选择图标，然后选择 **“删除**”。\n\n1. 从 **“应用功能**”窗格中选择 **“消息扩展**”。\n\n1. 从 **“消息扩展**”窗格上的 **“选择现有机器人** 下拉列表”中选择机器人应用的名称。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"显示要选择机器人的消息扩展窗格的图像\":::\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"显示“消息扩展”窗格的图像\":::\n\n    消息扩展已保存，“ **命令”** 部分将显示在 **“消息扩展** ”窗格中。\n\n1. 选择 **+添加命令** 以定义消息扩展应用可以执行的操作的范围。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"显示“命令”部分的图像\":::\n\n    “ **添加命令** ”对话框。\n\n1. 确保选择 **“搜索** ”作为要在“ **添加命令** ”对话框中添加的命令类型。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"显示“添加命令”对话框的图像\":::\n\n1. 输入适用于以下详细信息的信息：\n    - 命令 ID\n    - 命令标题\n    - 命令说明\n\n1. 在对话框中移动以查看剩余的详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"显示“添加命令”对话框中的剩余详细信息的图像\":::\n\n1. 确保已选择 **“设置默认值** ”。\n1. 为消息扩展命令选择以下上下文：\n    - 命令框\n    - 撰写框\n    - 邮件\n1. 输入适用于以下详细信息的信息：\n    - 参数名称\n    - 参数标题\n    - 参数说明\n\n1. 选择 **“文本** ”作为输入类型。\n1. 选择“**保存**”。\n1. 消息扩展命令已保存，并显示在 **“消息扩展** ”窗格中的命令列表中。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"显示添加了命令的图像\":::\n\n1. 选择“**保存**”。\n1. “打开 **应用功能** ”窗格。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"显示为Hello World应用配置的功能的图像\":::\n\n    你将看到为Hello World应用配置的所有三个功能（个人选项卡应用、机器人和消息扩展）。\n"
- title: 预览并测试Node.js应用
  durationInMinutes: 1
  content: "\n导入应用并在开发人员门户中配置功能后，可以预览和测试示例应用。\n\n## <a name=\"preview-your-app-in-teams\"></a>在 Teams 中预览应用\n\n配置应用的功能后，可以在本地环境中的 Teams 中预览和测试应用。\n\n预览应用：\n\n1. 从开发人员门户工具栏 **中选择 Teams 中的预览** 版。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"显示预览按钮的图像\":::\n\n    开发人员门户会通知你应用已成功旁加载。\n\n1. 选择“**管理应用**”。\n   你的应用列在旁加载的应用中。 \n1. 使用搜索框查找应用，选择其行中的三点。\n1. 选择 **“视图** ”选项。\n    将显示应用的 **“添加** ”页。\n1. 选择 **“添加** ”以在 Teams 上加载应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"显示“添加应用”对话框的图像\":::\n\n    你的应用现在在 Teams 中可用。 可以查看所有选项卡并测试功能：\n\n    - Hello 选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"显示本地环境中的 Hello 选项卡的图像\":::\n\n    - 聊天机器人：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"显示应用在本地环境中的机器人的图像\":::\n\n        可以使用聊天发送消息。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"显示本地环境中聊天的图像\":::\n\n    - 消息扩展：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"显示本地环境中的消息扩展的图像\":::\n\n        可以尝试使用消息扩展进行搜索。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"显示在本地环境中使用消息扩展进行搜索的图像\":::\n\n    - 关于选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"显示本地环境中的“关于”选项卡的图像\":::"
