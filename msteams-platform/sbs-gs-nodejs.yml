### YamlMime:Tutorial
title: 使用 Node.js 生成第一个应用
metadata:
  title: Hello World with Node.js
  description: 本教程介绍如何使用应用生成 Hello World Node.js。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 返回到入门概述
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: 56c4d0e5f0730ab5b21b45daa3832c0dd2edd560
  ms.sourcegitcommit: 22c9e44437720d30c992a4a3626a2a9f745983c1
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60721036"
items:
- durationInMinutes: 1
  content: >
    通过Microsoft Teams选项卡、机器人和消息扩展功能构建你的第一个应用，开始开发应用。


    >此应用将具有所有功能，并且每个功能都有其自己的 UI 和 UX：


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="显示此应用程序的图表具有三个功能。" border="false":::


    在本教程中，你将了解：


    - 如何使用命令行工具设置新项目。

    - 如何构建三个应用，每个应用具有不同的功能：选项卡、机器人和消息扩展。

    - 如何从开发人员门户部署应用
- title: 先决条件
  durationInMinutes: 1
  content: "\n以下是生成和部署应用所需的工具Teams列表。\n\n| &nbsp; | 安装 | 对于使用... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js 和 NPM](https://nodejs.org/) | 后端 JavaScript 运行时环境。 使用最新的 v14 LTS 版本。|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams对话 (聊天机器人、消息传递扩展和传入 webhook) 需要入站连接。 隧道将开发系统连接到Teams。 仅包含选项卡的应用不需要它。 此包安装在项目目录中， (npm `devDependencies`) 。 |\n| &nbsp; | [Microsoft Edge (](https://www.microsoft.com/edge)推荐) [Google Chrome](https://www.google.com/chrome/) | 具有开发人员工具的浏览器。 |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript、TypeScript 或 SharePoint 框架 (SPFx) 生成环境。 使用版本 1.55 或更高版本。 |\n| &nbsp; | [安装 Git](https://git-scm.com/downloads) | 示例Node.js应用程序存储库GitHub |\n| &nbsp; |  [gulp](https://gulpjs.com/docs/en/getting-started/quick-start) | 开放源代码 JavaScript 工具包。 安装版本 4.0.0 或更高版本。 |\n| **可选** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) and [Azure CLI](/cli/azure/install-azure-cli) | Azure 工具，用于访问已存储数据或在 Azure 中为 Teams应用部署基于云的后端。 |\n| &nbsp; | [React Chrome 开发人员工具](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi)或者[React Edge 开发人员工具](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | 用于使用 JavaScript 开发选项卡的浏览器工具。 |\n| &nbsp; | [Microsoft Graph 浏览器](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph资源管理器，一种基于浏览器的工具，可用于从 Microsoft 运行查询Graph数据。 |\n| &nbsp; | [Teams 开发人员门户](https://dev.teams.microsoft.com/) | 基于 Web 的门户，用于配置、管理和分发你的 Teams 应用，包括你的组织或 Teams商店。 |\n| &nbsp; | **Visual Studio Code扩展** | &nbsp; |\n| &nbsp; | [Azure 函数核心工具](/azure/azure-functions/functions-run-local) | 在本地调试运行期间本地后端组件，包括在 Azure 中运行服务时所需的身份验证帮助程序。 它使用 npm (安装在项目目录 `devDependencies`) 。 |\n| &nbsp; | [.NET SDK](/dotnet/core/install/) | 用于本地调试和 Azure Functions 应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，可以安装可移植版本。 |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>验证已安装工具的版本号\n\n在终端窗口中运行以下代码，验证这些工具是否可用：\n\n> [!NOTE]\n> 使用你最熟悉平台的终端窗口。 这些示例使用 Git Bash (包含在 Git 安装) ，但这些脚本将在大多数平台上运行。\n\n```bash\n$ git --version\ngit version 2.19.0.windows.1\n\n$ node -v\nv8.9.3\n\n$ npm -v\n5.5.1\n\n$ gulp -v\nCLI version 2.3.0\nLocal version 4.0.2\n```\n可以没有任何问题地使用这些应用程序的不同版本。\n\n如果已安装Visual Studio Code，可以运行以下代码验证安装：\n\n```bash\ncode --version\n1.28.2\n929bacba01ef658b873545e26034d1a8067445e9\n```\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>设置开发Teams租户\n\n租户 **就像** 租户中的空间或组织的容器，Teams聊天、共享文件和运行会议。\n此空间也是你旁加载和测试应用的地方。 \n\n让我们验证你是否已准备好使用租户进行开发。\n\n### <a name=\"enable-sideloading-option\"></a>启用旁加载选项\n\n创建应用后，必须在不分配应用的情况下Teams加载应用。 此过程称为旁加载。 登录到你的 Microsoft 365 帐户以查看此选项。\n  \n你已拥有租户，是否具有管理员访问权限？ 让我们看一下你是否确实要这样做！\n\n验证你能否在应用中旁加载Teams：\n\n1. 在 Teams 客户端中，选择 **\"应用商店图标**\"。\n1. 选择 **\"管理应用\"。**\n1. 查找用于自定义 **Upload的选项**。 如果看到 选项，则启用旁加载应用。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"插图显示用于将自定义应用上传到 Teams。\":::\n\n    > [!NOTE]\n    > 如果Teams显示上传自定义应用的选项，请与管理员Teams联系。\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>创建免费开发人员Teams租户\n\n如果你没有开发者帐户Teams，可以免费获取它。 加入Microsoft 365开发人员计划！\n\n1. 转到开发人员[Microsoft 365计划](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. 选择 **立即加入** 并按照屏幕上的说明进行操作。\n1. 在欢迎屏幕中，选择 **\"设置 E5 订阅\"。**\n1. 设置管理员帐户。 完成后，将显示以下屏幕。\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"注册开发人员计划后看到Microsoft 365的示例。\":::\n\n1. 使用刚Teams的管理员帐户登录登录。 验证你已Upload **自定义应用** 选项Teams。\n\n## <a name=\"get-a-free-azure-account\"></a>获取免费的 Azure 帐户\n\n如果你想要在 Azure 中托管应用或访问资源，则必须拥有 Azure 订阅。 [在开始之前创建](https://azure.microsoft.com/free/) 一个免费帐户。\n\n现在，你已获得所有工具并设置帐户。 接下来，让我们设置开发环境并开始构建！\n\n你可以继续使用此终端窗口运行本教程中遵循的命令。\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>下载示例\n\n可以使用 [Hello， World！](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) 示例开始。 在终端窗口中，运行以下命令将示例存储库克隆到本地计算机：\n\n```bash\ngit clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n```\n\n> [!TIP]\n> 如果要[修改和](https://help.github.com/articles/fork-a-repo/)[签入对](https://github.com/OfficeDev/Microsoft-Teams-Samples)存储库所做的更改，可以分叉此存储库GitHub供将来参考。\n"
- title: 生成首个Node.js应用
  durationInMinutes: 1
  content: "\n克隆示例应用的存储库Node.js，可以在本地环境中生成和测试该应用。\n\n在此页中，你将了解：\n1. [生成并运行你的第一个应用](#build-and-run-the-sample)\n1. [测试示例应用](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>生成和运行示例\n\n克隆存储库后，可以生成示例应用。\n\n1. 打开终端窗口。\n1. 在终端中运行更改目录命令以更改为示例应用目录：\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. 使用下列命令安装所有依赖项：\n\n    ```bash\n    npm install\n    ```\n\n    你应该会看到一组依赖项正在安装。\n\n1. 安装完成后，使用下面的命令运行应用：\n\n    ```bash\n    npm start\n    ```\n\n    当 Hello World 应用启动时，它 `App started listening on port 3333` 显示在终端窗口中。\n\n    > [!NOTE]\n    > 如果看到上述消息中显示的端口号不同，这是因为您设置了 PORT 环境变量。 您可以继续使用该端口，也可以将环境变量更改为 3333。\n\n1. 打开浏览器窗口，然后使用以下 URL 验证所有 Hello World 应用 URL 是否正在加载：\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"显示本地Node.js的图像\" border=\"false\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"显示本地主机Node.js页的图像\" border=\"false\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"显示本地主机Node.js选项卡的图像\" border=\"false\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"显示本地Node.js第二个选项卡的图像\" border=\"false\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>在本地环境中测试示例应用\n\n请记住，Microsoft Teams应用程序是公开一个或多个功能的 Web 应用程序。 使你的应用在 Internet 上可用，以便Teams加载它。 若要使你的应用从 Internet 上访问，你需要 *托管* 你的应用。\n\n对于本地测试，可以在本地计算机上运行应用，然后使用 Web 终结点创建一个隧道。 [ngrok](https://ngrok.com) 是一款免费工具，允许你这样做。 使用 *ngrok，* 你可以获取 Web 地址 `https://d0ac14a5.ngrok.io` ， (此 URL 只是一个) 。 你可以 [为环境下载](https://ngrok.com/download)*并安装 ngrok。* 请确保将其添加到 中的位置 `PATH` 。\n\n### <a name=\"create-ngrok-tunnel\"></a>创建 ngrok 隧道\n\n安装 ngrok 后，可以创建一个隧道以在本地部署应用。\n\n1. 打开一个新的终端窗口。\n1. 运行以下命令以创建隧道。 示例应用使用端口 3333：\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    将创建 ngrok 隧道。 下面是 ngrok 隧道的示例。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"显示 ngrok 隧道的图像\" border=\"false\":::\n\n    *Ngrok* 侦听来自 Internet 的请求，并将它们路由到在端口 3333 上运行的应用。\n\n验证应用的本地部署：\n\n1. 打开浏览器。\n1. 使用下面的 URL 加载应用：\n\n    `https://<forwarding address in ngrok console session>/hello`\n\n    下面是 URL 的示例：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"显示在本地node.js ngrok 隧道运行的应用的图像\" border=\"false\":::\n\n1. 记下 ngrok 控制台中的转发地址。 你需要此 URL 来部署 Teams。\n\n    > [!NOTE]\n    > 如果你在生成和运行 [期间使用了其他](#build-and-run-the-sample)端口，请确保使用相同的端口号来设置 *ngrok* 隧道。\n    > [!TIP]\n    > 建议在不同的终端窗口中运行 *ngrok* 以保持其运行，而不会影响节点应用，稍后可能需要停止、重新生成和重新运行。 *ngrok* 会话将在此窗口中返回有用的调试信息。 ngrok *的付费版本* 允许永久名称。\n\n    >[!IMPORTANT] \n    > 如果你使用 ngrok 的免费版本，你的应用将仅在开发计算机上当前会话期间可用。 如果计算机关闭或进入睡眠状态，则不可用。 重新启动该服务时，它将返回一个新地址。 然后，您必须更新使用过时地址的每一个位置。 在共享应用进行测试时，请记住此步骤。\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>生成Node.js应用包\n\n可以使用 为 `gulp CLI` 应用生成应用包Node.js。\n\n1. 打开终端窗口。\n1. 确保您位于克隆 的 `node.js` 目录中。 这是放置 `gulfile.js` 的文件夹。 \n1. 运行以下命令以生成Node.js应用包。\n\n    ```$ gulp```\n\n    下面是命令输出的示例：\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    创建应用helloworldapp.zip包。 可以在以下路径找到程序包文件。\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > 搜索应用包文件，helloworldapp.zip（如果当前使用的工具中的位置不明确）。\n"
- title: 使用开发人员门户Node.js你的第一个应用
  durationInMinutes: 1
  content: "\n可以使用开发人员[门户将](https://dev.teams.microsoft.com/)应用包上载到Teams。 开发人员门户是Teams应用程序，可简化应用程序的创建和注册。 从应用商店Teams安装！\n\n更新应用包包括：\n\n1. [将应用包导入开发人员门户](#import-the-app-package-to-developer-portal)\n1. [配置应用功能](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>将应用包导入开发人员门户\n\n若要导入应用包：\n\n1. 打开 Microsoft Teams。\n\n1. 从 **左侧栏中** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: 选择\"应用商店\"图标。\n\n1. 在搜索 **栏中搜索** 开发人员门户，然后选择**开发人员门户***。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"选择开发人员门户应用\" border=\"false\":::\n\n1. 选择 **“打开”**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"显示打开的开发人员门户应用的图像\" border=\"false\":::\n\n    开发人员门户将打开。\n\n1. 选择\" **应用\"** 选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"开发人员门户应用\" border=\"false\":::\n\n1. 选择 **\"导入现有应用\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"显示&quot;导入应用&quot;按钮的图像\" border=\"false\":::\n\n1. 从示例 **存储库helloworldapp.zip** 结构中的以下路径打开C#包文件：\n\n    `<path to cloned node.js sample repo>\\\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    Hello **World** 应用在开发人员门户中导入。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"显示已导入应用程序Teams\" border=\"false\":::\n\n    将应用导入开发人员门户后，可以在开发人员门户中查看其详细信息。\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>在开发人员门户中浏览你的应用\n\n将应用导入开发人员门户后，可以查看其详细信息，包括清单文件。\n\n#### <a name=\"view-app-information\"></a>查看应用信息\n\n1. 从 **开发人员门户** 的左窗格中选择基本信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"图像显示开发人员门户的左窗格\" border=\"false\":::\n\n1. 请注意基本信息中的以下信息：\n    - 应用程序 ID\n    - 开发人员信息\n    - 应用 URL\n\n1. 从 **左窗格中** 选择\"品牌\"以查看品牌信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"显示应用品牌信息的图像\" border=\"false\":::\n\n    如果你要编写要分发的新应用，这些详细信息非常重要。\n\n#### <a name=\"view-app-features\"></a>查看应用功能\n\n- 从 **开发人员门户** 的左窗格中选择应用功能。\n\n    应用程序功能显示在右侧窗格中。 可以查看个人应用、自动程序以及邮件扩展的卡片。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"显示应用功能的图像\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>查看应用清单\n\n使用清单文件为应用配置功能、必需资源和重要属性。\n\n- 从 **左侧** 面板中选择发布以打开下拉列表，然后选择应用 **包**。\n\n    应用程序清单显示在右侧窗格中。\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"显示开发人员门户中的应用清单文件的图像\" border=\"false\":::\n\n    清单文件显示在右侧窗格中。\n\n### <a name=\"configure-your-apps-capabilities\"></a>配置应用的功能\n\n将应用导入开发人员门户后，下一步是配置应用功能。 开发人员门户包含不同部分中的所有应用信息。 它使配置应用功能变得简单。\n\n使用开发人员门户，你可以：\n1. [配置个人选项卡应用](#configure-personal-tab-app)\n1. [配置自动程序](#configure-bot)\n1. [配置邮件扩展](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>配置个人选项卡应用\n\n配置个人选项卡应用：\n\n1. 选择 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: \"应用功能\"窗格 **上**\"个人\"应用卡 **上的** 图标，然后选择\"编辑 **\"。**\n\n    将显示 Hello 选项卡的详细信息。\n\n1. 选择 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: Hello 选项卡的图标，然后选择\"编辑\"打开应用详细信息以进行更新。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"显示 Hello 选项卡菜单的图像\" border=\"false\":::\n\n1. 在将选项卡添加到你的个人应用中，输入 Hello **选项卡的应用详细信息**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"显示 Hello 选项卡详细信息的图像\" border=\"false\":::\n\n    输入以下详细信息：\n    - 名称：Hello 选项卡\n    - 内容 URL 和网站 URL：ngrok 控制台会话中的转发地址\n\n1. 选择“**更新**”。\n\n    \"Hello\"选项卡的详细信息显示在\"个人 **\"应用程序窗格中** 。\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"显示要保存的 Hello 选项卡详细信息的图像\" border=\"false\":::\n\n    \" **个人应用程序** \"窗格现在显示自动创建的新选项卡和\"关于\"选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"显示&quot;Hello&quot;选项卡和&quot;关于&quot;选项卡详细信息的图像\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>配置自动程序\n\n将聊天机器人功能添加到你的应用很简单。 Hello World 示例应用已包含自动程序作为示例的一部分，但你必须使用 Teams。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"显示无应用 ID 导入的自动程序应用的图像\" border=\"false\":::\n\n从示例导入的机器人没有关联的应用 ID。 你将需要将其删除，并创建新的自动程序。 开发人员门户创建新的应用 ID，并注册Teams。\n\n添加和配置自动程序涉及：\n\n1. [添加新机器人](#to-add-a-new-bot)\n1. [将机器人添加到应用](#to-add-bot-to-app)\n1. [配置自动程序作用域](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>添加新机器人\n\n1. 选择 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: \"应用功能\"窗格上 **\"** 自动程序\"卡 **上的** 图标，然后选择\"删除 **\"。**\n\n1. 选择 **\"应用** 功能 **\"窗格上的\"自动程序** \"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"显示自动程序卡的图像\" border=\"false\":::\n\n1. 选择 **\"自动程序\"窗格中** 的\"创建新 **自动程序** \"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-page.png\" alt-text=\"显示自动程序窗格的图像\" border=\"false\":::\n\n    将 **打开\"自动程序** 管理\"部分。\n\n1. 选择 **\"自动程序管理** \"窗格中的\"+ **新建自动程序** \"。\n1. 为自动程序输入合适的名称，然后选择\"添加 **\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"显示如何添加机器人的图像\" border=\"false\":::\n\n    The **Configure** pane appears showing details of the new bot in the left pane.\n\n1. 从控制台输入转发 `ngrok` URL，然后选择\"保存 **\"。**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"显示如何添加自动程序终结点的图像\" border=\"false\":::\n\n1. 选择 **\"客户端** 密码\"，然后选择 **\"将客户端** 密码添加到机器人\"，为机器人生成密码。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"显示&quot;客户端密码&quot;部分的图像\" border=\"false\":::\n\n    开发人员门户为自动程序生成密码。\n\n1. 选择 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: 图标以复制密码，并将其保存在文本文件中。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"显示生成的客户端密码的图像\" border=\"false\":::\n\n1. 选择“**确定**”。\n\n1. 选择 **<自动** 程序\"返回到 **自动程序管理** 窗格。\n\n    自动 **程序管理** 窗格显示使用应用 ID 添加的新自动程序。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"显示具有应用 ID 的新自动程序的图像\" border=\"false\":::\n\n1. 确保保存自动程序 ID 以及客户端密码 **部分中** 的密码。\n\n##### <a name=\"to-add-bot-to-app\"></a>将机器人添加到应用\n\n1. 打开\" **应用功能\"** 窗格，然后选择 **\"自动程序\"** 卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"显示自动程序卡的图像\" border=\"false\":::\n\n    将显示 **\"自动程序** \"窗格。\n\n1. Select your bot app from **Select an existing bot**， and select **Save**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"显示如何选择现有自动程序应用的图像\" border=\"false\":::\n\n    新自动程序将添加到具有其自己的应用 ID 的应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"显示已添加到应用的新自动程序的图像\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>配置自动程序作用域\n\n1. 选择新 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: 自动程序卡上的图标，然后选择\"编辑 **\"。**\n\n1. 在自动 **程序窗格中** 移动 **以查看命令部分** ，然后选择 + **添加命令**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"显示命令部分的图像\" border=\"false\":::\n\n1. 为命令 输入合适的名称和 **说明**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"显示如何添加命令详细信息的图像\" border=\"false\":::\n\n1. 选择该命令的所有三个范围，然后选择\"添加 **\"。**\n    - 个人\n    - **团队**\n    - **群聊**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"显示如何保存命令详细信息的图像\" border=\"false\":::\n\n    新命令将添加到\"自动 **程序\"** 窗格的\"命令 **\"** 部分。\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"显示要保存的命令详细信息的图像\" border=\"false\":::\n\n    保存命令详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"显示保存的命令详细信息的图像\" border=\"false\":::\n\n1. 打开 **\"应用功能** \"窗格， **然后选择\"** 个人应用卡\"以查看应用的选项卡详细信息。\n\n    你将看到新聊天机器人的选项卡已添加到你的应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"显示已配置的聊天选项卡的图像\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>配置邮件扩展\n\n消息扩展允许用户从你的服务请求信息并发布该信息。 信息以卡片的形式张贴到频道对话中。 邮件扩展显示在撰写框的底部。\n\n添加新邮件扩展名：\n\n1. 选择\"应用功能\"窗格上\"邮件扩展\" :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: 卡 **上的** 图标，然后选择\"删除 **\"。** \n\n1. 从 **\"应用功能** \"窗格中 **选择\"邮件扩展** \"。\n\n1. 从\"消息扩展\"窗格上的\" **选择** 现有自动程序\"下拉列表中选择自动 **程序应用** 的名称。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"显示选择自动程序的消息扩展窗格的图像\" border=\"false\":::\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"显示邮件扩展窗格的图像\" border=\"false\":::\n\n    保存邮件扩展名，\" **命令** \"部分显示在\"邮件扩展 **\"窗格中** 。\n\n1. 选择 **+ 添加命令** 以定义邮件扩展应用可以执行的范围。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"显示&quot;命令&quot;部分的图像\" border=\"false\":::\n\n    \" **添加命令\"** 对话框。\n\n1. 确保 **选择** \"搜索\"作为要添加到\"添加命令\"对话框中 **的命令** 类型。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"显示&quot;添加命令&quot;对话框的图像\" border=\"false\":::\n\n1. 输入以下详细信息的合适信息：\n    - 命令 ID\n    - 命令标题\n    - 命令说明\n\n1. 在对话框中移动以查看其余详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"显示&quot;添加命令&quot;对话框中的剩余详细信息的图像\" border=\"false\":::\n\n1. 确保 **选中\"设置为** 默认值\"。\n1. 为邮件扩展命令选择以下上下文：\n    - 命令框\n    - 撰写框\n    - 邮件\n1. 输入以下详细信息的合适信息：\n    - 参数名\n    - 参数标题\n    - 参数说明\n\n1. 选择 **\"** 文本\"作为输入类型。\n1. 选择“**保存**”\n1. 邮件扩展命令已保存，显示在\"邮件扩展\"窗格中的命令 **列表中** 。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"显示已添加命令的图像\" border=\"false\":::\n\n1. 选择“**保存**”。\n1. 打开 **\"应用功能\"** 窗格。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"显示为 Hello World 应用配置的功能的图像\" border=\"false\":::\n\n    你将看到为 Hello World 应用配置的所有三项功能-个人选项卡应用、机器人和消息扩展。\n"
- title: 预览和测试Node.js应用
  durationInMinutes: 1
  content: "\n导入应用并配置开发人员门户中的功能后，可以预览和测试示例应用。\n\n## <a name=\"preview-your-app-in-teams\"></a>在应用中预览Teams\n\n配置应用功能后，可以在本地环境中Teams预览和测试应用。\n\n预览应用：\n\n1. 从 **开发人员门户Teams** 中的\"预览\"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"显示&quot;预览&quot;按钮的图像\" border=\"false\":::\n\n    开发人员门户会通知你你的应用已成功旁加载。\n\n1. 从 **左侧窗格中** 选择\"发布\"，然后选择\" **下载应用** 包\"，从开发人员门户下载配置的应用包。\n1. 保存应用包 zip 文件。 文件名为 Hello World.zip。\n1. 选择\" **应用商店\"** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: 图标。\n1. 选择 **\"管理应用\"。**\n1. 选择 **Upload自定义应用。**\n1. 选择\"World.zip\"以将其上载Teams本地环境中的内容。\n\n    将显示 **应用的** \"添加\"页面。\n\n1. 选择 **\"添加**\"以在Teams。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"显示&quot;添加应用&quot;对话框的图像\" border=\"false\":::\n\n    你的应用现已在 Teams 中提供。 可以查看所有选项卡并测试以下功能：\n\n    - Hello 选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"在本地环境中显示 Hello 选项卡的图像\" border=\"false\":::\n\n    - 聊天机器人：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"显示本地环境中应用自动程序的图像\" border=\"false\":::\n\n        可以使用聊天发送消息。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"显示本地环境中聊天的图像\" border=\"false\":::\n\n    - 邮件扩展名：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"显示本地环境中邮件扩展的图像\" border=\"false\":::\n\n        可以使用邮件扩展名尝试搜索。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"显示在本地环境中使用邮件扩展进行搜索的图像\" border=\"false\":::\n\n    - 关于选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"显示本地环境中&quot;关于&quot;选项卡的图像\" border=\"false\":::"
