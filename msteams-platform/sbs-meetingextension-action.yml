### YamlMime:Tutorial
title: 基于生成操作的消息扩展
metadata:
  title: 基于生成操作的消息扩展
  description: 通过本学习模块，了解如何为 Teams 设置操作消息扩展，以从撰写消息和消息区域启动操作。
  audience: Developer
  level: Beginner
  ms.date: 24/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/action-commands/define-action-command.md
  nextTutorialTitle: 阅读详细信息以启用消息扩展操作命令
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 33fb68574eb2a3f199fdbeef056b3d84dc95fd42
  ms.sourcegitcommit: 88fb2e9a18de3bd84e3c604ff235fc753c8de8f5
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/02/2022
  ms.locfileid: "68818318"
items:
- durationInMinutes: 1
  content: "基于 Teams 操作的消息扩展允许用户与 Microsoft Teams 客户端中的 Web 服务进行交互。 此消息扩展有助于从撰写消息区域、命令框或直接从消息启动外部系统中的操作。\n\n**基于操作的消息扩展的主要功能：**\n\n* 向用户显示用于收集或显示信息的模式弹出窗口。\n* 从撰写消息区域、命令框或消息触发操作命令。 \n\n本分步指南可帮助你构建基于 Teams 操作的消息扩展，以从撰写消息和消息区域启动操作。 在本教程结束时，可以实现以下输出：\n   \n:::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/sharemessageoutput1.png\" alt-text=\"输出。\":::\n"
- title: 先决条件
  durationInMinutes: 1
  content: >
    确保安装以下工具并设置开发环境：

     | &nbsp; | 安装 | 用于使用... |
     | --- | --- | --- |
     | **Required** | &nbsp; | &nbsp; |
     | &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams 可在一个位置通过聊天、会议、通话等应用与你合作的每个人进行协作。|
     | &nbsp; | [Visual Studio 2022 版本 17.3](https://visualstudio.microsoft.com)<br> 安装以下两个工作负载之一：<br> • ASP.NET 和 Web 开发 <br> • .NET Core 跨平台开发 | 可以在 Visual Studio 2022 中安装企业版，并安装工作负载。 |
     | &nbsp; | [.NET Core SDK 版本 3.1](https://dotnet.microsoft.com/en-us/download) | 用于本地调试和 Azure Functions 应用部署的自定义绑定。 如果尚未全局安装 .NET 3.1 (或更高版本) SDK，则可以安装可移植版本。 |
     | &nbsp; | [ngrok](https://ngrok.com/download) | teams 应用功能 (对话机器人、消息扩展和传入 Webhook) 需要入站连接。 隧道将开发系统连接到 Teams。 对于仅包含选项卡的应用，这不是必需的。 此包使用 npm `devDependencies`) 安装在项目目录 (中。 |

      > [!NOTE]
      > 下载 ngrok 后，注册并安装 [authtoken](https://ngrok.com/download)。
- title: 设置本地环境
  durationInMinutes: 1
  content: "将存储库克隆 `BotBuilder-Samples` 到本地 GitHub：  \n\n 1. 打开 [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples)。\n 1. 选择“ **代码**”。\n 1. 在下拉菜单中，选择“ **使用 GitHub Desktop 打开**”。\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/clonerepository_1.png\" alt-text=\"克隆存储库\":::\n\n\n 1. 选择“ **克隆**”。 \n"
- title: 在 Azure AD 门户中创建和注册机器人
  durationInMinutes: 5
  content: "若要在 Microsoft Azure Active Directory (Azure AD) 中创建和注册机器人，请执行以下步骤：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n* 创建客户端密码以启用单一登录 (SSO) 机器人身份验证。\n* 在 Azure 帐户中创建机器人通道注册。\n* 添加 Teams 频道以将机器人部署到 Teams 频道。\n* 使用 ngrok 创建到 Web 服务器终结点的隧道。\n* 将消息传递终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到 [Microsoft Azure 门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择“**Enter**”。\n1. 选择“ **Azure 机器人**”。\n1. 选择“**创建**”。\n\n     :::image type=\"content\" source=\"./assets/images/azure-bot_1.png\" alt-text=\"Azure 机器人。\":::\n\n此时会显示 **“创建 Azure 机器人**”窗口。\n\n1. 在机器人句柄中输入所需的 **机器人句柄** 名称。\n1. 从相应的下拉列表中选择 **“订阅** ”和“ **资源组** ”。\n    \n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/create-azurebot_1.png\" alt-text=\"选择“资源 Azure 机器人”。\":::\n\n   可以创建新的资源组。 选择“ **新建** >输入资源名称>选择 **”确定**”。 从“ **新建资源组** 位置”下拉列表中选择所需位置。\n    \n    :::image type=\"content\" source=\"~/assets/images/bots/newresource.png\" alt-text=\"显示新资源组位置的屏幕截图。\":::\n   \n1. 选择 **“应用类型** ”作为 **“多租户**”。\n\n1. 在 **“Microsoft 应用 ID** ”部分中，默认选择“ **创建新的 Microsoft 应用 ID** ”。 \n\n   可以选择“ **使用现有应用注册** ”，然后输入 **“应用 ID**”、“ **应用租户 ID”** 和 **“MSI 资源 ID**”。\n\n   > [!NOTE]\n   > 不能使用相同的 **Microsoft 应用 ID** 创建多个机器人。\n\n1. 然后“**审阅 + 创建**”。\n\n   :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/register-bot-2_1.png\" alt-text=\"显示创建 Microsoft 应用 ID 的屏幕截图。\":::\n\n1. 如果已通过验证，请选择“ **创建**”。\n\n    预配机器人服务需要一些时间。 \n\n1. 选择“**转到资源**”。 \n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/created-azure-bot_1.png\" alt-text=\"已创建 Azure 机器人资源。\":::\n\n   Azure 机器人已创建，可以在 Azure 机器人中看到 **资源组** 和 **订阅 ID** 。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/created-azure-bot_2.png\" alt-text=\"已创建 Azure 机器人资源2。\":::\n\n**创建客户端密码**\n\n  如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左窗格中，选择“ **配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n1. 在 **“Microsoft 应用 ID**”旁边，选择“ **管理**”。\n\n   :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/manage-bot-label.png\" alt-text=\"管理\":::\n\n1. 在 **“客户端机密** ”部分中，选择“ **新建客户端密码**”。 \n\n   :::image type=\"content\" source=\"~/assets/images/meetings-side-panel/newclientsecret_1.png\" alt-text=\"显示新客户端密码选择的屏幕截图。\":::\n\n   此时会显示 **“添加客户端密码**”窗口。  \n\n1. 输入客户端密码 **的“说明** ”。\n\n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/add-a-clientsecret_1.png\" alt-text=\"将客户端密码添加到应用。\":::\n\n1. 选择“ **复制到剪贴板** ”以复制 **“值** 详细信息”。\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/client-secret_1.png\" alt-text=\"客户端密码的值。\":::\n\n   \n   > [!TIP]\n   > 保存客户端密码 **值** 或应用密码以供将来参考。\n\n**添加 Teams 频道**\n\n1. 选择“主页”。\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/select-home_1.png\" alt-text=\"主页。\":::\n\n1. 从 **“最近使用的资源**”中选择机器人。\n\n1. 在左窗格中选择“**频道**”，然后选择“**Microsoft Teams**” <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/teams 1.png\" alt-text=\"选择“Teams”。\":::\n\n1. 选中复选框以接受 **服务条款**。\n\n1. 选择“ **同意**”。\n\n   :::image type=\"content\" source=\"~/assets/images/sbs-messagingextension-action/terms.png\" alt-text=\"服务条款\":::\n\n1. 选择“**应用**”。\n\n   :::image type=\"content\" source=\"~/assets/images/Teams-link-unfurling/apply.png\" alt-text=\"显示 Teams 选择的屏幕截图。\":::\n\n\n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n ```bash\n ngrok http --host-header=localhost 3978\n ```\n\n> [!TIP]\n> 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中提供的步骤注册并验证 ngrok。 然后运行 命令 `ngrok http --host-header=localhost 3978` 。\n\n**添加消息传送终结点**\n\n1. 从 ngrok 中，将 HTTPS URL (https 复制到 io) 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-messagingextension-action/ngrok-url.png\" alt-text=\"ngrok HTTPS URL\":::\n\n    > [!NOTE]\n    > ngrok 中的 HTTPS URL 是不包含 `https://`的域名。\n\n1. 在 **设置** 中，选择“**配置**”。\n\n1. 在 **消息终结点** 中，从 ngrok 添加 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/appuri_1.png\" alt-text=\"应用 URI。\":::\n\n1. 选择“**应用**”。\n\n    已成功在 Azure 机器人服务中设置机器人。\n"
- title: 更新 Azure AD 应用注册
  durationInMinutes: 1
  content: "1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“Azure Active Directory”。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/AAD_1.png\" alt-text=\"Azure Directory。\":::\n\n1. 在左侧导航窗格中，选择“ **应用注册**”。\n\n1. 选择机器人。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/app-registerations_2.png\" alt-text=\"应用注册。\":::\n\n1. 在“**管理**”下，选择“**公开 API**”。\n\n1. 选择“ **设置**”。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/set-exposeanapi_2.png\" alt-text=\"公开 API。\":::\n\n1. 以 的形式`api://*******.ngrok.io/{AppID}`设置 **应用程序 ID URI**。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/set-link_1.png\" alt-text=\"set 链接。\":::\n\n   下图显示了域名：\n    \n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/exposeanapi_1.png\" alt-text=\"暴露。\":::\n\n    > [!NOTE]\n    > 如果使用 ngrok 等隧道服务，请确保每当 ngrok 子域更改时更新值。\n    > 例如： `api://*******.ngrok.io/00000000-000-0000-0000-000000000`，其中 `********.ngrok.io` 是新的 ngrok 子域名称。\n\n1. 选择“**添加作用域**”。 \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/Teams-link-unfurling/selectscope_1.png\" alt-text=\"选择作用域\":::\n\n   此时会显示 **“添加范围**”窗口。\n\n1. 输入以下详细信息以配置范围：\n\n     * 输入 `access_as_user` 作为 **作用域名称**。\n\n     * 将 **“谁可以同意？”** 设置为 `Admins and users`。\n\n1. 若要使用适当的范围值 `access_as_user` 配置管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入`Teams can access the user’s profile`作为 **管理员同意显示名称**。\n\n     * 输入`Allows Teams to call the app’s web APIs as the current user`作为 **管理员同意说明**。\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 作为 **用户同意说明**。\n\n1. 将 **“状态”** 设置为 **“已启用**”。\n\n1. 选择 **“添加范围** ”进行保存。\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/addascopeuser_1.png\" alt-text=\"添加范围。\":::\n\n    > [!NOTE]\n    > **作用域名称** 应与末尾追加的应用程序 **ID** URI `/access_as_user` 匹配。</br>\n       `api://*******.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/scopes_1.png\" alt-text=\"范围。\"::: \n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 \n\n1. 选择 **添加客户端应用程序**。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/selectclientapp_1.png\" alt-text=\"显示选择客户端应用程序的屏幕截图。\":::\n\n1. 对于 Teams 移动或桌面应用程序，输入 **客户端 ID**： `1fec8e78-bce4-4aaf-ab1b-5451cc387264` 。 \n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication1.png\" alt-text=\"显示添加客户端应用程序的屏幕截图\":::\n\n   对于 Teams Web 应用程序，可以输入 **客户端 ID**： `5e3ce6c0-2b1f-4285-8d4b-75ee78787346` 。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/addclientapplication2.png\" alt-text=\"添加客户端 ID 的屏幕截图。\":::\n\n1. 选择 **“授权的范围**”。\n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/authorizedscope_1.png\" alt-text=\"添加客户端应用程序 2。\":::\n\n   下图显示了客户端 ID：\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/meetings-side-panel/clientapps.png\" alt-text=\"显示客户端应用的屏幕截图。\"::: \n\n1. 在左窗格中，选择“ **API 权限**”。 \n\n   > [!NOTE]\n   > 仅当 Azure AD 应用在不同租户中注册时，用户才需要同意这些权限。\n\n1. 选择“**添加权限**”。\n\n1. 选择 **Microsoft Graph**。 \n\n    :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/add-permission_2.png\" alt-text=\"添加权限。\" lightbox= \"./assets/images/sbs-messagingextension-action/add-permission_2.png\":::\n\n1. 选择“**委托的权限**”。 \n\n1. 添加以下 API 权限：</br>\n     * **email**\n     * **offline_access**\n     * **Openid**\n     * **个人资料**\n     * **User.Read**\n\n1. 选择 **添加权限**。\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/other-permissions.png\" alt-text=\"其他权限。\":::\n\n1. 在左窗格中，选择“ **身份验证** ”以设置重定向 URI。 \n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员同意，则用户必须在首次使用该应用时提供同意。\n           \n     1. 选择 **添加平台**。\n     1. 选择“Web”\n\n        :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/web_1.png\" alt-text=\"Web。\" lightbox=\"./assets/images/sbs-messagingextension-action/web_1.png\":::\n\n     1. 通过追加`auth-end`到域名，输入应用的 **重定向 URI**：</br> \n       `https://*******.ngrok.io/auth-end`. </br>\n\n     1. 通过选中以下复选框启用 **隐式授予和混合流** ：\n         * **访问令牌(用于隐式流)**\n         * **ID 令牌(用于隐式和混合流)**\n\n     1. 选择“**配置**”。\n\n        :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/authend_1.png\" alt-text=\"身份验证结束。\":::\n"
- title: 设置应用设置和清单文件
  durationInMinutes: 1
  content: "1. 转到克隆存储库中的 **appsettings.json** 。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/appsettingslocation_1.png\" alt-text=\"位置。\":::\n\n1. 在最新版本的 Visual Studio 中打开 **appsettings.json** 并更新以下信息：  \n\n     * 将 替换为 `\"MicrosoftAppType\"` 多租户。\n     * 将 替换为 `\"MicrosoftAppId\"` 机器人的 Microsoft 应用 ID。\n     * 将 替换为 `\"MicrosoftAppPassword\"` 机器人的“客户端机密 ID”值。\n     * 将多租户机器人替换为 `\"MicrosoftAppTenantId\"` 空白。\n     * 将 替换为 `\"BaseUrl\"` ngrok 域名。\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/json-file_1.png\" alt-text=\"Json 文件。\":::\n\n1. 转到克隆存储库中的 **manifest.json** 。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/manifest location.png\" alt-text=\"清单位置。\":::\n\n1. 在最新版本的 Visual Studio 中打开 **manifest.json** 并进行以下更改：\n\n     * `<<validDomains>>`将 替换为 ngrok 域名。\n     * 将 的所有匹配项 `<<Microsoft-App-ID>>` 替换为机器人的 **Microsoft 应用 ID**。\n\n     :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/manifest_1.png\" alt-text=\"清单文件。\" lightbox=\"./assets/images/sbs-messagingextension-action/manifest_1.png\" :::\n"
- title: 生成并运行服务
  durationInMinutes: 1
  content: "**使用最新版本的 Visual Studio 或命令行生成和运行服务**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[最新版本的 Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. 启动最新版本的 Visual Studio。\n   1. 选择“ **文件** > **打开** > **项目/解决方案**”。\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/VSopenfile_1.png\" alt-text=\"打开文件。\":::\n\n   1. 从 **csharp_dotnet** 文件夹中选择 **TeamsMessagingExtensionsAction.csproj** 文件。\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/openproject_1.png\" alt-text=\"打开项目。\":::\n\n   1. 按 **F5** 运行项目。\n\n   1. 如果出现以下对话框，请选择“**是**”：\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/certificate_1.png\" alt-text=\"证书。\":::\n\n      此时会显示一个网页，其中包含 **消息“机器人已准备就绪！”**。\n\n      :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/appisready.png\" alt-text=\"应用就绪。\"::: \n\n    \n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在命令提示符窗口中转到 **示例> csharp_dotnetcore > 51.teams-messaging-extensions-action** 并输入以下命令：\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/sbs-messagingextension-action/dotnetruncmd.png)\n  \n"
- title: 将操作消息扩展应用添加到 Teams
  durationInMinutes: 1
  content: "1. 在克隆的存储库中，转到 **csharp_dotnetcore > 51.teams-messaging-extensions-action > TeamsAppManifest**。\n\n1. 在 **“清单”** 文件夹中使用以下文件创建.zip：\n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n1. 转到 **Microsoft Teams**。\n\n1. 选择“ **应用** > **管理应用** > **”“上传应用** > **上传自定义应用**”。\n\n   :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-messagingextension-action/uploadapp_1.png\" alt-text=\"Zip 文件\":::\n\n1. 选择“ **打开** ”以上传在 **“清单”** 文件夹中创建的.zip文件。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/openzipfile_1.png\" alt-text=\"选择 zip。\":::\n\n1. 选择“**添加**”。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/add_1.png\" alt-text=\"添加应用。\":::\n\n                \n"
- title: 在 Teams 中与应用交互
  durationInMinutes: 1
  content: "1. 从撰写框命令列表中选择 **“创建卡片** ”命令。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/create-card_1.png\" alt-text=\"create card。\":::\n\n1. 在模式弹出窗口中输入卡片信息。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/output-card.png\" alt-text=\"信息。\":::\n\n1. 选择“**提交**”。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/submit.png\" alt-text=\"信息卡。\":::\n\n1. 右键单击卡片。\n   \n1. 选择“ **更多操作** > **共享消息**”。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/sharemessage.png\" alt-text=\"共享卡片。\":::\n\n1. 选中包含图像的复选框，然后选择“ **提交**”。\n\n   :::image type=\"content\" source=\"./assets/images/sbs-messagingextension-action/sharemessageoutput.png\" alt-text=\"提交输出。\":::\n"
- title: 完成挑战
  durationInMinutes: 1
  content: >
    你想出了这样的输出吗？

       :::image type="content" source="./assets/images/sbs-messagingextension-action/sharemessageoutput1.png" alt-text="输出。":::
- content: 你已完成开始使用 **操作消息扩展** 应用的教程！
