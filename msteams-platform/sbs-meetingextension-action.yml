### YamlMime:Tutorial
title: 生成基于操作的消息传递扩展
metadata:
  title: 生成基于操作的消息传递扩展
  description: 本教程介绍如何为Teams设置操作消息传递扩展。
  audience: Developer
  level: Beginner
  ms.date: 24/02/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: messaging-extensions/how-to/action-commands/define-action-command.md
  nextTutorialTitle: 阅读详细信息以启用消息传递扩展操作命令
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 75da0ee4df510659a5adccf4f3e7ddd614592e27
  ms.sourcegitcommit: 61003a14e8a179e1268bbdbd9cf5e904c5259566
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 04/09/2022
  ms.locfileid: "64736929"
items:
- durationInMinutes: 1
  content: "消息传递扩展允许用户与Microsoft Teams客户端中的 Web 服务交互。 它们有助于从撰写消息区域、命令框或直接从消息启动外部系统中的操作。\n\n**基于操作的消息传递扩展的主要功能**\n\n* 向用户显示用于收集或显示信息的模式弹出窗口。\n* 从撰写消息区域、命令框或消息触发操作命令。 \n\n本分步指南可帮助你生成基于操作的Teams消息扩展，以从撰写消息和消息区域启动操作。 你将看到以下输出：\n   \n  ![输出](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)\n"
- title: 先决条件
  durationInMinutes: 1
  content: "确保安装以下工具并设置开发环境：  \n\n* [使用](https://teams.microsoft.com/)有效帐户Microsoft Teams\n* [.NET Core SDK](https://dotnet.microsoft.com/download) 版本 3.1\n* [最新版本的Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [ngrok](https://ngrok.com/download) 最新版本 (仅用于开发人员箱测试) 或任何等效的隧道解决方案\n\n  > [!NOTE]\n  > 下载 ngrok 后，注册并安装 [身份验证](https://ngrok.com/download)。\n"
- title: 设置本地环境
  durationInMinutes: 1
  content: "将存储库克隆`BotBuilder-Samples`到本地GitHub：  \n\n 1. 打开 [BotBuilder-Samples](https://github.com/Microsoft/BotBuilder-Samples)。\n 1. 选择 **“代码**”。\n 1. 在下拉菜单中，选择 **“打开并GitHub桌面**”。\n\n    ![克隆存储库](~/assets/images/sbs-messagingextension-action/botbuilder-sample.png)\n\n 1. 选择 **“克隆**”。 \n"
- title: 在Azure AD门户中创建和注册机器人
  durationInMinutes: 5
  content: "若要在Microsoft Azure Active Directory (Azure AD) 中创建和注册机器人，请使用 ngrok 创建隧道并添加消息传送终结点，请执行以下步骤：\n\n* 创建 Azure 机器人资源以将机器人注册到 Azure 机器人服务。\n* 创建客户端机密以启用机器人的 SSO 身份验证。\n* 添加Teams通道以将机器人部署到Teams通道。\n* 使用 ngrok 创建到 Web 服务器终结点的隧道。\n* 将消息传送终结点添加到创建的 ngrok 隧道。\n\n**创建 Azure 机器人资源**\n\n1. 转到[Microsoft Azure门户](https://portal.azure.com/)。\n1. 选择“**创建资源**”。\n1. 在搜索框中，输入 **Azure 机器人**。\n1. 选择 **Enter**。\n1. 选择 **Azure 机器人**。\n\n     ![创建 Azure 机器人卡](~/assets/images/sbs-messagingextension-action/azure-bot.png)\n\n1. 选择“**创建**”。\n1. 在 **机器人句柄** 中输入所需的机器人句柄名称。\n1. 从下拉列表中选择 **订阅** 。\n1. 从下拉列表中选择 **资源组** 。 \n\n    ![选择资源 Azure 机器人](~/assets/images/sbs-messagingextension-action/create-azurebot.png) \n\n   还可以创建新的资源组 (选择 **“新建** >输入资源名称>选择 **”确定** “) 。\n\n1. 在 **“Microsoft 应用 ID”** 部分中，默认选择 **“新建 Microsoft 应用 ID** ”。 \n \n   可以选择 **“使用现有应用注册** ”并输入 **现有应用 ID** 和 **现有应用密码**，也可以选择 **“创建新的 Microsoft 应用 ID**”。\n\n   > [!NOTE]\n   > 不能创建具有相同 **Microsoft 应用 ID** 的多个机器人。\n\n1. 在 **机器人类型** 下选择 **多租户**。\n\n    ![类型](~/assets/images/sbs-messagingextension-action/bot-type.png)\n\n1. 然后“**审阅 + 创建**”。\n\n    ![创建 Microsoft 应用 ID](~/assets/images/sbs-messagingextension-action/review-create.png)\n\n1. 如果验证通过，请选择 **“创建**”。 \n\n    预配机器人服务需要一些时间。 \n\n1. 选择“**转到资源**”。 \n\n    ![部署应用](~/assets/images/sbs-messagingextension-action/resource-file.png)\n\n    Azure 机器人已创建。\n\n    ![创建的 Azure 机器人资源](assets/images/sbs-messagingextension-action/created-azure-bot.png)\n\n**创建客户端机密**\n\n  如果已创建新的 **Microsoft 应用 ID**，请执行以下步骤：\n\n1. 在左侧面板中，选择 **“配置**”。 \n\n   > [!TIP]\n   > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 以供将来参考。\n\n1. 在 **Microsoft 应用 ID** 旁边，选择 **“管理**”。\n\n    ![Microsoft 应用 ID](~/assets/images/sbs-messagingextension-action/manage.png)\n\n1. 在 **“客户端机密** ”部分中，选择 **“新建客户端机密**”。 \n\n    ![新客户端机密](~/assets/images/sbs-messagingextension-action/adding-client-secret.png)\n\n   将显示 **“添加客户端机密** ”窗口。  \n\n1. 输入 **说明**。\n\n1. 选择“**添加**”。\n\n    ![将客户端机密添加到应用](~/assets/images/sbs-messagingextension-action/add-a-clientsecret.png)\n\n1. 在 **“值** ”列中，选择 **“复制到剪贴板**”。\n\n     ![客户端机密的值](~/assets/images/sbs-messagingextension-action/client-secret.png)\n   \n   > [!TIP]\n   > 保存 **客户端机密** 值或应用密码以供将来参考。\n\n**添加Teams通道**\n\n1. 选择“主页”。\n\n    ![主页](~/assets/images/sbs-messagingextension-action/select-home.png)\n\n1. 从 **最近的资源** 中选择机器人。\n\n1. 在左窗格中选择 **“通道** ”。 \n\n1. 选择 **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. 选中该复选框以接受 **服务条款**。\n\n1. 选择 **“同意**”。\n\n      ![服务条款](~/assets/images/sbs-messagingextension-action/agree.png)\n\n1. 选择“保存”。\n\n      ![选择Teams](~/assets/images/sbs-messagingextension-action/configure-msteams.png)   \n\n**为本地 Web 服务器创建隧道**\n\n使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n> [!TIP]\n> 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中提供的步骤注册 ngrok 并进行身份验证。 然后运行该 `ngrok http -host-header=localhost 3978` 命令。\n\n**添加消息传送终结点**\n\n1. 从 ngrok 将 HTTPS URL (https 复制到 io) 。\n\n    ![ngrok HTTPS URL](~/assets/images/sbs-messagingextension-action/ngrok.png)\n\n    > [!NOTE]\n    > ngrok 中的 HTTPS URL 是完全限定的域名。\n    > 这是 `WebAppDomain` 一个完全限定的域名，不包括 `https://` 在其中。\n\n1. 在 **创建的** Azure 机器人的设置中，选择 **“配置**”。\n\n1. 在 **消息传送终结点** 中，使用 ngrok 提供的 HTTPS URL，并在 URL 末尾添加 **/api/messages**。\n\n    ![应用 URI](~/assets/images/sbs-messagingextension-action/appuri.png)\n\n1. 选择“**应用**”。\n\n    已在 Azure 机器人服务中成功设置机器人。\n"
- title: 更新Azure AD应用注册
  durationInMinutes: 1
  content: "1. 转到“[Azure 门户](https://portal.azure.com/)”。\n\n1. 选择“Azure Active Directory”。\n\n1. 在左侧导航面板中，选择 **“应用注册**”。\n\n1. 选择机器人。\n\n   ![应用注册](~/assets/images/sbs-messagingextension-action/app.-registerations.png)\n\n1. 在“**管理**”下，选择“**公开 API**”。\n\n1. 选择 **“设置**”。\n\n   ![公开 API](~/assets/images/sbs-messagingextension-action/set-exposeanapi.png)\n\n1. 设置应用程序 **ID URI** 的形式 `api://{AppID}`。\n\n   ![设置链接](~/assets/images/sbs-messagingextension-action/set-link.png)\n\n1. 在两者`WebAppDomain`之间`api://``/{AppID}`插入值。</br>\n    `api://2bb1****.ngrok.io/{AppID}`</br>\n    \n   下图显示了域名：\n    \n    ![暴露](~/assets/images/sbs-messagingextension-action/exposeanapi.png)\n\n    > [!NOTE]\n    > 如果使用的是隧道服务（如 ngrok），请确保在 ngrok 子域发生更改时更新该值。\n    > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，新的 ngrok 子域名称在哪里 `f631****.ngrok.io` 。\n\n1. 选择“**添加作用域**”。 \n\n   ![选择范围](~/assets/images/sbs-messagingextension-action/addascope.png)\n\n1. 在显示的面板中，输入 `access_as_user` 为 **范围名称**。\n\n1. 设置 **Who是否可以同意？** `Admins and users`\n\n1. 若要配置具有相应作用域值 `access_as_user` 的管理员和用户同意提示，请在字段中提供以下信息：</br>\n\n     * 输入 `Teams can access the user’s profile` 为 **管理员同意显示名称**。\n\n     * 输入 `Allows Teams to call the app’s web APIs as the current user` 为 **管理员同意说明**。\n\n     * 输入 `Teams can access the user profile and make requests on the user’s behalf` 为 **用户同意显示名称**。\n\n     * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 为 **用户同意说明**。\n\n1. 确保将“状态”设置为“已启用”。\n\n1. 选择 **“添加范围** ”以保存。\n\n    ![添加范围](~/assets/images/sbs-messagingextension-action/addascopeuser.png)\n\n    > [!NOTE]\n    > **范围名称** 应与应用程序 **ID** URI 匹配，`/access_as_user`并追加在末尾。</br>\n       `api://2bb1****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`\n\n    ![Scopes](~/assets/images/sbs-messagingextension-action/scopes.png) \n\n1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 \n\n1. 选择 **添加客户端应用程序**。 \n\n    ![选择客户端应用程序](~/assets/images/sbs-messagingextension-action/clientapps.png) \n\n1. 输入 **客户端 ID**：`1fec8e78-bce4-4aaf-ab1b-5451cc387264`适用于Teams移动或桌面应用程序。 \n\n    ![添加客户端应用程序 1](~/assets/images/sbs-messagingextension-action/addclientapplication1.png) \n\n   可以输入 **客户端 ID**：`5e3ce6c0-2b1f-4285-8d4b-75ee78787346`用于Teams Web 应用程序。\n\n    ![添加客户端应用程序 2](~/assets/images/sbs-messagingextension-action/addclientapplication2.png) \n\n1. 选择 **“已授权”范围**。\n\n    ![添加客户端应用程序 2](~/assets/images/sbs-messagingextension-action/authorizedscope.png) \n\n   下图显示客户端 ID：\n\n    ![客户端应用程序](~/assets/images/sbs-messagingextension-action/clientapp.png) \n\n1. 在左侧面板中，选择 **API 权限**。 \n\n   > [!NOTE]\n   > 仅当Azure AD应用在其他租户中注册时，用户才需要同意这些权限。\n\n1. 选择“**添加权限**”。\n\n    ![添加权限](~/assets/images/sbs-messagingextension-action/addpermission.png)\n\n1. 选择 **Microsoft Graph**。\n\n1. 选择“**委托的权限**”。\n\n1. 添加以下权限：</br>\n     * **email**\n     * **offline_access**\n     * **OpenId**\n     * **个人资料**\n     * **User.Read**\n\n1. 选择 **添加权限**。\n\n     ![其他权限](~/assets/images/sbs-messagingextension-action/other-permissions.png)\n\n1. 在左侧面板中，选择 **“身份验证** ”以设置重定向 URI。 \n\n   > [!NOTE]\n   > 如果未向应用授予 IT 管理员许可，则用户必须在第一次使用应用时提供同意。\n           \n     1. 选择 **添加平台**。\n     1. 选择“Web”\n\n        ![Web](~/assets/images/sbs-messagingextension-action/web.png)\n\n     1. 通过追加到完全限定的域名，输入应用的 `auth-end` 重定向 URI：</br> \n       `https://2bb1****.ngrok.io/auth-end`. </br>\n\n     1. 通过选择以下复选框启用 **隐式授予和混合流** ：\n         * **ID 令牌**\n         * **访问令牌**\n\n     1. 选择“**配置**”。\n\n        ![Auth-end](~/assets/images/sbs-messagingextension-action/authend.png)\n"
- title: 设置应用设置和清单文件
  durationInMinutes: 1
  content: "1. 导航到克隆存储库中的 **appsettings.json** 。\n\n    ![应用设置位置](~/assets/images/sbs-messagingextension-action/appsettingslocation.png)\n\n1. 在最新版本的 Visual Studio 中打开 **appsettings.json**，并更新以下信息：  \n\n     * 设置 `\"MicrosoftAppType\"` 为 **MultiTenant**。\n     * 设置 `\"MicrosoftAppId\"` 为机器人的 **Microsoft 应用 ID**。\n     * 设置`\"MicrosoftAppPassword\"`为机器人 **的客户端机密 ID** 的 **值**。\n     * `\"MicrosoftAppTenantId\"`将 MultiTenant 机器人留空。\n     * 设置 `\"BaseUrl\"` 为完全限定的域名。\n\n    ![应用设置](~/assets/images/sbs-messagingextension-action/json-file.png)\n\n1. 在克隆的存储库中导航到 `manifest.json` 。\n\n    ![清单文件位置](~/assets/images/sbs-messagingextension-action/manifestlocation.png)\n\n1. 在最新版本的Visual Studio中打开`manifest.json`并进行以下更改：\n\n     * `<<validDomains>>`替换为完全限定的域名。\n     * 将所有事件 `<<Microsoft-App-ID>>` 替换为机器人的 **Microsoft 应用 ID**。\n\n    ![清单映像 2](~/assets/images/sbs-messagingextension-action/botid1.png)\n"
- title: 生成并运行服务
  durationInMinutes: 1
  content: "**使用最新版本的 Visual Studio 或命令行生成和运行服务**\n\n# <a name=\"latest-version-of-visual-studio\"></a>[最新版本的Visual Studio](#tab/latestversionofvisualstudio)\n\n   1. 启动最新版本的Visual Studio。\n   1. 导航到 **FileOpen** >  >  **Project/解决方案**。\n\n      ![打开文件](~/assets/images/sbs-messagingextension-action/VSopenfile.png)\n\n   1. 从 **csharp_dotnet** 文件夹中选择 **TeamsMessagingExtensionsAction.csproj** 文件。\n\n      ![解决方案文件](~/assets/images/sbs-messagingextension-action/openproject.png)\n\n   1. 按 **F5** 运行项目。\n\n   1. 如果出现以下对话框，请选择“**是**”：\n\n      ![信任证书](~/assets/images/sbs-messagingextension-action/certificate.png)\n\n      随即会打开一个网页，其中包含一条消息：**机器人已就绪！**\n\n      ![应用准备就绪](~/assets/images/sbs-messagingextension-action/appisready.png) \n\n    \n# <a name=\"command-line\"></a>[命令行](#tab/cli)\n\n在命令提示符窗口中导航到 **示例> csharp_dotnetcore > 51.teams-messaging-extensions-action** ，并输入以下命令：\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/sbs-messagingextension-action/dotnetruncmd.png)\n  \n"
- title: 将操作消息传递扩展应用添加到Teams
  durationInMinutes: 1
  content: "1. 在克隆的存储库中，导航到 **csharp_dotnetcore > 51.teams-messaging-extensions-action > TeamsAppManifest**。\n\n1. 使用 **清单** 文件夹中存在的以下文件创建.zip： \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Zip 文件](~/assets/images/sbs-messagingextension-action/zipfile.png) \n\n1. 转到 **Microsoft Teams**。\n\n1. 选择“**应用**”。\n\n1. 选择 **“管理应用**”。\n\n1. 选择“**上传自定义应用**”。\n\n   ![上传](~/assets/images/sbs-messagingextension-action/uploadacustomapp1.png)\n\n1. 选择 **“打开** ”以上传在 **清单** 文件夹中创建的.zip文件。\n\n   ![选择 zip 文件](~/assets/images/sbs-messagingextension-action/openzipfile.png)\n\n1. 选择“**添加**”。\n\n   ![添加应用](~/assets/images/sbs-messagingextension-action/add.png)\n\n                \n"
- title: 在 Teams 中与应用交互
  durationInMinutes: 1
  content: "1. 从撰写框命令列表中选择 **“创建卡片** ”命令。\n\n   ![卡](~/assets/images/sbs-messagingextension-action/create-card.png)\n\n1. 在模式弹出窗口中输入信息。\n\n   ![信息](~/assets/images/sbs-messagingextension-action/output-card.png)\n\n1. 选择“**提交**”。\n\n   ![submit](~/assets/images/sbs-messagingextension-action/submit.png)\n\n1. 从溢出菜单中选择 (...) 。\n   \n1. 导航到 **“更多”操作**。\n\n1. 选择 **“共享消息**”。\n\n   ![共享卡](~/assets/images/sbs-messagingextension-action/sharemessage.png)\n\n1. 如果需要包含图像并提交，请选中复选框。\n\n   ![输出](~/assets/images/sbs-messagingextension-action/sharemessageoutput.png)\n"
- title: 完成质询
  durationInMinutes: 1
  content: >
    你想出了这样的事吗？

       ![输出](~/assets/images/sbs-messagingextension-action/sharemessageoutput1.png)
- content: 你已完成本教程以开始使用 **操作消息传递扩展** 应用！
