### YamlMime:Tutorial
title: 使用 C 生成你的第一个应用#
metadata:
  title: 使用 C 的 Hello World#
  description: 本教程介绍如何使用应用生成 Hello World C#。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 返回到入门概述
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 2011a6849d19262583f2002b89633bf2cc965213
  ms.sourcegitcommit: 9bdd930523041377b52dadffbd8cd52a86a047d7
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 02/08/2022
  ms.locfileid: "62443963"
items:
- durationInMinutes: 1
  content: >
    通过Microsoft Teams选项卡、机器人和消息扩展功能构建你的第一个应用，开始开发应用。


    >此应用将具有所有功能，并且每个功能都有其自己的 UI 和 UX：


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="显示此应用程序的图表具有三个功能。" border="false":::


    在本教程中，你将了解：


    - 如何设置新项目

    - 如何使用 2019 和 2019 版本构建三个功能不同的应用-选项卡、机器人和消息C#Visual Studio扩展

    - 如何从开发人员门户部署应用
- title: 必备条件
  durationInMinutes: 1
  content: "以下是生成和部署应用所需的工具Teams列表。\n\n| &nbsp; | 安装 | 对于使用... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> 安装以下两个工作负荷之一：<br> • **ASP.NET 和 Web 开发** <br> • **.NET Core 跨平台开发** | .NET。 还可以安装 2019 年 Visual Studio 免费社区版，并安装工作负载。 |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git 使用示例C#应用程序存储库GitHub。 |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams对话 (消息扩展应用程序功能) 入站连接。 你需要通过隧道公开开发系统Teams连接。 仅包含选项卡的应用不需要隧道。 此包安装在项目目录中， (npm `devDependencies`) 。 |\n| &nbsp; | [Teams 工具包](#install-teams-toolkit) | 为Visual Studio创建项目基架的 2019 扩展。 使用最新版本。 |\n| &nbsp; | [Teams 开发人员门户](https://dev.teams.microsoft.com/) | 基于 Web 的门户，用于配置、管理和分发你的 Teams 应用，包括你的组织或 Teams 商店。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams通过聊天、会议、通话等应用与合作的所有人员进行协作- 全部在一个地方进行。 |\n| **可选** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) and [Microsoft Azure CLI](/cli/azure/install-azure-cli) | Azure 工具，用于访问已存储数据或在 Azure 中为 Teams应用部署基于云的后端。 |\n|\n\n## <a name=\"verify-git-installation\"></a>验证 git 安装\n\n如果Visual Studio提示您添加到路径，`git`请选择它。 \n\n若要验证安装的 git 版本，请运行以下命令：\n\n1. 打开终端窗口。 \n2. 运行以下命令以验证 `git` 计算机上安装的版本：\n\n    ```bash\n    $ git --version\n    ```\n\n    输出示例： `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>安装Teams Toolkit\n\nTeams Toolkit工具为应用创建项目基架，从而有助于简化开发过程。 它创建所有选定功能的必要目录结构，并准备好生成项目所需的文件。\n\nTeams Toolkit 2019 扩展Visual Studio版本。\n\n若要安装Teams Toolkit扩展：\n\n1. 打开Visual Studio 2019 并选择 **ExtensionsManage** >  **Extensions**。\n1. 在搜索框中，输入\"**Teams Toolkit\"**。\n1. 选择 **\"** 下载\"选项Teams Toolkit。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"图像显示安装Teams Toolkit\"::: \n\n    这些更改在 2019 年 10 月Visual Studio可用。 这是必需的，因为 2019 Visual Studio安装扩展后必须重新启动。\n\n1. 选择“**关闭**”。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"图像显示已完成的安装Teams Toolkit\":::\n\n1. 关闭Visual Studio 2019。\n    \n    VSIX 安装程序将打开，并包含安装扩展的说明。\n\n1. 按照 VSIX 安装程序的说明完成工具包的安装。\n1. 再次Visual Studio 2019。\n\nthe Teams Apps will be available as a template in Visual Studio 2019.\n\n您还可以在 Teams Toolkit 商店Visual Studio Code[应用程序](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit)。\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>设置开发Teams租户\n\n租户 **就像** 租户中的空间或组织的容器Teams聊天、共享文件和运行会议。 此空间也是你旁加载和测试应用的地方。 让我们验证你是否已准备好使用租户进行开发。\n\n### <a name=\"check-for-sideloading-option\"></a>检查旁加载选项\n\n创建应用后，必须在不分配应用的情况下Teams加载应用。 此过程称为旁加载。 登录到你的 Microsoft 365 帐户以查看此选项。\n\n> [!NOTE]\n> 在本地环境中预览和测试应用时，需要Teams加载。 如果未启用，你将无法在本地预览和测试Teams应用。\n\n你已拥有租户，是否具有管理员访问权限？ 让我们看一下你是否确实要这样做！\n\n验证你能否在应用中旁加载Teams：\n\n1. 在\"Teams\"客户端中，选择 **\"应用商店图标**\"。\n1. 选择 **\"管理应用\"**。\n1. 查找用于自定义 **Upload的选项**。 如果看到 选项，则启用旁加载应用。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"插图显示用于上传自定义应用的选项Teams。\":::\n\n    > [!NOTE]\n    > 如果Teams显示上传自定义应用的选项，请与管理员Teams联系。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>创建一个Teams开发人员租户 (可选) \n\n如果你没有帐户，Teams免费帐户。 加入开发人员Microsoft 365计划！\n\n1. 转到开发人员[Microsoft 365计划](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. 选择 **立即加入** 并按照屏幕上的说明进行操作。\n1. 在欢迎屏幕中，选择 **\"设置 E5 订阅\"**。\n1. 设置管理员帐户。 完成后，将显示以下屏幕。\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"注册开发人员计划后看到Microsoft 365的示例。\":::\n\n1. 使用刚Teams的管理员帐户登录登录。 验证你已Upload **自定义应用** 选项Teams。\n\n## <a name=\"get-a-free-azure-account\"></a>获取免费的 Azure 帐户\n\n如果你想要在 Azure 中托管应用或访问资源，则必须拥有 Azure 订阅。 [在开始之前创建](https://azure.microsoft.com/free/) 一个免费帐户。\n\n现在，你已获得所有工具并设置帐户。 接下来，让我们设置开发环境并开始构建！\n\n> [!NOTE]\n> 在平台上使用合适的终端窗口。 这些示例使用 Git Bash，但可在大多数平台上运行。\n\n打开最新版本的 Visual Studio并安装任何更新。\n\n可以使用同一终端窗口运行本教程中的命令。\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>下载示例\n\n对于本教程，请使用 [Hello， World！](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) C# 示例。 你可以从文件下载并GitHub。\n\n若要使用此示例，请采用以下方法之一克隆示例存储库：\n\n- [使用 Git Bash](#to-use-git-bash-to-clone-the-sample-repo)\n- [使用 Visual Studio 2019](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>使用 Git Bash 克隆示例存储库\n\n- 在终端窗口中运行以下命令，将示例存储库克隆到计算机：\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    在默认位置C#计算机上克隆应用的示例存储库。\n\n    > [!TIP]\n    > 您可以[分叉](https://help.github.com/articles/fork-a-repo/)此[存储库以](https://github.com/OfficeDev/Microsoft-Teams-Samples)修改所做的更改并将其保存到GitHub。\n\n    <a name=\"BuildRun\"></a>\n\n    您可以通过在 2019 年 10 月中打开克隆Visual Studio存储库。 \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>使用 Visual Studio 2019 克隆示例存储库\n\n1. 打开Visual Studio 2019。\n1. 选择 **克隆存储库**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"c# Teams应用的克隆示例存储库\" border=\"false\":::\n\n1. 输入 `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` 作为克隆存储库的路径：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"c# Teams应用的克隆示例存储库\" border=\"false\":::\n\n1. 输入要克隆存储库的位置，**然后选择克隆。**\n\n    将克隆示例存储库，Visual Studio打开。 您可以在\"解决方案资源管理器\"中查看克隆 **的存储库**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"已克隆应用的 c# Teams存储库\" border=\"false\":::\n\n现在，你已经克隆了示例存储库，让我们生成你的第一个C#应用程序Teams。\n"
- title: 生成并运行你的第一个C#应用
  durationInMinutes: 1
  content: "\n克隆示例应用的存储库C#，可以在本地环境中生成并运行该应用。\n\n在此页中，你将了解：\n1. [构建首个应用](#build-your-first-app)\n1. [在本地部署示例应用](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>构建首个应用\n\n创建工作区后，可以在\"解决方案 **资源管理器** \"中查看项目结构。 现在，你要生成并运行你的应用。\n\n**生成并运行克隆的示例**\n\n1. 打开解决方案文件 **Microsoft.Teams。示例的** **Microsoft-Teams-Samples/samples/app-hello-world/csharp** 目录中的 Samples.HelloWorld.sln。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"显示 Hello World 解决方案目录结构的图像\" border=\"false\":::\n\n1. 选择\"**Project**\"菜单，然后选择 **\"Microsoft.Teams\"。Samples.HelloWorld.Web 属性**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"显示用于Project选择属性选项的菜单的图像\" border=\"false\":::\n\n1. 从 **\"属性** \"窗口的左窗格中选择 **\"调试** \"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"显示&quot;属性&quot;窗口的图像\" border=\"false\":::\n\n1. 在屏幕中移动以查看 **Web 服务器设置**。\n\n1. 在\"调试\"窗格中 **进行以下** 设置：\n    - 将 **应用 URL 设置为** `http://localhost:3333/`。\n    - 清除 **\"启用 SSL\"**。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"显示项目属性的 Web C#设置的图像\" border=\"false\":::\n\n1. 从 **\"生成\"菜单中** 选择\" **生成解决方案** \"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"显示已完成生成的图像\" border=\"false\":::\n\n1. 选择 **F5** 键，或者从\"调试 **\"** 菜单中选择\"开始调试\"以运行示例。\n\n    当应用启动时，将打开浏览器窗口。 它显示应用的根。 你可以转到以下 URL 以验证是否正在加载所有应用 URL：\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"显示本地主机的图像\" border=\"false\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"显示应用的 Hello 页面的图像\" border=\"false\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"显示应用的第一个选项卡的图像\" border=\"false\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"显示应用的第二个选项卡的图像\" border=\"false\":::\n\n    > [!Note]\n    > 如果收到错误， `Could not find a part of the path … bin\\roslyn\\csc.exe`则使用 命令 更新程序包 `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`。\n\n## <a name=\"deploy-your-sample-app-locally\"></a>在本地部署示例应用\n\nMicrosoft Teams应用程序是提供一个或多个功能的 Web 应用程序。 使你的应用在 Internet 上可用，以便Teams加载它。 使用 托管应用 `ngrok` ，以创建到计算机上本地进程的隧道。\n\n托管应用后，记下其根 URL，如 `https://yourteamsapp.ngrok.io` 或 `https://yourteamsapp.azurewebsites.net`。\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunnel ngrok\n\n安装 ngrok 后，可以创建一个隧道以在本地部署应用：\n\n1. 打开一个新的终端窗口。\n1. 运行以下命令以创建隧道。 示例应用使用端口 3333。\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    将创建 ngrok 隧道。 下面是一个示例：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"显示 ngrok 隧道的图像\" border=\"false\":::\n\n    你可以尝试将 、 `hello``first`或 `second` 添加到 ngrok 隧道 URL 以查看应用的不同选项卡页。\n    \n    Ngrok 侦听来自 Internet 的请求，将它们路由到在端口 3333 上运行的应用。\n\n验证应用的本地部署：\n\n1. 打开浏览器。\n1. 使用下面的 URL 加载应用：\n\n    `https://<forwarding address in ngrok console session>/`\n\n    下面是 URL 的示例：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"显示在本地C# ngrok 隧道运行的应用的图像\" border=\"false\":::\n\n1. 记下 ngrok 控制台中的转发地址。 你需要此 URL 以在 Teams 中部署应用。\n\n    > [!NOTE]\n    > 如果你在生成期间使用了其他端口，请确保使用相同的[](#build-your-first-app)端口号来设置`ngrok`隧道。\n    > [!TIP]\n    > 建议在不同的终端窗口中 `ngrok` 运行。 当你需要停止 `ngrok` 、重新生成和重新运行应用时，这有助于避免干扰应用。 会话 `ngrok` 在此窗口中提供有用的调试信息。\n    > [!IMPORTANT]\n    > 如果你使用 ngrok 的免费版本，你的应用将仅在开发计算机上当前会话期间可用。 如果计算机关闭或进入睡眠状态，则不可用。 重新启动该服务时，它将返回一个新地址。 然后，您必须更新使用过时地址的每一个位置。 在共享应用进行测试时，请记住此步骤。\n"
- title: 使用开发人员门户C#第一个应用
  durationInMinutes: 1
  content: "\n可以使用开发人员[门户](https://dev.teams.microsoft.com/)将应用包上载到Teams配置应用功能。 开发人员门户是Teams应用程序，可简化应用程序的创建和注册。 从应用商店Teams安装！\n\n生成并测试你的 Teams 应用后，可以使用开发人员门户对其进行配置和预览。\n\n在此页面中，你将了解如何在 [开发人员门户中配置应用包](#configure-the-app-package-in-developer-portal)。\n\n<details>\n<summary>2019 Visual Studio发布选项</summary>\n\n本教程使用开发人员门户配置应用功能和发布应用。 \n\n但是，Visual Studio 2019 内置支持将应用部署到不同的提供程序，包括 Azure：\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"显示 2019 年 Visual Studio Azure 菜单项的图像\" border=\"false\":::\n\nMicrosoft Azure免费层托管 .NET 应用程序。 它使用足以运行示例的共享 `Hello World` 基础结构。 有关详细信息，请参阅 [创建新的免费 Azure 帐户](https://azure.microsoft.com/free/)。\n\n如果使用此选项，可以输入 Azure 网站和 Azure 资源的详细信息并发布应用。 \n\n对于本教程，无需使用此步骤。\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>在开发人员门户中配置应用包\n\n可以使用开发人员 [门户](https://dev.teams.microsoft.com/) 配置应用包及其功能。 开发人员门户是Teams应用程序，可简化应用程序的创建和注册。 从应用商店Teams安装！\n\n配置应用包包括：\n\n1. [将应用包导入开发人员门户](#import-the-app-package-in-developer-portal)\n1. [配置应用功能](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>在开发人员门户中导入应用包\n\n若要导入应用包：\n\n1. 打开 Microsoft Teams。\n\n1. 从 **左侧栏中**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::选择\"应用商店\"图标。\n\n1. 在搜索 **栏中搜索** 开发人员门户，然后选择\" **开发人员门户\"**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"选择开发人员门户应用\" border=\"false\":::\n\n1. 选择 **“打开”**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"显示打开的开发人员门户应用的图像\" border=\"false\":::\n\n    开发人员门户将打开。\n\n1. 选择\" **应用\"** 选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"开发人员门户应用\" border=\"false\":::\n\n1. 选择 **\"导入应用\"**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"显示&quot;导入应用&quot;按钮的图像\" border=\"false\":::\n\n1. 从示例 **存储库helloworldapp.zip** 结构中的以下路径C#包包：\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    Hello **World** 应用在开发人员门户中导入。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"显示已导入应用程序Teams\" border=\"false\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>在开发人员门户中浏览你的应用\n\n将应用导入开发人员门户后，可以查看其详细信息，包括清单文件。\n\n#### <a name=\"view-app-information\"></a>查看应用信息\n\n1. 从 **开发人员门户** 的左窗格中选择基本信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"图像显示开发人员门户的左窗格\" border=\"false\":::\n\n1. 请注意基本信息中的以下信息：\n    - 应用程序 ID\n    - 开发人员信息\n    - 应用 URL\n\n1. 从 **左窗格中** 选择\"品牌\"以查看品牌信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"显示应用品牌信息的图像\" border=\"false\":::\n\n    如果你要编写要分发的新应用，这些详细信息非常重要。\n\n#### <a name=\"view-app-features\"></a>查看应用功能\n\n- 从 **开发人员门户** 的左窗格中选择应用功能。\n\n    应用程序功能显示在右侧窗格中。 可以查看个人应用、自动程序以及邮件扩展的卡片。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"显示应用功能的图像\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>查看应用清单\n\n使用清单文件为应用配置功能、必需资源和重要属性。\n\n查看应用清单：\n\n- 从 **左侧** 面板中选择\"发布\"以打开下拉列表，然后选择应用 **包**。\n    \n    清单文件显示在右侧窗格中。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"显示开发人员门户中的应用清单文件的图像\" border=\"false\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>配置应用功能\n\n将应用导入开发人员门户后，下一步是配置应用功能。 开发人员门户包含不同部分中的所有应用信息。 它使配置应用功能变得简单。\n\n使用开发人员门户，你可以：\n- [配置个人选项卡应用](#configure-personal-tab-app)\n- [配置自动程序](#configure-bot)\n- [配置邮件扩展](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>配置个人选项卡应用\n\n配置个人选项卡应用：\n\n1. 选择\" :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: 应用功能\"窗格 **上** \"个人\"应用卡 **上的图标** ，然后选择\"编辑 **\"**。\n\n    将显示 Hello 选项卡的详细信息。\n\n1. 选择 Hello :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: 选项卡的图标， **然后选择\"编辑** \"打开应用详细信息以进行更新。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"显示 Hello 选项卡菜单的图像\" border=\"false\":::\n\n1. 在将选项卡添加到你的个人应用中，输入 Hello **选项卡的应用详细信息**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"显示 Hello 选项卡详细信息的图像\" border=\"false\":::\n\n    输入以下详细信息：\n    - **名称**：Hello 选项卡。\n    - **内容 URL** **和网站 URL**：ngrok 控制台会话中的转发地址。\n    - **上下文**：选择 **\"个人\"选项卡**。\n\n1. 选择“**更新**”。\n\n    \"Hello\"选项卡的详细信息显示在\"个人 **\"应用程序窗格中** 。\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"显示要保存的 Hello 选项卡详细信息的图像\" border=\"false\":::\n\n    \" **个人应用程序** \"窗格现在显示自动创建的新选项卡和\"关于\"选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"显示&quot;Hello&quot;选项卡和&quot;关于&quot;选项卡详细信息的图像\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>配置自动程序\n\n将聊天机器人功能添加到你的应用很简单。 Hello World 示例应用已包含自动程序，但你必须使用自动程序Teams。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"显示无应用 ID 导入的自动程序应用的图像\" border=\"false\":::\n\n从示例导入的机器人没有关联的应用 ID。 你将需要将其删除，并创建新的自动程序。 开发人员门户创建新的应用 ID，并注册Teams。\n\n添加和配置自动程序涉及：\n\n1. [添加新机器人](#to-add-a-new-bot)\n1. [将机器人添加到应用](#to-add-bot-to-app)\n1. [配置自动程序作用域](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>添加新机器人\n\n1. 选择\" :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: 应用功能\"窗格上 **\"** 自动程序\"卡 **上的图标** ，然后选择\"删除 **\"**。\n\n1. 选择 **\"工具** \"以添加功能。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"显示&quot;工具&quot;选项的图像\" border=\"false\":::\n\n1. 选择 **\"工具\"窗格** 上的 **\"自动程序管理** \"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"显示自动程序管理窗格的图像\" border=\"false\":::\n\n1. 选择 **\"自动程序管理** \"窗格中的\"+ **新建自动程序** \"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"显示新自动程序选项的图像\" border=\"false\":::\n\n1. 输入适用于自动程序的名称，然后选择\"添加 **\"**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"显示如何添加机器人的图像\" border=\"false\":::\n\n    The **Configure** pane appears showing details of the new bot in the left pane.\n\n1. 从控制台输入转发 URL `ngrok` ，然后选择\"保存 **\"**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"显示如何添加自动程序终结点的图像\" border=\"false\":::\n\n1. 选择 **\"客户端** 密码\"，然后选择 **\"将客户端** 密码添加到机器人\"，为机器人生成密码。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"显示&quot;客户端密码&quot;部分的图像\" border=\"false\":::\n\n    开发人员门户为自动程序生成密码。\n\n    可以使用图标 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: 复制密码。 对于本教程，你无需复制它。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"显示生成的客户端密码的图像\" border=\"false\":::\n\n1. 选择“确定”。\n\n1. 选择 **<自动** 程序\"返回到 **自动程序管理** 窗格。\n\n    自动 **程序管理** 窗格显示使用应用 ID 添加的新自动程序。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"显示具有应用 ID 的新自动程序的图像\" border=\"false\":::\n\n1. 确保保存自动程序 ID 以及客户端密码 **部分中** 的密码。\n\n##### <a name=\"to-add-bot-to-app\"></a>将机器人添加到应用\n\n1. 打开\" **应用功能\"** 窗格，然后选择 **\"自动程序\"** 卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"显示自动程序卡的图像\" border=\"false\":::\n\n    将显示 **\"自动程序** \"窗格。\n\n1. 从选择现有自动程序 **中选择自动程序应用**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"显示如何添加现有自动程序应用的图像\" border=\"false\":::\n\n    新自动程序将添加到具有其自己的应用 ID 的应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"显示已添加到应用的新自动程序的图像\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>配置自动程序作用域\n\n1. 选择新 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: 自动 **程序卡上的** 图标，然后选择\"编辑 **\"**。\n\n1. 在\"自动 **程序\"** 窗格中移动以查看\" **命令\"** 部分，然后选择 **\"+ 添加命令\"**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"显示命令部分的图像\" border=\"false\":::\n\n1. 为命令输入合适的名称和 **说明**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"显示如何添加命令详细信息的图像\" border=\"false\":::\n\n1. 选择该命令的所有三个范围，然后选择\"添加 **\"**。\n    - 个人\n    - **团队**\n    - **群聊**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"显示如何保存命令详细信息的图像\" border=\"false\":::\n\n    新命令将添加到\"自动 **程序\"** 窗格的\"命令 **\"** 部分。\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"显示要保存的命令详细信息的图像\" border=\"false\":::\n\n    保存命令详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"显示保存的命令详细信息的图像\" border=\"false\":::\n\n1. 打开 **\"应用功能** \"窗格 **，然后选择\"** 个人应用卡\"以查看应用的选项卡详细信息。\n\n    你将看到新聊天机器人的选项卡已添加到你的应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"显示已配置的聊天机器人的图像\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>配置邮件扩展\n\n消息扩展允许用户从你的服务请求信息并发布该信息。 信息以卡片的形式张贴到频道对话中。 邮件扩展显示在撰写框的底部。\n\n添加新邮件扩展名：\n\n1. 选择\" :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: 应用功能 **\"窗格上** \"邮件扩展\"卡 **上的** 图标，然后选择\"删除 **\"**。\n\n1. 从 **\"应用功能** \"窗格中 **选择\"邮件扩展** \"。\n\n1. 从\"消息扩展\"窗格上的\" **选择** 现有自动程序\"下拉列表中选择自动 **程序应用** 的名称。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"显示选择现有自动程序的消息扩展窗格的图像\" border=\"false\":::\n\n1. 选择“**保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"显示&quot;邮件扩展保存&quot;按钮的图像\" border=\"false\":::\n\n    保存邮件扩展名，\" **命令** \"部分显示在\"邮件扩展 **\"窗格中** 。\n\n1. 选择 **+ 添加命令** 以定义邮件扩展应用可以执行的范围。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"显示&quot;命令&quot;部分的图像\" border=\"false\":::\n\n1. 确保 **选择** \"搜索\"作为要添加到\"添加命令\"对话框中 **的命令** 类型。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"显示&quot;添加命令&quot;对话框的图像\" border=\"false\":::\n\n1. 输入适合的信息以下详细信息：\n    - 命令 ID\n    - 命令标题\n    - 命令说明\n\n1. 在对话框中移动以查看其余详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"显示&quot;添加命令&quot;对话框中的剩余详细信息的图像\" border=\"false\":::\n\n1. 确保 **选中\"设置为** 默认值\"。\n1. 为邮件扩展命令选择以下上下文：\n    - 命令框\n    - 撰写框\n    - 邮件\n1. 输入以下详细信息的合适信息：\n    - 参数名称\n    - 参数标题\n    - 参数说明\n\n1. 选择 **\"** 文本\"作为输入类型。\n1. 选择“**保存**”\n1. 邮件扩展命令已保存，显示在\"邮件扩展\"窗格中的命令 **列表中** 。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"显示已添加的新 Command 的图像\" border=\"false\":::\n\n1. 选择“**保存**”。\n1. 打开 **\"应用功能\"** 窗格。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"显示为 Hello World 应用配置的功能的图像\" border=\"false\":::\n\n    你将看到为 Hello World 应用配置的所有三项功能-个人选项卡应用、机器人和消息扩展。 下一步是在应用中注册Teams并测试你的应用。\n"
- title: 预览和测试你的第一C#应用
  durationInMinutes: 1
  content: "\n导入应用并配置开发人员门户中的功能后，可以预览和测试示例应用。\n\n## <a name=\"preview-your-app-in-teams\"></a>在应用中预览Teams\n\n配置应用功能后，可以在本地环境中Teams预览和测试应用。\n\n预览应用：\n\n1. 从 **\"开发人员Teams** 工具栏中选择\"预览\"。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"显示&quot;预览&quot;按钮的图像\" border=\"false\":::\n\n    开发人员门户会通知你你的应用已成功旁加载。\n\n1. 选择\"**应用商店\"**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::图标。\n1. 选择 **\"管理应用\"**。\n   你的应用在旁加载的应用中列出。 \n1. 使用搜索框查找你的应用，选择其行中的三个点。\n1. 选择\" **视图\"** 选项。\n    **将显示应用的**\"添加\"页面。\n1. 选择 **\"添加**\"以在加载项上Teams。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"显示&quot;添加应用&quot;对话框的图像\" border=\"false\":::\n\n    你的应用现在可用于Teams。 可以查看所有选项卡并测试以下功能：\n\n    - Hello 选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"在本地环境中显示 Hello 选项卡的图像\" border=\"false\":::\n\n    - 聊天机器人：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"显示本地环境中应用自动程序的图像\" border=\"false\":::\n\n        可以使用聊天发送消息。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"显示本地环境中聊天的图像\" border=\"false\":::\n\n    - 邮件扩展名：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"显示本地环境中邮件扩展的图像\" border=\"false\":::\n\n        可以使用邮件扩展名尝试搜索。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"显示在本地环境中使用邮件扩展进行搜索的图像\" border=\"false\":::\n\n    - 关于选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"显示本地环境中&quot;关于&quot;选项卡的图像\" border=\"false\":::"
