### YamlMime:Tutorial
title: 使用 C 生成第一个应用#
metadata:
  title: 使用 C Hello World#
  description: 在本教程中，你将通过设置新项目、生成和部署选项卡、机器人和消息扩展应用，了解如何使用 C# 生成Hello World应用。
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: 返回到开始概述
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: bc9a5ee535a771a17680ebf92607834388319530
  ms.sourcegitcommit: ca84b5fe5d3b97f377ce5cca41c48afa95496e28
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 06/17/2022
  ms.locfileid: "66142820"
items:
- durationInMinutes: 1
  content: >
    通过使用选项卡、机器人和消息扩展功能生成第一个应用来"开始"菜单 Microsoft Teams应用开发。


    >此应用将具有所有功能，每个功能都有自己的 UI 和 UX：


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="显示此应用有三个功能的示意图。" border="true":::


    在本教程中，你将了解：


    - 如何设置新项目。

    - 如何使用 C# 和 Visual Studio 2019 生成具有不同功能的三个应用（选项卡、机器人和消息扩展）。

    - 如何从开发人员门户部署应用。
- title: 先决条件
  durationInMinutes: 1
  content: "下面是生成和部署Teams应用时需要安装的工具列表。\n\n| &nbsp; | 安装 | 用于使用... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Visual Studio 2019](https://visualstudio.com/download)<br> 安装以下两个工作负荷之一：<br> • **ASP.NET 和 Web 开发** <br> • **.NET Core 跨平台开发** | .NET。 可以安装 2019 Visual Studio的免费社区版，还可以安装工作负荷。 |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git 用于从GitHub使用示例 C# 应用存储库。 |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams应用功能 (会话机器人和消息扩展) 需要入站连接。 需要公开开发系统以通过隧道Teams。 对于仅包含选项卡的应用，不需要隧道。 此包安装在项目目录中， (使用npm `devDependencies`) 。 |\n| &nbsp; | [Teams 工具包](#install-teams-toolkit) | Visual Studio 2019 扩展，用于为应用创建项目基架。 使用最新版本。 |\n| &nbsp; | [Teams 开发人员门户](https://dev.teams.microsoft.com/) | 基于 Web 的门户，用于配置、管理和分发 Teams 应用，包括组织或 Teams 应用商店。 |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | 通过聊天、会议、通话等应用与每一位同事进行协作的 Microsoft Teams - 一个地方完成所有操作。 |\n| **可选** | &nbsp; | &nbsp; |\n| &nbsp; | 用于 Visual Studio Code 和 [Microsoft Azure CLI 的](/cli/azure/install-azure-cli) [Azure 工具](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) | 用于访问存储数据或在 Azure 中为Teams应用部署基于云的后端的 Azure 工具。 |\n\n\n## <a name=\"verify-git-installation\"></a>验证 git 安装\n\n如果Visual Studio安装提示你添加`git`到路径，请选择它。 \n\n若要验证已安装的 git 版本，请执行以下操作：\n\n1. 打开终端窗口。 \n2. 运行以下命令以验证计算机上安装的 `git` 版本：\n\n    ```bash\n    $ git --version\n    ```\n\n    输出示例： `git version 2.17.1.windows.2`\n\n## <a name=\"install-teams-toolkit\"></a>安装Teams Toolkit\n\nTeams Toolkit通过为应用创建项目基架的工具帮助简化开发过程。 它为所有选定功能创建必需的目录结构，并准备好生成项目所需的文件。\n\nTeams Toolkit作为 2019 Visual Studio扩展提供。\n\n若要安装Teams Toolkit扩展：\n\n1. 打开 Visual Studio 2019，然后选择 **“** > 扩展 **管理扩展**”。\n1. 在搜索框中，输入 **Teams Toolkit**。\n1. 选择Teams Toolkit旁边的 **“下载**”。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/install-teams-toolkit-vs19.png\" alt-text=\"图像显示Teams Toolkit的安装\"::: \n\n    这些更改在 2019 Visual Studio关闭后可用。 这是必需的，因为 Visual Studio 2019 必须在安装扩展后重启。\n\n1. 选择“**关闭**”。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" alt-text=\"图像显示为Teams Toolkit完成的安装\" lightbox=\"~/assets/images/teams-toolkit-v2/toolkit-installed.png\" border=\"true\":::\n\n1. 关闭 2019 Visual Studio。\n    \n    VSIX 安装程序随附有关安装扩展的说明打开。\n\n1. 按照 VSIX 安装程序的说明完成工具包的安装。\n1. 再次打开 Visual Studio 2019。\n\nTeams应用将在 2019 Visual Studio用作模板。\n\n还可以在Visual Studio Code市场中找到[Teams Toolkit](https://marketplace.visualstudio.com/items?itemName=msft-vsteamstoolkit.vsteamstoolkit)。\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>设置Teams开发租户\n\n**租户** 类似于Teams中组织的空间或容器，可在其中聊天、共享文件和运行会议。 此空间也是旁加载和测试应用的位置。 我们来验证是否已准备好使用租户进行开发。\n\n### <a name=\"check-for-sideloading-option\"></a>检查旁加载选项\n\n创建应用后，必须在 Teams 中加载应用，而无需分发它。 此过程称为“旁加载”。 登录到Microsoft 365帐户以查看此选项。\n\n> [!NOTE]\n> 在本地环境中预览和测试 Teams应用需要旁加载。 如果未启用，则无法在本地Teams预览和测试应用。\n\n是否已拥有租户，是否具有管理员访问权限？ 我们来检查你是否真的这样做了！\n\n验证是否可以在Teams中旁加载应用：\n\n1. 在Teams客户端中，选择 **Microsoft Store** 图标。\n1. 选择“**管理应用**”。\n1. 查找 **用于Upload自定义应用的** 选项。 如果看到此选项，则会启用旁加载应用。\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"插图显示了在Teams中上传自定义应用的选项。\":::\n\n    > [!NOTE]\n    > 如果Teams未显示上传自定义应用的选项，请与Teams管理员联系。\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>创建免费Teams开发人员租户 (可选) \n\n如果没有Teams帐户，可以免费获取。 加入Microsoft 365开发人员计划！\n\n1. 转到 [Microsoft 365 开发人员计划](https://developer.microsoft.com/microsoft-365/dev-program)。\n1. 选择 **“立即加入** ”，并按照屏幕上的说明操作。\n1. 在欢迎屏幕中，选择 **“设置 E5 订阅**”。\n1. 设置管理员帐户。 完成后，将显示以下屏幕：\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"注册Microsoft 365开发人员计划后看到的示例。\":::\n\n1. 使用刚设置的管理员帐户登录Teams。 验证Teams中是否具有 **自定义应用** 选项Upload。\n\n## <a name=\"get-a-free-azure-account\"></a>获取免费的 Azure 帐户\n\n如果要在 Azure 中托管应用或访问资源，则必须具有 Azure 订阅。 在开始之前[创建免费帐户](https://azure.microsoft.com/free/)。\n\n现在，你已获得所有工具并设置了帐户。 接下来，让我们设置开发环境并开始构建！\n\n> [!NOTE]\n> 在平台上使用合适的终端窗口。 这些示例使用 Git Bash，但可以在大多数平台上运行。\n\n打开最新版本的Visual Studio并安装任何更新。\n\n可以使用同一终端窗口运行本教程中的命令。\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>下载示例\n\n对于本教程，请使用 [Hello，World！](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/csharp) C# 中的示例。 可以从GitHub下载并克隆它。\n\n若要使用此示例，请通过以下方式之一克隆示例存储库：\n\n- [使用 Git Bash](#to-use-git-bash-to-clone-the-sample-repo)\n- [使用 Visual Studio 2019](#to-use-visual-studio-2019-to-clone-the-sample-repo)\n\n### <a name=\"to-use-git-bash-to-clone-the-sample-repo\"></a>使用 Git Bash 克隆示例存储库\n\n- 在终端窗口中运行以下命令，将示例存储库克隆到计算机：\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n    C# 应用的示例存储库在默认位置的计算机上克隆。\n\n    > [!TIP]\n    > 可以将此[存储库](https://github.com/OfficeDev/Microsoft-Teams-Samples)分[叉](https://help.github.com/articles/fork-a-repo/)，以修改更改并将其保存到GitHub。\n\n    <a name=\"BuildRun\"></a>\n\n    可以通过在 2019 Visual Studio打开克隆的存储库来查看该存储库。 \n\n### <a name=\"to-use-visual-studio-2019-to-clone-the-sample-repo\"></a>使用 Visual Studio 2019 克隆示例存储库\n\n1. 打开Visual Studio 2019。\n1. 选择 **“克隆存储库**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-clone-repo.png\" alt-text=\"克隆 c# Teams应用的示例存储库\" border=\"true\":::\n\n1. 输入 `https://github.com/OfficeDev/Microsoft-Teams-Samples.git` 作为克隆存储库的路径：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/repo-clone-path.png\" alt-text=\"克隆 c# Teams应用的示例存储库\" border=\"true\":::\n\n1. 输入要克隆存储库的位置，然后选择 **“克隆**”。\n\n    示例存储库已克隆，Visual Studio打开。 可以在 **解决方案资源管理器** 中查看克隆的存储库。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-repo-cloned.png\" alt-text=\"克隆的 c# Teams应用的示例存储库\" border=\"true\":::\n\n克隆示例存储库后，让我们生成第一个用于Teams的 C# 应用。\n"
- title: 生成并运行第一个 C# 应用
  durationInMinutes: 1
  content: "\n克隆 C# 示例应用的存储库后，可以在本地环境中生成并运行该应用。\n\n在此页中，你将学习以下内容：\n1. [构建首个应用](#build-your-first-app)\n1. [在本地部署示例应用](#deploy-your-sample-app-locally)\n\n## <a name=\"build-your-first-app\"></a>构建首个应用\n\n创建工作区后，可以在 **解决方案资源管理器** 中查看项目结构。 现在，你将生成并运行应用。\n\n**生成并运行克隆的示例**\n\n1. 打开解决方案文件 **Microsoft.Teams。示例****的 Microsoft-Teams-Samples/samples/app-hello-world/csharp** 目录中的 Samples.HelloWorld.sln。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hello-world-sln-open.png\" alt-text=\"显示Hello World解决方案目录结构的图像\" border=\"true\":::\n\n1. 选择 **Project** 菜单，然后选择 **Microsoft.Teams。Samples.HelloWorld.Web 属性**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-menu.png\" alt-text=\"显示Project菜单以选择“属性”选项的图像\" border=\"true\":::\n\n1. 从“**属性**”窗口的左窗格中选择 **“调试**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-properties.png\" alt-text=\"显示属性窗口的图像\" border=\"true\":::\n\n1. 在屏幕上移动以查看 **Web 服务器设置**。\n\n1. 在 **“调试** ”窗格中设置以下设置：\n    - 将 **应用 URL** 设置为 `http://localhost:3333/`.\n    - 清除 **启用 SSL**。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/vs-project-web-server-settings.png\" alt-text=\"显示 C# 项目属性的 Web 服务器设置的图像\" border=\"true\":::\n\n1. 从“ **生成”** 菜单中选择“ **生成** 解决方案”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-build-complete.png\" alt-text=\"显示生成已完成的图像\" border=\"true\":::\n\n1. 选择 **F5** 键，或从“**调** 试”菜单中选择\"开始\"菜单调 **试** 以运行示例。\n\n    当应用启动时，将打开浏览器窗口。 它显示应用的根。 可以转到以下 URL 来验证是否正在加载所有应用 URL：\n\n    - `https://localhost:3333/`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-after-debug.png\" alt-text=\"显示本地主机的图像\" border=\"true\":::\n\n    - `https://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello.png\" alt-text=\"显示应用的 Hello 页面的图像\" border=\"true\":::\n\n    - `https://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-tab.png\" alt-text=\"显示应用的第一个选项卡的图像\" border=\"true\":::\n\n    - `https://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-tab.png\" alt-text=\"显示应用的第二个选项卡的图像\" border=\"true\":::\n\n    > [!Note]\n    > 如果收到错误 `Could not find a part of the path … bin\\roslyn\\csc.exe`，请使用命令 `Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r`更新包。\n\n## <a name=\"deploy-your-sample-app-locally\"></a>在本地部署示例应用\n\nMicrosoft Teams应用是提供一个或多个功能的 Web 应用程序。 使应用在 Internet 上可用，以便Teams平台可以加载它。 托管应用，用于 `ngrok` 在计算机上创建到本地进程的隧道。\n\n托管应用后，记下其根 URL，例如 `https://yourteamsapp.ngrok.io` 或 `https://yourteamsapp.azurewebsites.net`。\n\n### <a name=\"tunnel-using-ngrok\"></a>Tunnel使用 ngrok\n\n安装 ngrok 后，可以创建隧道以在本地部署应用：\n\n1. 打开新的终端窗口。\n1. 运行以下命令以创建隧道。 示例应用使用端口 3333。\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ````\n    将创建 ngrok 隧道。 下面是一个示例：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-tunnel.png\" alt-text=\"显示 ngrok 隧道的图像\" border=\"true\":::\n\n    可以尝试添加或`second`添加`first``hello`到 ngrok 隧道 URL 以查看应用的不同选项卡页。\n    \n    Ngrok 侦听来自 Internet 的请求，并将它们路由到在端口 3333 上运行的应用。\n\n验证应用的本地部署：\n\n1. 打开浏览器。\n1. 使用以下 URL 加载应用：\n\n    `https://<forwarding address in ngrok console session>/`\n\n    下面是 URL 的示例：\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/csharp-ngrok-verify-tunnel.png\" alt-text=\"显示在 ngrok 隧道本地运行的 C# 应用的图像\" border=\"true\":::\n\n1. 记下 ngrok 控制台中的转发地址。 需要此 URL 才能在Teams中部署应用。\n\n    > [!NOTE]\n    > 如果在 [生成](#build-your-first-app)过程中使用了不同的端口，请确保使用相同的端口号来设置 `ngrok` 隧道。\n    > [!TIP]\n    > 最好在不同的终端窗口中运行 `ngrok` 。 当需要停止、重新生成和重新运行应用时，它有助于防止 `ngrok` 干扰应用。 会 `ngrok` 话在此窗口中提供有用的调试信息。\n    > [!IMPORTANT]\n    > 如果使用 ngrok 的免费版本，则应用仅在开发计算机上的当前会话期间可用。 如果计算机关闭或进入睡眠状态，则它不可用。 重新启动服务时，它将返回一个新地址。 然后，必须更新使用过时地址的每个位置。 共享应用进行测试时，请记住此步骤。\n"
- title: 使用开发人员门户配置第一个 C# 应用
  durationInMinutes: 1
  content: "\n可以使用[开发人员门户](https://dev.teams.microsoft.com/)上传应用包以Teams和配置应用功能。 开发人员门户是一个Teams应用，可简化应用的创建和注册。 从 Teams 存储区安装！\n\n生成并测试Teams应用后，可以使用开发人员门户对其进行配置和预览。\n\n在此页中，你将了解如何 [在开发人员门户中配置应用包](#configure-the-app-package-in-developer-portal)。\n\n<details>\n<summary>2019 Visual Studio中的发布选项</summary>\n\n本教程使用开发人员门户配置应用功能并发布应用。 \n\n但是，2019 Visual Studio内置支持将应用部署到不同的提供商，包括 Azure：\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/publish-to-azure.png\" alt-text=\"显示 2019 Visual Studio中的“发布到 Azure”菜单项的图像\" border=\"true\":::\n\nMicrosoft Azure在免费层上托管 .NET 应用程序。 它使用足以运行示例的共享基础结构 `Hello World` 。 有关详细信息，请参阅 [创建新的免费 Azure 帐户](https://azure.microsoft.com/free/)。\n\n如果使用此选项，可以输入 Azure 站点和 Azure 资源的详细信息并发布应用。 \n\n对于本教程，无需使用此步骤。\n\n</details>\n\n## <a name=\"configure-the-app-package-in-developer-portal\"></a>在开发人员门户中配置应用包\n\n可以使用 [开发人员门户](https://dev.teams.microsoft.com/) 来配置应用包及其功能。 开发人员门户是一个Teams应用，可简化应用的创建和注册。 从 Teams 存储区安装！\n\n配置应用包包括：\n\n1. [将应用包导入开发人员门户](#import-the-app-package-in-developer-portal)\n1. [配置应用功能](#configure-your-app-capabilities)\n\n### <a name=\"import-the-app-package-in-developer-portal\"></a>在开发人员门户中导入应用包\n\n若要导入应用包，请执行以下操作：\n\n1. 打开 Microsoft Teams。\n\n1. 从左侧栏中选择 **Microsoft Store**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::图标。\n\n1. 在搜索栏中搜索 **开发人员门户** ，然后选择 **“开发人员门户**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"选择开发人员门户应用\" border=\"true\":::\n\n1. 选择 **“打开”**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"显示打开的开发人员门户应用的图像\" border=\"true\":::\n\n    开发人员门户随即打开。\n\n1. 选择“ **应用”** 选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"开发人员门户应用\" border=\"true\":::\n\n1. 选择 **“导入”应用**。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"显示“导入应用”按钮的图像\" border=\"true\":::\n\n1. 从 C# 示例存储库目录结构中的以下路径中选择应用包 `helloworldapp.zip` ：\n\n    `<path to cloned C# repo>/Source/Repos/Microsoft-Teams-Samples/samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/bin/Debug/netcoreapp3.1`\n\n    **Hello World** 应用在开发人员门户中导入。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"显示Teams中导入的应用的图像\" border=\"true\":::\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>在开发人员门户中浏览应用\n\n将应用导入到开发人员门户后，可以查看其详细信息，包括清单文件。\n\n#### <a name=\"view-app-information\"></a>查看应用信息\n\n1. 从开发人员门户的左窗格中选择 **“基本信息** ”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"图像显示开发人员门户的左窗格\" border=\"true\":::\n\n1. 请注意基本信息中的以下信息：\n    - 应用程序 ID\n    - 开发人员信息\n    - 应用 URL\n\n1. 从左窗格中选择 **“品牌** ”以查看品牌信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"显示应用品牌信息的图像\" border=\"true\":::\n\n    如果要编写用于分发的新应用，这些详细信息非常重要。\n\n#### <a name=\"view-app-features\"></a>查看应用功能\n\n- 从开发人员门户的左窗格中选择 **应用功能** 。\n\n    应用功能显示在右窗格中。 可以查看个人应用、机器人和消息扩展的卡片。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"显示应用功能的图像\" border=\"true\":::\n\n#### <a name=\"view-the-app-manifest\"></a>查看应用清单\n\n使用清单文件为应用配置功能、所需资源和其他重要属性。\n\n若要查看应用清单，请执行以下操作：\n\n- 从左侧面板中选择 **“发布** ”以打开下拉列表，然后选择 **“应用”包**。\n    \n    清单文件显示在右窗格上。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-manifest-dev-portal.png\" alt-text=\"显示开发人员门户中的应用清单文件的图像\" border=\"true\":::\n\n### <a name=\"configure-your-app-capabilities\"></a>配置应用功能\n\n将应用导入开发人员门户后，下一步是配置应用功能。 开发人员门户包含不同部分中的所有应用信息。 它使配置应用功能变得简单。\n\n使用开发人员门户，可以：\n- [配置个人选项卡应用](#configure-personal-tab-app)\n- [配置机器人](#configure-bot)\n- [配置消息扩展](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>配置个人选项卡应用\n\n若要配置个人选项卡应用，请执行以下操作：\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::在“**应用功能**”窗格的 **“个人应用** 卡”上选择图标，然后选择 **“编辑**”。\n\n    显示“Hello”选项卡的详细信息。\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::选择“Hello”选项卡的图标，然后选择 **“编辑**”以打开要更新的应用详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"显示“Hello”选项卡菜单的图像\" border=\"true\":::\n\n1. 在“ **向个人应用添加选项卡**”中输入“Hello”选项卡的应用详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-personal-tab-details.png\" alt-text=\"显示 Hello 选项卡详细信息的图像\" border=\"true\":::\n\n    输入以下详细信息：\n    - **名称**：Hello 选项卡。\n    - **内容 URL** 和 **网站 URL**：ngrok 控制台会话中的转发地址。\n    - **上下文**：选择 **“个人”选项卡**。\n\n1. 选择“**更新**”。\n\n    “你好”选项卡的详细信息显示在 **“个人应用** ”窗格上。\n\n1. 选择“保存”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-tab-update.png\" alt-text=\"显示要保存的 Hello 选项卡详细信息的图像\" border=\"true\":::\n\n    “ **个人应用** ”窗格现在显示新选项卡和自动创建的“关于”选项卡。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-about-tab-added.png\" alt-text=\"显示“Hello”选项卡和“关于”选项卡详细信息的图像\" border=\"true\":::\n\n#### <a name=\"configure-bot\"></a>配置机器人\n\n将机器人功能添加到应用很容易。 Hello World示例应用已将机器人作为其一部分，但必须将其注册到Teams。\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"显示未使用应用 ID 导入的机器人应用的图像\" border=\"true\":::\n\n从示例导入的机器人没有关联的应用 ID。 需要删除它并创建新的机器人。 开发人员门户创建新的应用 ID，并将其注册到Teams。\n\n添加和配置机器人涉及：\n\n1. [添加新机器人](#to-add-a-new-bot)\n1. [将机器人添加到应用](#to-add-bot-to-app)\n1. [配置机器人范围](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>添加新机器人\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::在 **“应用功能**”窗格的 **“机器人** 卡”上选择图标，然后选择 **“删除**”。\n\n1. 选择 **要** 添加功能的工具。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"显示“工具”选项的图像\" border=\"true\":::\n\n1. 在 **“工具”** 窗格上选择 **“机器人管理**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"显示机器人管理窗格的图像\" border=\"true\":::\n\n1. 在 **“机器人管理**”窗格中选择 **“+ 新建机器人**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"显示新机器人选项的图像\" border=\"true\":::\n\n1. 为机器人输入合适的名称，然后选择 **“添加**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"显示如何添加机器人的图像\" border=\"true\":::\n\n    “ **配置** ”窗格显示在左窗格中显示新机器人的详细信息。\n\n1. 从 `ngrok` 控制台输入转发 URL，然后选择 **“保存**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-configure-bot-endpoint.png\" alt-text=\"显示如何添加机器人终结点的图像\" border=\"true\":::\n\n1. 选择 **客户端机密** ，然后选择 **“向机器人添加客户端机密** ”，为机器人生成密码。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-client-secret-pane.png\" alt-text=\"显示客户端机密部分的图像\" border=\"true\":::\n\n    开发人员门户为机器人生成密码。\n\n    可以使用该 :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: 图标复制密码。 在本教程中，无需复制它。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-client-secret-generated.png\" alt-text=\"显示生成的客户端机密的图像\" border=\"true\":::\n\n1. 选择“**确定**”。\n\n1. 选择 **<机器人** 以返回到 **机器人管理** 窗格。\n\n    机器人 **管理** 窗格显示添加了应用 ID 的新机器人。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-mgmt-pane.png\" alt-text=\"显示具有应用 ID 的新机器人的图像\" border=\"true\":::\n\n1. 确保从 **客户端机密** 部分保存机器人 ID 和密码。\n\n##### <a name=\"to-add-bot-to-app\"></a>将机器人添加到应用\n\n1. 打开 **“应用功能** ”窗格，然后选择 **机器人** 卡片。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"显示机器人卡片的图像\" border=\"true\":::\n\n    将显示 **“机器人** ”窗格。\n\n1. 从 **“选择现有机器人”中选择** 机器人应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-new-bot-app.png\" alt-text=\"显示如何添加现有机器人应用的图像\" border=\"true\":::\n\n    新机器人将使用自己的应用 ID 添加到应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-new-bot-added.png\" alt-text=\"显示添加到应用的新机器人的图像\" border=\"true\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>配置机器人范围\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::选择新 **机器人** 卡片上的图标，然后选择 **“编辑**”。\n\n1. 在 **“机器人** ”窗格中移动以查看 **“命令”** 部分，然后选择 **“+ 添加命令**”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"显示命令节的图像\" border=\"true\":::\n\n1. 输入 **命令的合适** 名称和说明。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"显示如何添加命令详细信息的图像\" border=\"true\":::\n\n1. 选择命令的所有三个范围，然后选择 **“添加**”。\n    - 个人\n    - **团队**\n    - **群组聊天**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"显示如何保存命令详细信息的图像\" border=\"true\":::\n\n    新命令将添加到 **机器人** 窗格的 **“命令**”部分。\n\n1. 选择“保存”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"显示要保存的命令详细信息的图像\" border=\"true\":::\n\n    将保存命令详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"显示已保存命令详细信息的图像\" border=\"true\":::\n\n1. 打开 **“应用功能** ”窗格，然后选择 **“个人应用** 卡”以查看应用的选项卡详细信息。\n\n    你将看到新聊天机器人的选项卡已添加到应用中。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tab-chat-tab-conf.png\" alt-text=\"显示已配置聊天机器人的图像\" border=\"true\":::\n\n#### <a name=\"configure-message-extension\"></a>配置消息扩展\n\n消息扩展允许用户从服务中请求信息，并帖子该信息。 信息以卡的形式发布到频道对话中。 消息扩展显示在撰写框的底部。\n\n若要添加新的消息扩展插件，\n\n1. :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\":::在 **“应用功能**”窗格的 **“消息扩展** 卡”上选择图标，然后选择 **“删除**”。\n\n1. 从 **“应用功能**”窗格中选择 **“消息扩展**”。\n\n1. 从 **“消息扩展**”窗格上的 **“选择现有机器人** 下拉列表”中选择机器人应用的名称。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"显示用于选择现有机器人的消息扩展窗格的图像\" border=\"true\":::\n\n1. 选择“保存”。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-save.png\" alt-text=\"显示“消息扩展保存”按钮的图像\" border=\"true\":::\n\n    消息扩展已保存，“ **命令”** 部分将显示在 **“消息扩展** ”窗格中。\n\n1. 选择 **+添加命令** 以定义消息扩展应用可以执行的操作的范围。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"显示“命令”部分的图像\" border=\"true\":::\n\n1. 确保选择 **“搜索** ”作为要在“ **添加命令** ”对话框中添加的命令类型。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"显示“添加命令”对话框的图像\" border=\"true\":::\n\n1. 输入适当的信息，详细信息如下：\n    - 命令 ID\n    - 命令标题\n    - 命令说明\n\n1. 在对话框中移动以查看剩余的详细信息。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"显示“添加命令”对话框中的剩余详细信息的图像\" border=\"true\":::\n\n1. 确保已选择 **“设置默认值** ”。\n1. 为消息扩展命令选择以下上下文：\n    - 命令框\n    - 撰写框\n    - 消息\n1. 输入适用于以下详细信息的信息：\n    - 参数名称\n    - 参数标题\n    - 参数说明\n\n1. 选择 **“文本** ”作为输入类型。\n1. 选择“保存”。\n1. 消息扩展命令已保存，并显示在 **“消息扩展** ”窗格中的命令列表中。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"显示添加了新命令的图像\" border=\"true\":::\n\n1. 选择“保存”。\n1. “打开 **应用功能** ”窗格。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-capabilities-configured.png\" alt-text=\"显示为Hello World应用配置的功能的图像\" border=\"true\":::\n\n    你将看到为Hello World应用配置的所有三个功能（个人选项卡应用、机器人和消息扩展）。 下一步是在Teams中注册应用并测试应用。\n"
- title: 预览并测试你的第一个 C# 应用
  durationInMinutes: 1
  content: "\n导入应用并在开发人员门户中配置功能后，可以预览和测试示例应用。\n\n## <a name=\"preview-your-app-in-teams\"></a>在 Teams 中预览应用\n\n配置应用的功能后，可以在本地环境中Teams预览和测试应用。\n\n预览应用：\n\n1. 从开发人员门户工具栏 **中选择Teams预览** 版。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"显示预览按钮的图像\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/preview-in-teams.png\":::\n\n    开发人员门户会通知你应用已成功旁加载。\n\n1. 选择 **Microsoft Store**:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\":::图标。\n1. 选择“**管理应用**”。\n   你的应用列在旁加载的应用中。 \n1. 使用搜索框查找应用，选择其行中的三点。\n1. 选择 **“视图** ”选项。\n    将显示应用的 **“添加** ”页。\n1. 选择 **“添加**”以在Teams上加载应用。\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"显示“添加应用”对话框的图像\" border=\"true\":::\n\n    你的应用现在在Teams中可用。 可以查看所有选项卡并测试功能：\n\n    - Hello 选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"显示本地环境中的 Hello 选项卡的图像\" border=\"true\":::\n\n    - 聊天机器人：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"显示应用在本地环境中的机器人的图像\" border=\"true\":::\n\n        可以使用聊天发送消息。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"显示本地环境中聊天的图像\" border=\"true\":::\n\n    - 消息扩展：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"显示本地环境中的消息扩展的图像\" border=\"true\":::\n\n        可以尝试使用消息扩展进行搜索。\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"显示在本地环境中使用消息扩展进行搜索的图像\" border=\"true\"lightbox=\"~/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\":::\n\n    - 关于选项卡：\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"显示本地环境中的“关于”选项卡的图像\" border=\"true\":::"
