### YamlMime:Tutorial
title: 会议令牌生成器
metadata:
  title: 会议令牌生成器
  description: 本教程介绍如何为会议设置会议令牌生成器Teams。
  audience: Developer
  level: Beginner
  ms.date: 11/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: 阅读更多内容以启用和配置会议应用
  ms.custom: mvc
  ms.localizationpriority: high
items:
  - durationInMinutes: 1
    content: |
      会议令牌生成器应用通过允许会议参与者请求令牌Teams增强会议体验。 应用按顺序生成令牌，以便每个参与者都有机会在会议中进行交互。 例如，该应用在问答&会议（如 scrum 会议）中非常有用。

      > [!NOTE]
      > 会议令牌生成器应用的"会议内"选项卡仅在桌面客户端Teams **可用**。

      **会议令牌生成器的关键功能**

      * 显示正在会议中服务的当前令牌。
      * 显示按令牌号排序的用户列表。
      * 根据请求为用户生成令牌。
      * 显示当前用户的令牌号。
      * 允许组织者跳过当前会议令牌。

      **用户交互的不同方式**

      * 令牌：请求用户令牌。
      * 完成：确认为用户生成令牌。
      * 跳过：跳过当前用户并移至下一个人，并排行获取令牌。

         > [!NOTE]
         > Skip 仅适用于会议组织者。

      此分步指南可帮助你生成会议令牌，以扩展 Teams。 你将看到以下输出：

         ![你的令牌](~/assets/images/meeting-token-generator/meeting-token-generator-yourtokennumber.png)
  - title: 必备条件
    durationInMinutes: 1
    content: |
      确保安装以下工具并设置开发环境：  

      * [.NET Core SDK](https://dotnet.microsoft.com/download) 版本 3.1
      * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
      * [nodejs](https://nodejs.org/en/download/) LTS 版本 10.21.0 或更高版本
      * [ngrok](https://ngrok.com/download) 最新版本 (仅用于开发人员) 或任何等效隧道解决方案

        > [!NOTE]
        > 下载 ngrok 后，注册并安装 [authtoken](https://ngrok.com/download)。

      * [获取免费Teams开发人员租户](https://developer.microsoft.com/en-us/microsoft-365/dev-program)

      确保您已掌握以下技术的知识：

      * [C#](https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments)
      * [ECMAScript6](http://es6-features.org/#Constants)
      * [ASP.NET](https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-3.1) 3.1 版
      * [React.JS](https://reactjs.org/tutorial/tutorial.html) 版本 16 或更高版本
  - title: 设置本地环境
    durationInMinutes: 1
    content: |
      将`Microsoft-Teams-Samples`存储库克隆到本地GitHub：  

       1. 打开[Microsoft Teams示例"](https://github.com/OfficeDev/Microsoft-Teams-Samples)。
       1. 选择 **"代码"**。
       1. 从下拉菜单中，选择"使用桌面 **GitHub打开"**。

          ![克隆存储库](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository1.png)

       1. 选择 **克隆**。 
  - title: 在门户创建和注册Azure AD程序
    durationInMinutes: 5
    content: |
      若要在 Azure Active Directory 创建和注册机器人，使用 ngrok 创建隧道并添加消息终结点，请执行以下步骤：

      * 创建 Azure Bot 资源以向 Azure Bot 服务注册自动程序。
      * 创建启用自动程序 SSO 身份验证的客户端密码。
      * 添加Microsoft Teams将机器人部署到 Teams 频道。
      * 使用 ngrok 创建到 Web 服务器的终结点的隧道。
      * 将消息终结点添加到您创建的 ngrok 隧道。

      **创建 Azure Bot 资源**

      1. 转到 Microsoft Azure [门户](https://portal.azure.com/)。
      1. 选择“**创建资源**”。
      1. 在搜索框中，输入 **Azure Bot**。
      1. 选择 **Enter**。
      1. 选择 **"Azure 自动程序"**。

           ![创建 Azure 自动程序卡](~/assets/images/bots/createazurebot.png)

      1. 选择“**创建**”。
      1. 在自动程序句柄中输入所需的 **自动程序句柄名称**。
      1. 从" **订阅** "下拉列表中，选择 **"msteams.nonprod.pub.msft.aplt"**。
      1. 从" **资源组** "下拉列表中，选择现有资源组。 还可以创建新的资源组，然后选择"新建 ("，>  输入资源名称 **>"确定**) "。

      1. 从"新建资源组位置 **"下拉列表中选择** 所需位置。

          ![创建资源 Azure 自动程序](~/assets/images/meeting-token-generator/meeting-token-generator-review-plus-create.png)

      1. 在" **Microsoft 应用 ID"** 部分，默认情况下 **选择"创建新的 Microsoft 应用 ID** "。 

         可以选择"使用现有 **应用注册"并** 输入 **"现有应用 ID**"和"现有应用密码"，也可以选择"**创建新的 Microsoft 应用 ID"**。

         > [!NOTE]
         > 不能创建多个使用相同 **Microsoft 应用 ID 的机器人**。

      1. 然后“**审阅 + 创建**”。

          ![创建 Microsoft 应用 ID](~/assets/images/meeting-token-generator/meeting-token-generator-appidcreate.png)

      1. 如果验证通过，请选择"创建 **"**。

          设置自动程序服务需要一些时间。

      1. 选择“**转到资源**”。 

          ![部署应用](~/assets/images/meeting-token-generator/meeting-token-generator-botdeployment.png)

          已创建 Azure 自动程序。

          ![已创建 Azure 自动程序资源](~/assets/images/meeting-token-generator/meeting-token-generator-bot-page.png)

      **创建客户端密码**

        如果已新建 Microsoft 应用 **ID，请执行以下步骤**：

      1. 在左侧面板中，选择" **配置"**。 

         > [!TIP]
         > 保存 **Microsoft 应用 ID** 或 **客户端 ID** 供将来参考。

      1. 选择 **"自动程序类型"** 下的" **多租户"**。

          ![自动程序类型](~/assets/images/meeting-token-generator/bot-type.png)

      1. 在 **"Microsoft 应用 ID"旁边，** 选择" **管理"**。

          ![Microsoft 应用 ID](~/assets/images/meeting-token-generator/meeting-token-generator-config.png)

      1. 在" **客户端密码"** 部分，选择 **"新建客户端密码"**。 

          ![新客户端密码](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)

         将显示 **"添加客户端密码"** 窗口。  

      1. 输入 **"说明"**。

      1. 选择“**添加**”。

          ![将客户端密码添加到应用](~/assets/images/meeting-token-generator/meeting-token-generator-clientsecret.png)

      1. 在" **值"** 列中，选择 **"复制到剪贴板"**。

           ![客户端密码的值](~/assets/images/meeting-token-generator/meeting-token-generator-clientvalue.png)
         
         > [!TIP]
         > 保存 **客户端密码** 值或应用密码，供将来参考。

      **添加Microsoft Teams频道**

      1. 选择“主页”。

          ![主页](~/assets/images/meeting-token-generator/meeting-token-generator-gotohome.png)

      1. 从"最近使用的资源 **"中选择自动程序**。

      1. 选择 **左** 窗格中的"频道"。 

      1. 选择 **Microsoft Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/>.

      1. 选中复选框以接受 **服务条款**。

      1. 选择" **同意"**。

            ![服务条款](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)

      1. 选择“**保存**”。

            ![选择Teams](~/assets/images/meeting-token-generator/config-teams.png)   

      **为本地 Web 服务器创建隧道**

      使用 ngrok 创建到本地运行的 Web 服务器的公开可用 HTTPS 终结点的隧道。 在 ngrok 中运行以下命令：

       ```bash
       ngrok http -host-header=localhost 3978
       ```

      > [!NOTE]
      > 创建 ngrok 隧道时，`localhost 5000`如果你`3978`**选择命令行来** 运行你的应用，请使用 而不是 。

      > [!TIP]
      > 如果遇到 **ERR_NGROK_4018**，请按照命令提示符中提供的步骤注册 ngrok 并进行身份验证。 然后运行命令 `ngrok http -host-header=localhost 3978` 。


      **添加消息终结点**

      1. 从 ngrok 中，将 HTTPS URL (https 复制到 io) 。

          ![ngrok HTTPS URL](~/assets/images/meeting-token-generator/meeting-token-generator-ngrok.png)

          > [!NOTE]
          > ngrok 中的 HTTPS URL 是您的完全限定域名。
          > `WebAppDomain`是不包括的完全限定`https://`域名。

      1. In **设置** for the Azure bot that you created， select **Configuration**.

      1. 在 **消息终结点中**，使用 ngrok 和 URL 末尾的 HTTPS URL 添加 **/api/messages**。

          ![消息终结点](~/assets/images/meeting-token-generator/meeting-token-generator-messaging-endpoint.png)

      1. 选择“**应用**”。

          你已成功在 Azure Bot 服务中设置自动程序。
  - title: 更新Azure AD SSO 的应用注册
    durationInMinutes: 1
    content: |
      **通过 Azure AD 门户注册应用**  

      1. 转到 Microsoft Azure [门户](https://portal.azure.com/)。

      1. 选择“Azure Active Directory”。

      1. 在左侧导航面板中，选择 **"应用注册"**。

      1. 选择自动程序。

         ![应用注册](~/assets/images/meeting-token-generator/meeting-token-generator-appregister.png)

      1. 在“**管理**”下，选择“**公开 API**”。

      1. 选择 **"设置"**。

         ![公开 API](~/assets/images/meeting-token-generator/meeting-token-generator-exposeanapi.png)

      1. 以 **的形式设置应用程序 ID URI**`api://{AppID}`。

         ![设置链接](~/assets/images/meeting-token-generator/meeting-token-generator-setlink.png)

      1. 在 和 `WebAppDomain` 之间插入 `api://` 值 `/{AppID}`。</br>
          `api://ae57****.ngrok.io/{AppID}`</br>
          
         下图显示了域名：
          
          ![App ID URI](~/assets/images/meeting-token-generator/meeting-token-generator-appIDuri.png)

          > [!NOTE]
          > 如果您使用的是隧道服务（如 ngrok），请确保在 ngrok 子域发生更改时更新该值。
          > `For example: api://f631****.ngrok.io/92c11075-c629-4a1e-ab58-02b4fd4204c2`，其中 `f631****.ngrok.io` 是新的 ngrok 子域名称。

      1. 选择“**添加作用域**”。 

      1. 在出现的面板中，输入 作为`access_as_user`**范围名称**。

      1. 将 **Who可以同意？** 设置为 `Admins and users`。

      1. 若要使用作用域的适当 `access_as_user` 值配置管理员和用户同意提示，在字段中提供以下信息：</br>

           * 输入 `Teams can access the user’s profile` 作为 **管理员同意显示名称**。

           * 输入 `Allows Teams to call the app’s web APIs as the current user` 作为 **管理员同意说明**。

           * 输入 `Teams can access the user profile and make requests on the user’s behalf` 作为 **用户同意显示名称**。

           * 输入 `Enable Teams to call this app’s APIs with the same rights as the user` 作为 **用户同意说明**。

         下图显示了字段和值：

          ![添加范围](~/assets/images/meeting-token-generator/meeting-token-generator-addascope.png)

      1. 确保将“状态”设置为“已启用”。

      1. 选择要 **保存的"添加** 范围"。

          ![添加范围](~/assets/images/meeting-token-generator/meeting-token-generator-addscope2.png)

          > [!NOTE]
          > 范围 **名称** 应匹配应用程序 **ID** URI，并 `/access_as_user` 追加到末尾。</br>
             `api://ae57****.ngrok.io/00000000-0000-0000-0000-000000000000/access_as_user`

          ![Scopes](~/assets/images/meeting-token-generator/meeting-token-generator-scopes.png) 

      1. 在“**授权客户端应用程序**”部分中，确定要授权给应用的 Web 应用程序的应用程序。 

      1. 选择 **添加客户端应用程序**。 

          ![添加客户端应用](~/assets/images/meeting-token-generator/meeting-token-generator-selectclientapp.png) 

      1. 输入 **客户端 ID**： `1fec8e78-bce4-4aaf-ab1b-5451cc387264` Teams移动或桌面应用程序。 

          ![添加客户端应用程序 1](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp1.png) 

         可以输入 **客户端 ID**：`5e3ce6c0-2b1f-4285-8d4b-75ee78787346`用于Teams Web 应用程序。

          ![添加客户端应用程序 2](~/assets/images/meeting-token-generator/meeting-token-generator-addclientapp2.png) 

      1. 选择 **"授权范围"**。

          ![添加客户端应用程序 2](~/assets/images/meeting-token-generator/meeting-token-generator-authorizedscope1.png) 

         下图显示了客户端 ID：

           ![客户端应用程序](~/assets/images/meeting-token-generator/meeting-token-generator-clientapps.png) 

      1. 在左侧面板中，选择 **"API 权限"**。 

         > [!NOTE]
         > 只有在应用程序应用程序注册到其他租户Azure AD用户才需要同意这些权限。

      1. 选择“**添加权限**”。

           ![添加权限](~/assets/images/meeting-token-generator/meeting-token-generator-addpermission.png)

      1. 选择 **"Microsoft Graph"**。

      1. 选择“**委托的权限**”。

          默认情况下， **将选择 User.Read** 。

           ![用户](~/assets/images/meeting-token-generator/meeting-token-generator-userpermission.png)

      1. 添加以下权限：</br>
           * **email**
           * **offline_access**
           * **OpenId**
           * **profile**

      1. 选择 **添加权限**。

           ![其他权限](~/assets/images/meeting-token-generator/meeting-token-generator-otherpermissions.png)

      1. 从左侧面板中，选择 **"身份验证** "以设置重定向 URI。 

         > [!NOTE]
         > 如果未向应用授予 IT 管理员同意，用户必须在第一次使用应用时提供同意。
                 
           1. 选择 **添加平台**。
           1. 选择“Web”

              ![Web](~/assets/images/meeting-token-generator/meeting-token-generator-webauthentication.png)

           1. 通过追加到完全限定的域名，输入 `auth-end` 应用的重定向 URI：</br> 
             `https://ae57****.ngrok.io/auth-end`. </br>

           1. 通过 **选中以下复选框** 启用隐式授予和混合流：
               * **ID 令牌**
               * **访问令牌**

           1. 选择“**配置**”。

              ![Auth-end](~/assets/images/meeting-token-generator/meeting-token-generator-authend.png)
  - title: 设置应用设置
    durationInMinutes: 1
    content: |
      1. 导航到 **克隆存储库中的 appsettings.json** 。

          ![应用设置位置](~/assets/images/meeting-token-generator/meeting-token-generator-appsettingslocation.png)

      1. 在 **应用程序中打开 appsettings.json** **Visual Studio Code** 并更新以下信息：  

           * 设置为 `"MicrosoftAppId"` 自动程序 **Microsoft 应用 ID**。
           * 设置为 `"MicrosoftAppPassword"` 自动程序客户端密码 ID 值。
           * 设置为 `"AzureAd"."TenantId"` 使用应用的租户的租户 ID。

               > [!NOTE]
               > 此示例仅适用于当前租户。

           * 设置为 `"AzureAd"."ApplicationId"` 自动程序 **Microsoft 应用 ID**。
           * 设置为 `"ContentBubbleUrl"` 内容气泡 iframe url `(https://[WebAppDomain]/contentBubble.html)`。

               > [!NOTE]
               > `WebAppDomain` 是您的 ngrok 域，因此内容气泡 URL 类似于 `https://ae57****.ngrok.io/contentBubble.html`。

          ![应用设置](~/assets/images/meeting-token-generator/meeting-token-generator-appsettings.png)
  - title: 设置清单文件
    durationInMinutes: 1
    content: |
      1. 导航到 **克隆存储库中的 manifest.json** 。

          ![清单文件位置](~/assets/images/meeting-token-generator/meeting-token-generator-manifestlocation.png)

      1. 在 Visual Studio Code中打开 **manifest.json**，然后进行以下更改：

           * `1.11`设置为 `manifestVersion` 。

             > [!NOTE]
             > 提供最新版本。

           * `https://developer.microsoft.com/json-schemas/teams/v1.11/MicrosoftTeams.schema.json`设置为 `$schema` 。
           * `api://[WebAppDomainName]/[MicrosoftAppId]`设置为 `resource` 。
           * 将 `[companyName]` 替换为 `Contoso`。
           * 将以下部分替换为完全限定的域名：
             * `[websiteUrl]`
             * `[privacyUrl]`
             * `[termsOfUseUrl]`


             ![清单图像 1](~/assets/images/meeting-token-generator/meeting-token-generator-manifest-1.png)

           * 将 的所有匹配项 `[WebAppDomainName]` 替换为您的 ngrok 域名。
           * 将 的所有匹配项 `[MicrosoftAppId]` 替换为自动程序 **Microsoft 应用 ID**。

             ![清单图像 2](~/assets/images/meeting-token-generator/meeting-token-generator-manifest-2.png)
  - title: 使用 npm 安装生成客户端应用
    durationInMinutes: 1
    content: |
      **使用 npm install 生成客户端应用以生成可分发文件夹**

      1. 导航 **到克隆存储库中** 的应用文件夹。
      1. 复制 **应用文件夹** 路径。
      1. 打开一个新的命令提示符窗口，将当前目录更改为复制 **的应用** 路径。

         ![应用文件夹路径](~/assets/images/meeting-token-generator/meeting-token-generator-appfolderlocation.png)

      1. 运行 `npm install` 以下载程序包和依赖项。
      1. 运行 `npm run build` 以生成应用。

         ![生成应用](~/assets/images/meeting-token-generator/meeting-token-generator-buildapp.png)

         此过程在应用文件夹内生成可分发或 **/dist** 文件夹，其中资产将复制到其中。 服务器为位置中的静态文件提供服务。

         ![可分发文件夹](~/assets/images/meeting-token-generator/meeting-token-generator-distfolder.png)
  - title: 生成并运行服务
    durationInMinutes: 1
    content: |
      **使用 2019 或命令行Visual Studio和运行服务**

      # <a name="visual-studio-2019"></a>[Visual Studio 2019](#tab/vs2019)

         1. 启动 **Visual Studio 2019**。
         1. 导航到 **"FileOpen** >  >  **Project/Solution"**。

            ![打开文件](~/assets/images/meeting-token-generator/meeting-token-generator-VSopenfile.png)

         1. 从 **csharp** 文件夹中 **选择 TokenApp.csproj** 文件。

            ![令牌文件](~/assets/images/meeting-token-generator/meeting-token-generator-Tokenfileready.png)

         1. 按 **F5** 运行项目。

         1. 如果 **显示** 以下对话框，请选择"是"：

            ![信任证书](~/assets/images/meeting-token-generator/meeting-token-generator-certificate.png)

            随即打开一个网页，显示消息 **"应用已准备就绪！"**。

            ![应用就绪](~/assets/images/meeting-token-generator/meeting-token-generator-appisready.png) 

          
      # <a name="command-line"></a>[命令行](#tab/cli)

      导航到 **命令提示符窗口中的 csharp** 文件夹，然后输入以下命令：

      ```bash
      dotnet run
      ```

      ![Dotnet](~/assets/images/meeting-token-generator/meeting-token-generator-dotnetruncmd.png)
        
  - title: 启用开发人员预览版
    durationInMinutes: 1
    content: |
      **在桌面客户端中启用开发人员Teams预览**

      1. 在租户的管理控制台中启用应用上载。
         1. 登录以[Microsoft 365 管理中心](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/)管理员凭据登录。
         1. 在左侧面板中，选择" **全部显示"**。
         1. 选择 **"Teams"**。

            ![管理中心菜单](~/assets/images/meeting-token-generator/meeting-token-generator-admincenterimage.png)

         1. 在左侧面板中，选择"**Teams应用"**。
         
         1. 选择 **"设置策略"**。

            ![设置策略](~/assets/images/meeting-token-generator/meeting-token-generator-setuppolicies.png) 

         1. 选择 **"全局"**。

            ![切换为打开](~/assets/images/meeting-token-generator/meeting-token-generator-turnonsideloadimage.png)

         1. 将 **Upload应用切换到****"打开"** 位置。

            ![切换为打开](~/assets/images/meeting-token-generator/meeting-token-generator-toggleOn.png)

         1. 选择“**保存**”。 
         
            测试租户可以允许自定义应用旁加载。

            > [!NOTE]
            > 旁加载需要一些时间变为活动状态。

      1. 转到 **Microsoft Teams**。

      1. 从用户界面的右上角Teams，选择 `...`。

      1. 选择“**关于**”。 

      1. 选择 **"开发人员预览"**。

          ![开发者预览版](~/assets/images/meeting-token-generator/meeting-token-generator-devpreview.png)

      1. 选择 **切换到开发人员预览**。

          ![切换到开发人员预览版](~/assets/images/meeting-token-generator/meeting-token-generator-switchtodevpreview.png)
  - title: 将会议令牌应用程序添加到Teams
    durationInMinutes: 1
    content: |
      **创建会议Teams添加会议令牌应用**

      1. 在克隆的存储库中，导航到 **csharp > Resources > Manifest**。

      1. 创建.zip清单文件夹中存在以下 **文件的文件：** 
         * manifest.json
         * icon-outline.png
         * icon-color.png

         ![Zip 文件](~/assets/images/meeting-token-generator/meeting-token-generator-zipfile.png) 

      1. 创建一个与几个演示者和与会者的会议。

      1. 创建会议后，转到会议详细信息页面，然后选择"**添加****应用"**。

         ![添加应用](~/assets/images/meeting-token-generator/meeting-token-generator-addanapp.png) 

      1. 在打开的弹出窗口中，选择" **管理应用"**。

         ![管理应用](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsimage.png)

      1. 选择 **Upload自定义应用"**。 

         ![Upload自定义应用](~/assets/images/meeting-token-generator/meeting-token-generator-uploadcustomapp.png)

      1. 选择 **"** 打开"上载.zip清单 **文件夹中创建的文件** 。

         ![选择 zip 文件](~/assets/images/meeting-token-generator/meeting-token-generator-selectzip.png)

      1. 选择“**添加**”。

         ![添加应用](~/assets/images/meeting-token-generator/meeting-token-generator-addtheapp.png)

         " **管理应用程序** "部分显示应用程序列表。

         ![管理应用中的应用](~/assets/images/meeting-token-generator/meeting-token-generator-manageappsection.png)

      1. 转到Teams会议。

      1. 选择“**添加应用**”。 

         在应用程序选择页中，应用程序显示为" **会议令牌应用程序"**。

         ![应用中的应用Teams](~/assets/images/meeting-token-generator/meeting-token-generator-appicon.png)

      1. 选择 **会议令牌应用程序**。

      1. 选择“**保存**”。

         ![欢迎应用](~/assets/images/meeting-token-generator/meeting-token-generator-welcomeapp.png)

         该应用在会议聊天中可见。 

      1. 启动会议。 

         图标在会议控制栏中可见。

          ![Meet 中的标记](~/assets/images/meeting-token-generator/meeting-token-generator-tokeninmeet.png)

       > [!NOTE] 
       > 当您处理自己的项目时，请确保使用持久存储机制来存储租户的令牌信息和服务 URL。
  - title: 完成挑战
    durationInMinutes: 1
    content: |
      你提供类似这样的内容了吗？

      ![你的令牌](~/assets/images/meeting-token-generator/meeting-token-generator-yourtokennumber.png)
  - content: |
      你已完成了会议令牌生成器应用入门教程。

      查看应用程序在实时方案中的外观：

      ![实时](~/assets/images/meeting-token-generator/meeting-token-generator-realtimescenario.png)